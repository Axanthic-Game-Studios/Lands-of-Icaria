package com.axanthic.icaria.common.registry;

import net.minecraft.MethodsReturnNonnullByDefault;
import net.minecraft.world.level.block.Block;
import net.minecraft.world.phys.shapes.BooleanOp;
import net.minecraft.world.phys.shapes.Shapes;
import net.minecraft.world.phys.shapes.VoxelShape;

import java.util.stream.Stream;

import javax.annotation.ParametersAreNonnullByDefault;

@SuppressWarnings("unused")

@MethodsReturnNonnullByDefault
@ParametersAreNonnullByDefault

public class IcariaShapes {

	public static class ForgeShapes {
		public static final VoxelShape BOTTOM_BACK_LEFT_NORTH = Stream.of(Block.box(2.0D, 14.0D, 0.0D, 4.0D, 16.0D, 2.0D), Block.box(0.0D, 14.0D, 4.0D, 4.0D, 16.0D, 14.0D), Block.box(0.0D, 14.0D, 2.0D, 4.0D, 16.0D, 4.0D), Block.box(0.0D, 0.0D, 0.0D, 15.0D, 2.0D, 15.0D), Block.box(0.0D, 12.0D, 0.0D, 15.0D, 14.0D, 15.0D), Block.box(0.0D, 2.0D, 0.0D, 15.0D, 12.0D, 15.0D), Block.box(4.0D, 14.0D, 0.0D, 14.0D, 16.0D, 14.0D), Block.box(-4.0D, 14.0D, 4.0D, 0.0D, 16.0D, 14.0D), Block.box(-4.0D, 14.0D, 0.0D, -2.0D, 16.0D, 2.0D), Block.box(-4.0D, 14.0D, 2.0D, 0.0D, 16.0D, 4.0D), Block.box(-14.0D, 14.0D, 2.0D, -4.0D, 16.0D, 14.0D), Block.box(-15.0D, 0.0D, 0.0D, 0.0D, 2.0D, 15.0D), Block.box(-15.0D, 12.0D, 0.0D, 0.0D, 14.0D, 15.0D), Block.box(-15.0D, 2.0D, 0.0D, 0.0D, 12.0D, 15.0D), Block.box(0.0D, 9.0D, -13.0D, 13.0D, 12.0D, 0.0D), Block.box(0.0D, 0.0D, -15.0D, 15.0D, 2.0D, 0.0D), Block.box(6.0D, 2.0D, -15.0D, 15.0D, 7.0D, -13.0D), Block.box(0.0D, 7.0D, -15.0D, 15.0D, 12.0D, -13.0D), Block.box(0.0D, 12.0D, -15.0D, 15.0D, 14.0D, 0.0D), Block.box(13.0D, 2.0D, -13.0D, 15.0D, 12.0D, 0.0D), Block.box(0.0D, 15.0D, -5.0D, 3.0D, 16.0D, -4.0D), Block.box(4.0D, 14.0D, -12.0D, 12.0D, 15.0D, -8.0D), Block.box(5.0D, 15.0D, -11.0D, 11.0D, 16.0D, -9.0D), Block.box(0.0D, 14.0D, -4.0D, 4.0D, 16.0D, -2.0D), Block.box(2.0D, 14.0D, -2.0D, 4.0D, 16.0D, 0.0D), Block.box(-3.0D, 15.0D, -5.0D, 0.0D, 16.0D, -4.0D), Block.box(-15.0D, 0.0D, -15.0D, 0.0D, 2.0D, 0.0D), Block.box(-15.0D, 2.0D, -15.0D, -6.0D, 7.0D, -13.0D), Block.box(-15.0D, 7.0D, -15.0D, 0.0D, 12.0D, -13.0D), Block.box(-7.0D, 12.0D, -15.0D, 0.0D, 14.0D, 0.0D), Block.box(-7.0D, 9.0D, -13.0D, 0.0D, 12.0D, 0.0D), Block.box(-15.0D, 2.0D, -13.0D, -13.0D, 12.0D, 0.0D), Block.box(-4.0D, 14.0D, -4.0D, 0.0D, 16.0D, -2.0D), Block.box(-4.0D, 14.0D, -2.0D, -2.0D, 16.0D, 0.0D), Block.box(-15.0D, 12.0D, -15.0D, -11.0D, 14.0D, 0.0D), Block.box(-11.0D, 12.0D, -15.0D, -7.0D, 14.0D, -9.0D), Block.box(-13.0D, 9.0D, -13.0D, -7.0D, 12.0D, -9.0D), Block.box(-13.0D, 9.0D, -9.0D, -11.0D, 12.0D, -1.0D), Block.box(-11.0D, 12.0D, -1.0D, -7.0D, 14.0D, 0.0D), Block.box(-13.0D, 9.0D, -1.0D, -7.0D, 12.0D, 0.0D), Block.box(-11.0D, 9.0D, -9.0D, -7.0D, 10.0D, -1.0D), Block.box(0.0D, 16.0D, 2.0D, 4.0D, 31.0D, 4.0D), Block.box(2.0D, 16.0D, 0.0D, 4.0D, 31.0D, 2.0D), Block.box(0.0D, 31.0D, 3.0D, 5.0D, 32.0D, 5.0D), Block.box(3.0D, 31.0D, 0.0D, 5.0D, 32.0D, 3.0D), Block.box(4.0D, 16.0D, 0.0D, 14.0D, 22.0D, 14.0D), Block.box(0.0D, 16.0D, 4.0D, 4.0D, 22.0D, 14.0D), Block.box(0.0D, 22.0D, 4.0D, 4.0D, 30.0D, 13.0D), Block.box(4.0D, 22.0D, 0.0D, 13.0D, 30.0D, 13.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(-4.0D, 16.0D, 4.0D, 0.0D, 22.0D, 14.0D), Block.box(-4.0D, 22.0D, 4.0D, 0.0D, 30.0D, 13.0D), Block.box(-12.0D, 26.0D, 1.0D, -4.0D, 27.0D, 2.0D), Block.box(-4.0D, 16.0D, 2.0D, 0.0D, 31.0D, 4.0D), Block.box(-4.0D, 16.0D, 0.0D, -2.0D, 31.0D, 2.0D), Block.box(-5.0D, 31.0D, 3.0D, 0.0D, 32.0D, 5.0D), Block.box(-5.0D, 31.0D, 0.0D, -3.0D, 32.0D, 3.0D), Block.box(-14.0D, 16.0D, 2.0D, -4.0D, 22.0D, 14.0D), Block.box(-13.0D, 22.0D, 3.0D, -4.0D, 30.0D, 13.0D), Block.box(-11.0D, 30.0D, 5.0D, -5.0D, 32.0D, 11.0D), Block.box(-13.0D, 26.0D, 0.0D, -12.0D, 27.0D, 3.0D), Block.box(0.0D, 16.0D, -5.0D, 3.0D, 21.0D, -4.0D), Block.box(3.0D, 16.0D, -13.0D, 13.0D, 19.0D, -7.0D), Block.box(0.0D, 16.0D, -4.0D, 4.0D, 31.0D, -2.0D), Block.box(2.0D, 16.0D, -2.0D, 4.0D, 31.0D, 0.0D), Block.box(4.0D, 26.0D, -13.0D, 13.0D, 30.0D, 0.0D), Block.box(3.0D, 26.0D, -13.0D, 4.0D, 30.0D, -4.0D), Block.box(0.0D, 31.0D, -5.0D, 5.0D, 32.0D, -3.0D), Block.box(3.0D, 31.0D, -3.0D, 5.0D, 32.0D, 0.0D), Block.box(5.0D, 30.0D, -11.0D, 11.0D, 32.0D, -5.0D), Block.box(0.0D, 26.0D, -5.0D, 3.0D, 27.0D, -4.0D), Block.box(-3.0D, 16.0D, -5.0D, 0.0D, 21.0D, -4.0D), Block.box(-4.0D, 16.0D, -2.0D, -2.0D, 31.0D, 0.0D), Block.box(-5.0D, 31.0D, -3.0D, -3.0D, 32.0D, 0.0D), Block.box(-4.0D, 16.0D, -4.0D, 0.0D, 31.0D, -2.0D), Block.box(-5.0D, 31.0D, -5.0D, 0.0D, 32.0D, -3.0D), Block.box(-12.0D, 26.0D, -5.0D, -4.0D, 27.0D, -4.0D), Block.box(-12.0D, 26.0D, -3.0D, -4.0D, 27.0D, -2.0D), Block.box(-12.0D, 26.0D, -1.0D, -4.0D, 27.0D, 0.0D), Block.box(-4.0D, 26.0D, -5.0D, 0.0D, 27.0D, -4.0D), Block.box(-13.0D, 26.0D, -5.0D, -12.0D, 27.0D, 0.0D), Block.box(-8.0D, 27.0D, -6.0D, -5.0D, 30.0D, -1.0D), Block.box(-7.0D, 21.0D, -4.0D, -6.0D, 27.0D, -3.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_BACK_LEFT_EAST = Stream.of(Block.box(14.0D, 14.0D, 2.0D, 16.0D, 16.0D, 4.0D), Block.box(2.0D, 14.0D, 0.0D, 12.0D, 16.0D, 4.0D), Block.box(12.0D, 14.0D, 0.0D, 14.0D, 16.0D, 4.0D), Block.box(1.0D, 0.0D, 0.0D, 16.0D, 2.0D, 15.0D), Block.box(1.0D, 12.0D, 0.0D, 16.0D, 14.0D, 15.0D), Block.box(1.0D, 2.0D, 0.0D, 16.0D, 12.0D, 15.0D), Block.box(2.0D, 14.0D, 4.0D, 16.0D, 16.0D, 14.0D), Block.box(2.0D, 14.0D, -4.0D, 12.0D, 16.0D, 0.0D), Block.box(14.0D, 14.0D, -4.0D, 16.0D, 16.0D, -2.0D), Block.box(12.0D, 14.0D, -4.0D, 14.0D, 16.0D, 0.0D), Block.box(2.0D, 14.0D, -14.0D, 14.0D, 16.0D, -4.0D), Block.box(1.0D, 0.0D, -15.0D, 16.0D, 2.0D, 0.0D), Block.box(1.0D, 12.0D, -15.0D, 16.0D, 14.0D, 0.0D), Block.box(1.0D, 2.0D, -15.0D, 16.0D, 12.0D, 0.0D), Block.box(16.0D, 9.0D, 0.0D, 29.0D, 12.0D, 13.0D), Block.box(16.0D, 0.0D, 0.0D, 31.0D, 2.0D, 15.0D), Block.box(29.0D, 2.0D, 6.0D, 31.0D, 7.0D, 15.0D), Block.box(29.0D, 7.0D, 0.0D, 31.0D, 12.0D, 15.0D), Block.box(16.0D, 12.0D, 0.0D, 31.0D, 14.0D, 15.0D), Block.box(16.0D, 2.0D, 13.0D, 29.0D, 12.0D, 15.0D), Block.box(20.0D, 15.0D, 0.0D, 21.0D, 16.0D, 3.0D), Block.box(24.0D, 14.0D, 4.0D, 28.0D, 15.0D, 12.0D), Block.box(25.0D, 15.0D, 5.0D, 27.0D, 16.0D, 11.0D), Block.box(18.0D, 14.0D, 0.0D, 20.0D, 16.0D, 4.0D), Block.box(16.0D, 14.0D, 2.0D, 18.0D, 16.0D, 4.0D), Block.box(20.0D, 15.0D, -3.0D, 21.0D, 16.0D, 0.0D), Block.box(16.0D, 0.0D, -15.0D, 31.0D, 2.0D, 0.0D), Block.box(29.0D, 2.0D, -15.0D, 31.0D, 7.0D, -6.0D), Block.box(29.0D, 7.0D, -15.0D, 31.0D, 12.0D, 0.0D), Block.box(16.0D, 12.0D, -7.0D, 31.0D, 14.0D, 0.0D), Block.box(16.0D, 9.0D, -7.0D, 29.0D, 12.0D, 0.0D), Block.box(16.0D, 2.0D, -15.0D, 29.0D, 12.0D, -13.0D), Block.box(18.0D, 14.0D, -4.0D, 20.0D, 16.0D, 0.0D), Block.box(16.0D, 14.0D, -4.0D, 18.0D, 16.0D, -2.0D), Block.box(16.0D, 12.0D, -15.0D, 31.0D, 14.0D, -11.0D), Block.box(25.0D, 12.0D, -11.0D, 31.0D, 14.0D, -7.0D), Block.box(25.0D, 9.0D, -13.0D, 29.0D, 12.0D, -7.0D), Block.box(17.0D, 9.0D, -13.0D, 25.0D, 12.0D, -11.0D), Block.box(16.0D, 12.0D, -11.0D, 17.0D, 14.0D, -7.0D), Block.box(16.0D, 9.0D, -13.0D, 17.0D, 12.0D, -7.0D), Block.box(17.0D, 9.0D, -11.0D, 25.0D, 10.0D, -7.0D), Block.box(12.0D, 16.0D, 0.0D, 14.0D, 31.0D, 4.0D), Block.box(14.0D, 16.0D, 2.0D, 16.0D, 31.0D, 4.0D), Block.box(11.0D, 31.0D, 0.0D, 13.0D, 32.0D, 5.0D), Block.box(13.0D, 31.0D, 3.0D, 16.0D, 32.0D, 5.0D), Block.box(2.0D, 16.0D, 4.0D, 16.0D, 22.0D, 14.0D), Block.box(2.0D, 16.0D, 0.0D, 12.0D, 22.0D, 4.0D), Block.box(3.0D, 22.0D, 0.0D, 12.0D, 30.0D, 4.0D), Block.box(3.0D, 22.0D, 4.0D, 16.0D, 30.0D, 13.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(2.0D, 16.0D, -4.0D, 12.0D, 22.0D, 0.0D), Block.box(3.0D, 22.0D, -4.0D, 12.0D, 30.0D, 0.0D), Block.box(14.0D, 26.0D, -12.0D, 15.0D, 27.0D, -4.0D), Block.box(12.0D, 16.0D, -4.0D, 14.0D, 31.0D, 0.0D), Block.box(14.0D, 16.0D, -4.0D, 16.0D, 31.0D, -2.0D), Block.box(11.0D, 31.0D, -5.0D, 13.0D, 32.0D, 0.0D), Block.box(13.0D, 31.0D, -5.0D, 16.0D, 32.0D, -3.0D), Block.box(2.0D, 16.0D, -14.0D, 14.0D, 22.0D, -4.0D), Block.box(3.0D, 22.0D, -13.0D, 13.0D, 30.0D, -4.0D), Block.box(5.0D, 30.0D, -11.0D, 11.0D, 32.0D, -5.0D), Block.box(13.0D, 26.0D, -13.0D, 16.0D, 27.0D, -12.0D), Block.box(20.0D, 16.0D, 0.0D, 21.0D, 21.0D, 3.0D), Block.box(23.0D, 16.0D, 3.0D, 29.0D, 19.0D, 13.0D), Block.box(18.0D, 16.0D, 0.0D, 20.0D, 31.0D, 4.0D), Block.box(16.0D, 16.0D, 2.0D, 18.0D, 31.0D, 4.0D), Block.box(16.0D, 26.0D, 4.0D, 29.0D, 30.0D, 13.0D), Block.box(20.0D, 26.0D, 3.0D, 29.0D, 30.0D, 4.0D), Block.box(19.0D, 31.0D, 0.0D, 21.0D, 32.0D, 5.0D), Block.box(16.0D, 31.0D, 3.0D, 19.0D, 32.0D, 5.0D), Block.box(21.0D, 30.0D, 5.0D, 27.0D, 32.0D, 11.0D), Block.box(20.0D, 26.0D, 0.0D, 21.0D, 27.0D, 3.0D), Block.box(20.0D, 16.0D, -3.0D, 21.0D, 21.0D, 0.0D), Block.box(16.0D, 16.0D, -4.0D, 18.0D, 31.0D, -2.0D), Block.box(16.0D, 31.0D, -5.0D, 19.0D, 32.0D, -3.0D), Block.box(18.0D, 16.0D, -4.0D, 20.0D, 31.0D, 0.0D), Block.box(19.0D, 31.0D, -5.0D, 21.0D, 32.0D, 0.0D), Block.box(20.0D, 26.0D, -12.0D, 21.0D, 27.0D, -4.0D), Block.box(18.0D, 26.0D, -12.0D, 19.0D, 27.0D, -4.0D), Block.box(16.0D, 26.0D, -12.0D, 17.0D, 27.0D, -4.0D), Block.box(20.0D, 26.0D, -4.0D, 21.0D, 27.0D, 0.0D), Block.box(16.0D, 26.0D, -13.0D, 21.0D, 27.0D, -12.0D), Block.box(17.0D, 27.0D, -8.0D, 22.0D, 30.0D, -5.0D), Block.box(19.0D, 21.0D, -7.0D, 20.0D, 27.0D, -6.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_BACK_LEFT_SOUTH = Stream.of(Block.box(12.0D, 14.0D, 14.0D, 14.0D, 16.0D, 16.0D), Block.box(12.0D, 14.0D, 2.0D, 16.0D, 16.0D, 12.0D), Block.box(12.0D, 14.0D, 12.0D, 16.0D, 16.0D, 14.0D), Block.box(1.0D, 0.0D, 1.0D, 16.0D, 2.0D, 16.0D), Block.box(1.0D, 12.0D, 1.0D, 16.0D, 14.0D, 16.0D), Block.box(1.0D, 2.0D, 1.0D, 16.0D, 12.0D, 16.0D), Block.box(2.0D, 14.0D, 2.0D, 12.0D, 16.0D, 16.0D), Block.box(16.0D, 14.0D, 2.0D, 20.0D, 16.0D, 12.0D), Block.box(18.0D, 14.0D, 14.0D, 20.0D, 16.0D, 16.0D), Block.box(16.0D, 14.0D, 12.0D, 20.0D, 16.0D, 14.0D), Block.box(20.0D, 14.0D, 2.0D, 30.0D, 16.0D, 14.0D), Block.box(16.0D, 0.0D, 1.0D, 31.0D, 2.0D, 16.0D), Block.box(16.0D, 12.0D, 1.0D, 31.0D, 14.0D, 16.0D), Block.box(16.0D, 2.0D, 1.0D, 31.0D, 12.0D, 16.0D), Block.box(3.0D, 9.0D, 16.0D, 16.0D, 12.0D, 29.0D), Block.box(1.0D, 0.0D, 16.0D, 16.0D, 2.0D, 31.0D), Block.box(1.0D, 2.0D, 29.0D, 10.0D, 7.0D, 31.0D), Block.box(1.0D, 7.0D, 29.0D, 16.0D, 12.0D, 31.0D), Block.box(1.0D, 12.0D, 16.0D, 16.0D, 14.0D, 31.0D), Block.box(1.0D, 2.0D, 16.0D, 3.0D, 12.0D, 29.0D), Block.box(13.0D, 15.0D, 20.0D, 16.0D, 16.0D, 21.0D), Block.box(4.0D, 14.0D, 24.0D, 12.0D, 15.0D, 28.0D), Block.box(5.0D, 15.0D, 25.0D, 11.0D, 16.0D, 27.0D), Block.box(12.0D, 14.0D, 18.0D, 16.0D, 16.0D, 20.0D), Block.box(12.0D, 14.0D, 16.0D, 14.0D, 16.0D, 18.0D), Block.box(16.0D, 15.0D, 20.0D, 19.0D, 16.0D, 21.0D), Block.box(16.0D, 0.0D, 16.0D, 31.0D, 2.0D, 31.0D), Block.box(22.0D, 2.0D, 29.0D, 31.0D, 7.0D, 31.0D), Block.box(16.0D, 7.0D, 29.0D, 31.0D, 12.0D, 31.0D), Block.box(16.0D, 12.0D, 16.0D, 23.0D, 14.0D, 31.0D), Block.box(16.0D, 9.0D, 16.0D, 23.0D, 12.0D, 29.0D), Block.box(29.0D, 2.0D, 16.0D, 31.0D, 12.0D, 29.0D), Block.box(16.0D, 14.0D, 18.0D, 20.0D, 16.0D, 20.0D), Block.box(18.0D, 14.0D, 16.0D, 20.0D, 16.0D, 18.0D), Block.box(27.0D, 12.0D, 16.0D, 31.0D, 14.0D, 31.0D), Block.box(23.0D, 12.0D, 25.0D, 27.0D, 14.0D, 31.0D), Block.box(23.0D, 9.0D, 25.0D, 29.0D, 12.0D, 29.0D), Block.box(27.0D, 9.0D, 17.0D, 29.0D, 12.0D, 25.0D), Block.box(23.0D, 12.0D, 16.0D, 27.0D, 14.0D, 17.0D), Block.box(23.0D, 9.0D, 16.0D, 29.0D, 12.0D, 17.0D), Block.box(23.0D, 9.0D, 17.0D, 27.0D, 10.0D, 25.0D), Block.box(12.0D, 16.0D, 12.0D, 16.0D, 31.0D, 14.0D), Block.box(12.0D, 16.0D, 14.0D, 14.0D, 31.0D, 16.0D), Block.box(11.0D, 31.0D, 11.0D, 16.0D, 32.0D, 13.0D), Block.box(11.0D, 31.0D, 13.0D, 13.0D, 32.0D, 16.0D), Block.box(2.0D, 16.0D, 2.0D, 12.0D, 22.0D, 16.0D), Block.box(12.0D, 16.0D, 2.0D, 16.0D, 22.0D, 12.0D), Block.box(12.0D, 22.0D, 3.0D, 16.0D, 30.0D, 12.0D), Block.box(3.0D, 22.0D, 3.0D, 12.0D, 30.0D, 16.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(16.0D, 16.0D, 2.0D, 20.0D, 22.0D, 12.0D), Block.box(16.0D, 22.0D, 3.0D, 20.0D, 30.0D, 12.0D), Block.box(20.0D, 26.0D, 14.0D, 28.0D, 27.0D, 15.0D), Block.box(16.0D, 16.0D, 12.0D, 20.0D, 31.0D, 14.0D), Block.box(18.0D, 16.0D, 14.0D, 20.0D, 31.0D, 16.0D), Block.box(16.0D, 31.0D, 11.0D, 21.0D, 32.0D, 13.0D), Block.box(19.0D, 31.0D, 13.0D, 21.0D, 32.0D, 16.0D), Block.box(20.0D, 16.0D, 2.0D, 30.0D, 22.0D, 14.0D), Block.box(20.0D, 22.0D, 3.0D, 29.0D, 30.0D, 13.0D), Block.box(21.0D, 30.0D, 5.0D, 27.0D, 32.0D, 11.0D), Block.box(28.0D, 26.0D, 13.0D, 29.0D, 27.0D, 16.0D), Block.box(13.0D, 16.0D, 20.0D, 16.0D, 21.0D, 21.0D), Block.box(3.0D, 16.0D, 23.0D, 13.0D, 19.0D, 29.0D), Block.box(12.0D, 16.0D, 18.0D, 16.0D, 31.0D, 20.0D), Block.box(12.0D, 16.0D, 16.0D, 14.0D, 31.0D, 18.0D), Block.box(3.0D, 26.0D, 16.0D, 12.0D, 30.0D, 29.0D), Block.box(12.0D, 26.0D, 20.0D, 13.0D, 30.0D, 29.0D), Block.box(11.0D, 31.0D, 19.0D, 16.0D, 32.0D, 21.0D), Block.box(11.0D, 31.0D, 16.0D, 13.0D, 32.0D, 19.0D), Block.box(5.0D, 30.0D, 21.0D, 11.0D, 32.0D, 27.0D), Block.box(13.0D, 26.0D, 20.0D, 16.0D, 27.0D, 21.0D), Block.box(16.0D, 16.0D, 20.0D, 19.0D, 21.0D, 21.0D), Block.box(18.0D, 16.0D, 16.0D, 20.0D, 31.0D, 18.0D), Block.box(19.0D, 31.0D, 16.0D, 21.0D, 32.0D, 19.0D), Block.box(16.0D, 16.0D, 18.0D, 20.0D, 31.0D, 20.0D), Block.box(16.0D, 31.0D, 19.0D, 21.0D, 32.0D, 21.0D), Block.box(20.0D, 26.0D, 20.0D, 28.0D, 27.0D, 21.0D), Block.box(20.0D, 26.0D, 18.0D, 28.0D, 27.0D, 19.0D), Block.box(20.0D, 26.0D, 16.0D, 28.0D, 27.0D, 17.0D), Block.box(16.0D, 26.0D, 20.0D, 20.0D, 27.0D, 21.0D), Block.box(28.0D, 26.0D, 16.0D, 29.0D, 27.0D, 21.0D), Block.box(21.0D, 27.0D, 17.0D, 24.0D, 30.0D, 22.0D), Block.box(22.0D, 21.0D, 19.0D, 23.0D, 27.0D, 20.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_BACK_LEFT_WEST = Stream.of(Block.box(0.0D, 14.0D, 12.0D, 2.0D, 16.0D, 14.0D), Block.box(4.0D, 14.0D, 12.0D, 14.0D, 16.0D, 16.0D), Block.box(2.0D, 14.0D, 12.0D, 4.0D, 16.0D, 16.0D), Block.box(0.0D, 0.0D, 1.0D, 15.0D, 2.0D, 16.0D), Block.box(0.0D, 12.0D, 1.0D, 15.0D, 14.0D, 16.0D), Block.box(0.0D, 2.0D, 1.0D, 15.0D, 12.0D, 16.0D), Block.box(0.0D, 14.0D, 2.0D, 14.0D, 16.0D, 12.0D), Block.box(4.0D, 14.0D, 16.0D, 14.0D, 16.0D, 20.0D), Block.box(0.0D, 14.0D, 18.0D, 2.0D, 16.0D, 20.0D), Block.box(2.0D, 14.0D, 16.0D, 4.0D, 16.0D, 20.0D), Block.box(2.0D, 14.0D, 20.0D, 14.0D, 16.0D, 30.0D), Block.box(0.0D, 0.0D, 16.0D, 15.0D, 2.0D, 31.0D), Block.box(0.0D, 12.0D, 16.0D, 15.0D, 14.0D, 31.0D), Block.box(0.0D, 2.0D, 16.0D, 15.0D, 12.0D, 31.0D), Block.box(-13.0D, 9.0D, 3.0D, 0.0D, 12.0D, 16.0D), Block.box(-15.0D, 0.0D, 1.0D, 0.0D, 2.0D, 16.0D), Block.box(-15.0D, 2.0D, 1.0D, -13.0D, 7.0D, 10.0D), Block.box(-15.0D, 7.0D, 1.0D, -13.0D, 12.0D, 16.0D), Block.box(-15.0D, 12.0D, 1.0D, 0.0D, 14.0D, 16.0D), Block.box(-13.0D, 2.0D, 1.0D, 0.0D, 12.0D, 3.0D), Block.box(-5.0D, 15.0D, 13.0D, -4.0D, 16.0D, 16.0D), Block.box(-12.0D, 14.0D, 4.0D, -8.0D, 15.0D, 12.0D), Block.box(-11.0D, 15.0D, 5.0D, -9.0D, 16.0D, 11.0D), Block.box(-4.0D, 14.0D, 12.0D, -2.0D, 16.0D, 16.0D), Block.box(-2.0D, 14.0D, 12.0D, 0.0D, 16.0D, 14.0D), Block.box(-5.0D, 15.0D, 16.0D, -4.0D, 16.0D, 19.0D), Block.box(-15.0D, 0.0D, 16.0D, 0.0D, 2.0D, 31.0D), Block.box(-15.0D, 2.0D, 22.0D, -13.0D, 7.0D, 31.0D), Block.box(-15.0D, 7.0D, 16.0D, -13.0D, 12.0D, 31.0D), Block.box(-15.0D, 12.0D, 16.0D, 0.0D, 14.0D, 23.0D), Block.box(-13.0D, 9.0D, 16.0D, 0.0D, 12.0D, 23.0D), Block.box(-13.0D, 2.0D, 29.0D, 0.0D, 12.0D, 31.0D), Block.box(-4.0D, 14.0D, 16.0D, -2.0D, 16.0D, 20.0D), Block.box(-2.0D, 14.0D, 18.0D, 0.0D, 16.0D, 20.0D), Block.box(-15.0D, 12.0D, 27.0D, 0.0D, 14.0D, 31.0D), Block.box(-15.0D, 12.0D, 23.0D, -9.0D, 14.0D, 27.0D), Block.box(-13.0D, 9.0D, 23.0D, -9.0D, 12.0D, 29.0D), Block.box(-9.0D, 9.0D, 27.0D, -1.0D, 12.0D, 29.0D), Block.box(-1.0D, 12.0D, 23.0D, 0.0D, 14.0D, 27.0D), Block.box(-1.0D, 9.0D, 23.0D, 0.0D, 12.0D, 29.0D), Block.box(-9.0D, 9.0D, 23.0D, -1.0D, 10.0D, 27.0D), Block.box(2.0D, 16.0D, 12.0D, 4.0D, 31.0D, 16.0D), Block.box(0.0D, 16.0D, 12.0D, 2.0D, 31.0D, 14.0D), Block.box(3.0D, 31.0D, 11.0D, 5.0D, 32.0D, 16.0D), Block.box(0.0D, 31.0D, 11.0D, 3.0D, 32.0D, 13.0D), Block.box(0.0D, 16.0D, 2.0D, 14.0D, 22.0D, 12.0D), Block.box(4.0D, 16.0D, 12.0D, 14.0D, 22.0D, 16.0D), Block.box(4.0D, 22.0D, 12.0D, 13.0D, 30.0D, 16.0D), Block.box(0.0D, 22.0D, 3.0D, 13.0D, 30.0D, 12.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(4.0D, 16.0D, 16.0D, 14.0D, 22.0D, 20.0D), Block.box(4.0D, 22.0D, 16.0D, 13.0D, 30.0D, 20.0D), Block.box(1.0D, 26.0D, 20.0D, 2.0D, 27.0D, 28.0D), Block.box(2.0D, 16.0D, 16.0D, 4.0D, 31.0D, 20.0D), Block.box(0.0D, 16.0D, 18.0D, 2.0D, 31.0D, 20.0D), Block.box(3.0D, 31.0D, 16.0D, 5.0D, 32.0D, 21.0D), Block.box(0.0D, 31.0D, 19.0D, 3.0D, 32.0D, 21.0D), Block.box(2.0D, 16.0D, 20.0D, 14.0D, 22.0D, 30.0D), Block.box(3.0D, 22.0D, 20.0D, 13.0D, 30.0D, 29.0D), Block.box(5.0D, 30.0D, 21.0D, 11.0D, 32.0D, 27.0D), Block.box(0.0D, 26.0D, 28.0D, 3.0D, 27.0D, 29.0D), Block.box(-5.0D, 16.0D, 13.0D, -4.0D, 21.0D, 16.0D), Block.box(-13.0D, 16.0D, 3.0D, -7.0D, 19.0D, 13.0D), Block.box(-4.0D, 16.0D, 12.0D, -2.0D, 31.0D, 16.0D), Block.box(-2.0D, 16.0D, 12.0D, 0.0D, 31.0D, 14.0D), Block.box(-13.0D, 26.0D, 3.0D, 0.0D, 30.0D, 12.0D), Block.box(-13.0D, 26.0D, 12.0D, -4.0D, 30.0D, 13.0D), Block.box(-5.0D, 31.0D, 11.0D, -3.0D, 32.0D, 16.0D), Block.box(-3.0D, 31.0D, 11.0D, 0.0D, 32.0D, 13.0D), Block.box(-11.0D, 30.0D, 5.0D, -5.0D, 32.0D, 11.0D), Block.box(-5.0D, 26.0D, 13.0D, -4.0D, 27.0D, 16.0D), Block.box(-5.0D, 16.0D, 16.0D, -4.0D, 21.0D, 19.0D), Block.box(-2.0D, 16.0D, 18.0D, 0.0D, 31.0D, 20.0D), Block.box(-3.0D, 31.0D, 19.0D, 0.0D, 32.0D, 21.0D), Block.box(-4.0D, 16.0D, 16.0D, -2.0D, 31.0D, 20.0D), Block.box(-5.0D, 31.0D, 16.0D, -3.0D, 32.0D, 21.0D), Block.box(-5.0D, 26.0D, 20.0D, -4.0D, 27.0D, 28.0D), Block.box(-3.0D, 26.0D, 20.0D, -2.0D, 27.0D, 28.0D), Block.box(-1.0D, 26.0D, 20.0D, 0.0D, 27.0D, 28.0D), Block.box(-5.0D, 26.0D, 16.0D, -4.0D, 27.0D, 20.0D), Block.box(-5.0D, 26.0D, 28.0D, 0.0D, 27.0D, 29.0D), Block.box(-6.0D, 27.0D, 21.0D, -1.0D, 30.0D, 24.0D), Block.box(-4.0D, 21.0D, 22.0D, -3.0D, 27.0D, 23.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape BOTTOM_BACK_RIGHT_NORTH = Stream.of(Block.box(18.0D, 14.0D, 0.0D, 20.0D, 16.0D, 2.0D), Block.box(16.0D, 14.0D, 4.0D, 20.0D, 16.0D, 14.0D), Block.box(16.0D, 14.0D, 2.0D, 20.0D, 16.0D, 4.0D), Block.box(16.0D, 0.0D, 0.0D, 31.0D, 2.0D, 15.0D), Block.box(16.0D, 12.0D, 0.0D, 31.0D, 14.0D, 15.0D), Block.box(16.0D, 2.0D, 0.0D, 31.0D, 12.0D, 15.0D), Block.box(20.0D, 14.0D, 0.0D, 30.0D, 16.0D, 14.0D), Block.box(12.0D, 14.0D, 4.0D, 16.0D, 16.0D, 14.0D), Block.box(12.0D, 14.0D, 0.0D, 14.0D, 16.0D, 2.0D), Block.box(12.0D, 14.0D, 2.0D, 16.0D, 16.0D, 4.0D), Block.box(2.0D, 14.0D, 2.0D, 12.0D, 16.0D, 14.0D), Block.box(1.0D, 0.0D, 0.0D, 16.0D, 2.0D, 15.0D), Block.box(1.0D, 12.0D, 0.0D, 16.0D, 14.0D, 15.0D), Block.box(1.0D, 2.0D, 0.0D, 16.0D, 12.0D, 15.0D), Block.box(16.0D, 9.0D, -13.0D, 29.0D, 12.0D, 0.0D), Block.box(16.0D, 0.0D, -15.0D, 31.0D, 2.0D, 0.0D), Block.box(22.0D, 2.0D, -15.0D, 31.0D, 7.0D, -13.0D), Block.box(16.0D, 7.0D, -15.0D, 31.0D, 12.0D, -13.0D), Block.box(16.0D, 12.0D, -15.0D, 31.0D, 14.0D, 0.0D), Block.box(29.0D, 2.0D, -13.0D, 31.0D, 12.0D, 0.0D), Block.box(16.0D, 15.0D, -5.0D, 19.0D, 16.0D, -4.0D), Block.box(20.0D, 14.0D, -12.0D, 28.0D, 15.0D, -8.0D), Block.box(21.0D, 15.0D, -11.0D, 27.0D, 16.0D, -9.0D), Block.box(16.0D, 14.0D, -4.0D, 20.0D, 16.0D, -2.0D), Block.box(18.0D, 14.0D, -2.0D, 20.0D, 16.0D, 0.0D), Block.box(13.0D, 15.0D, -5.0D, 16.0D, 16.0D, -4.0D), Block.box(1.0D, 0.0D, -15.0D, 16.0D, 2.0D, 0.0D), Block.box(1.0D, 2.0D, -15.0D, 10.0D, 7.0D, -13.0D), Block.box(1.0D, 7.0D, -15.0D, 16.0D, 12.0D, -13.0D), Block.box(9.0D, 12.0D, -15.0D, 16.0D, 14.0D, 0.0D), Block.box(9.0D, 9.0D, -13.0D, 16.0D, 12.0D, 0.0D), Block.box(1.0D, 2.0D, -13.0D, 3.0D, 12.0D, 0.0D), Block.box(12.0D, 14.0D, -4.0D, 16.0D, 16.0D, -2.0D), Block.box(12.0D, 14.0D, -2.0D, 14.0D, 16.0D, 0.0D), Block.box(1.0D, 12.0D, -15.0D, 5.0D, 14.0D, 0.0D), Block.box(5.0D, 12.0D, -15.0D, 9.0D, 14.0D, -9.0D), Block.box(3.0D, 9.0D, -13.0D, 9.0D, 12.0D, -9.0D), Block.box(3.0D, 9.0D, -9.0D, 5.0D, 12.0D, -1.0D), Block.box(5.0D, 12.0D, -1.0D, 9.0D, 14.0D, 0.0D), Block.box(3.0D, 9.0D, -1.0D, 9.0D, 12.0D, 0.0D), Block.box(5.0D, 9.0D, -9.0D, 9.0D, 10.0D, -1.0D), Block.box(16.0D, 16.0D, 2.0D, 20.0D, 31.0D, 4.0D), Block.box(18.0D, 16.0D, 0.0D, 20.0D, 31.0D, 2.0D), Block.box(16.0D, 31.0D, 3.0D, 21.0D, 32.0D, 5.0D), Block.box(19.0D, 31.0D, 0.0D, 21.0D, 32.0D, 3.0D), Block.box(20.0D, 16.0D, 0.0D, 30.0D, 22.0D, 14.0D), Block.box(16.0D, 16.0D, 4.0D, 20.0D, 22.0D, 14.0D), Block.box(16.0D, 22.0D, 4.0D, 20.0D, 30.0D, 13.0D), Block.box(20.0D, 22.0D, 0.0D, 29.0D, 30.0D, 13.0D), Block.box(21.0D, 30.0D, 5.0D, 27.0D, 32.0D, 11.0D), Block.box(12.0D, 16.0D, 4.0D, 16.0D, 22.0D, 14.0D), Block.box(12.0D, 22.0D, 4.0D, 16.0D, 30.0D, 13.0D), Block.box(4.0D, 26.0D, 1.0D, 12.0D, 27.0D, 2.0D), Block.box(12.0D, 16.0D, 2.0D, 16.0D, 31.0D, 4.0D), Block.box(12.0D, 16.0D, 0.0D, 14.0D, 31.0D, 2.0D), Block.box(11.0D, 31.0D, 3.0D, 16.0D, 32.0D, 5.0D), Block.box(11.0D, 31.0D, 0.0D, 13.0D, 32.0D, 3.0D), Block.box(2.0D, 16.0D, 2.0D, 12.0D, 22.0D, 14.0D), Block.box(3.0D, 22.0D, 3.0D, 12.0D, 30.0D, 13.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(3.0D, 26.0D, 0.0D, 4.0D, 27.0D, 3.0D), Block.box(16.0D, 16.0D, -5.0D, 19.0D, 21.0D, -4.0D), Block.box(19.0D, 16.0D, -13.0D, 29.0D, 19.0D, -7.0D), Block.box(16.0D, 16.0D, -4.0D, 20.0D, 31.0D, -2.0D), Block.box(18.0D, 16.0D, -2.0D, 20.0D, 31.0D, 0.0D), Block.box(20.0D, 26.0D, -13.0D, 29.0D, 30.0D, 0.0D), Block.box(19.0D, 26.0D, -13.0D, 20.0D, 30.0D, -4.0D), Block.box(16.0D, 31.0D, -5.0D, 21.0D, 32.0D, -3.0D), Block.box(19.0D, 31.0D, -3.0D, 21.0D, 32.0D, 0.0D), Block.box(21.0D, 30.0D, -11.0D, 27.0D, 32.0D, -5.0D), Block.box(16.0D, 26.0D, -5.0D, 19.0D, 27.0D, -4.0D), Block.box(13.0D, 16.0D, -5.0D, 16.0D, 21.0D, -4.0D), Block.box(12.0D, 16.0D, -2.0D, 14.0D, 31.0D, 0.0D), Block.box(11.0D, 31.0D, -3.0D, 13.0D, 32.0D, 0.0D), Block.box(12.0D, 16.0D, -4.0D, 16.0D, 31.0D, -2.0D), Block.box(11.0D, 31.0D, -5.0D, 16.0D, 32.0D, -3.0D), Block.box(4.0D, 26.0D, -5.0D, 12.0D, 27.0D, -4.0D), Block.box(4.0D, 26.0D, -3.0D, 12.0D, 27.0D, -2.0D), Block.box(4.0D, 26.0D, -1.0D, 12.0D, 27.0D, 0.0D), Block.box(12.0D, 26.0D, -5.0D, 16.0D, 27.0D, -4.0D), Block.box(3.0D, 26.0D, -5.0D, 4.0D, 27.0D, 0.0D), Block.box(8.0D, 27.0D, -6.0D, 11.0D, 30.0D, -1.0D), Block.box(9.0D, 21.0D, -4.0D, 10.0D, 27.0D, -3.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_BACK_RIGHT_EAST = Stream.of(Block.box(14.0D, 14.0D, 18.0D, 16.0D, 16.0D, 20.0D), Block.box(2.0D, 14.0D, 16.0D, 12.0D, 16.0D, 20.0D), Block.box(12.0D, 14.0D, 16.0D, 14.0D, 16.0D, 20.0D), Block.box(1.0D, 0.0D, 16.0D, 16.0D, 2.0D, 31.0D), Block.box(1.0D, 12.0D, 16.0D, 16.0D, 14.0D, 31.0D), Block.box(1.0D, 2.0D, 16.0D, 16.0D, 12.0D, 31.0D), Block.box(2.0D, 14.0D, 20.0D, 16.0D, 16.0D, 30.0D), Block.box(2.0D, 14.0D, 12.0D, 12.0D, 16.0D, 16.0D), Block.box(14.0D, 14.0D, 12.0D, 16.0D, 16.0D, 14.0D), Block.box(12.0D, 14.0D, 12.0D, 14.0D, 16.0D, 16.0D), Block.box(2.0D, 14.0D, 2.0D, 14.0D, 16.0D, 12.0D), Block.box(1.0D, 0.0D, 1.0D, 16.0D, 2.0D, 16.0D), Block.box(1.0D, 12.0D, 1.0D, 16.0D, 14.0D, 16.0D), Block.box(1.0D, 2.0D, 1.0D, 16.0D, 12.0D, 16.0D), Block.box(16.0D, 9.0D, 16.0D, 29.0D, 12.0D, 29.0D), Block.box(16.0D, 0.0D, 16.0D, 31.0D, 2.0D, 31.0D), Block.box(29.0D, 2.0D, 22.0D, 31.0D, 7.0D, 31.0D), Block.box(29.0D, 7.0D, 16.0D, 31.0D, 12.0D, 31.0D), Block.box(16.0D, 12.0D, 16.0D, 31.0D, 14.0D, 31.0D), Block.box(16.0D, 2.0D, 29.0D, 29.0D, 12.0D, 31.0D), Block.box(20.0D, 15.0D, 16.0D, 21.0D, 16.0D, 19.0D), Block.box(24.0D, 14.0D, 20.0D, 28.0D, 15.0D, 28.0D), Block.box(25.0D, 15.0D, 21.0D, 27.0D, 16.0D, 27.0D), Block.box(18.0D, 14.0D, 16.0D, 20.0D, 16.0D, 20.0D), Block.box(16.0D, 14.0D, 18.0D, 18.0D, 16.0D, 20.0D), Block.box(20.0D, 15.0D, 13.0D, 21.0D, 16.0D, 16.0D), Block.box(16.0D, 0.0D, 1.0D, 31.0D, 2.0D, 16.0D), Block.box(29.0D, 2.0D, 1.0D, 31.0D, 7.0D, 10.0D), Block.box(29.0D, 7.0D, 1.0D, 31.0D, 12.0D, 16.0D), Block.box(16.0D, 12.0D, 9.0D, 31.0D, 14.0D, 16.0D), Block.box(16.0D, 9.0D, 9.0D, 29.0D, 12.0D, 16.0D), Block.box(16.0D, 2.0D, 1.0D, 29.0D, 12.0D, 3.0D), Block.box(18.0D, 14.0D, 12.0D, 20.0D, 16.0D, 16.0D), Block.box(16.0D, 14.0D, 12.0D, 18.0D, 16.0D, 14.0D), Block.box(16.0D, 12.0D, 1.0D, 31.0D, 14.0D, 5.0D), Block.box(25.0D, 12.0D, 5.0D, 31.0D, 14.0D, 9.0D), Block.box(25.0D, 9.0D, 3.0D, 29.0D, 12.0D, 9.0D), Block.box(17.0D, 9.0D, 3.0D, 25.0D, 12.0D, 5.0D), Block.box(16.0D, 12.0D, 5.0D, 17.0D, 14.0D, 9.0D), Block.box(16.0D, 9.0D, 3.0D, 17.0D, 12.0D, 9.0D), Block.box(17.0D, 9.0D, 5.0D, 25.0D, 10.0D, 9.0D), Block.box(12.0D, 16.0D, 16.0D, 14.0D, 31.0D, 20.0D), Block.box(14.0D, 16.0D, 18.0D, 16.0D, 31.0D, 20.0D), Block.box(11.0D, 31.0D, 16.0D, 13.0D, 32.0D, 21.0D), Block.box(13.0D, 31.0D, 19.0D, 16.0D, 32.0D, 21.0D), Block.box(2.0D, 16.0D, 20.0D, 16.0D, 22.0D, 30.0D), Block.box(2.0D, 16.0D, 16.0D, 12.0D, 22.0D, 20.0D), Block.box(3.0D, 22.0D, 16.0D, 12.0D, 30.0D, 20.0D), Block.box(3.0D, 22.0D, 20.0D, 16.0D, 30.0D, 29.0D), Block.box(5.0D, 30.0D, 21.0D, 11.0D, 32.0D, 27.0D), Block.box(2.0D, 16.0D, 12.0D, 12.0D, 22.0D, 16.0D), Block.box(3.0D, 22.0D, 12.0D, 12.0D, 30.0D, 16.0D), Block.box(14.0D, 26.0D, 4.0D, 15.0D, 27.0D, 12.0D), Block.box(12.0D, 16.0D, 12.0D, 14.0D, 31.0D, 16.0D), Block.box(14.0D, 16.0D, 12.0D, 16.0D, 31.0D, 14.0D), Block.box(11.0D, 31.0D, 11.0D, 13.0D, 32.0D, 16.0D), Block.box(13.0D, 31.0D, 11.0D, 16.0D, 32.0D, 13.0D), Block.box(2.0D, 16.0D, 2.0D, 14.0D, 22.0D, 12.0D), Block.box(3.0D, 22.0D, 3.0D, 13.0D, 30.0D, 12.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(13.0D, 26.0D, 3.0D, 16.0D, 27.0D, 4.0D), Block.box(20.0D, 16.0D, 16.0D, 21.0D, 21.0D, 19.0D), Block.box(23.0D, 16.0D, 19.0D, 29.0D, 19.0D, 29.0D), Block.box(18.0D, 16.0D, 16.0D, 20.0D, 31.0D, 20.0D), Block.box(16.0D, 16.0D, 18.0D, 18.0D, 31.0D, 20.0D), Block.box(16.0D, 26.0D, 20.0D, 29.0D, 30.0D, 29.0D), Block.box(20.0D, 26.0D, 19.0D, 29.0D, 30.0D, 20.0D), Block.box(19.0D, 31.0D, 16.0D, 21.0D, 32.0D, 21.0D), Block.box(16.0D, 31.0D, 19.0D, 19.0D, 32.0D, 21.0D), Block.box(21.0D, 30.0D, 21.0D, 27.0D, 32.0D, 27.0D), Block.box(20.0D, 26.0D, 16.0D, 21.0D, 27.0D, 19.0D), Block.box(20.0D, 16.0D, 13.0D, 21.0D, 21.0D, 16.0D), Block.box(16.0D, 16.0D, 12.0D, 18.0D, 31.0D, 14.0D), Block.box(16.0D, 31.0D, 11.0D, 19.0D, 32.0D, 13.0D), Block.box(18.0D, 16.0D, 12.0D, 20.0D, 31.0D, 16.0D), Block.box(19.0D, 31.0D, 11.0D, 21.0D, 32.0D, 16.0D), Block.box(20.0D, 26.0D, 4.0D, 21.0D, 27.0D, 12.0D), Block.box(18.0D, 26.0D, 4.0D, 19.0D, 27.0D, 12.0D), Block.box(16.0D, 26.0D, 4.0D, 17.0D, 27.0D, 12.0D), Block.box(20.0D, 26.0D, 12.0D, 21.0D, 27.0D, 16.0D), Block.box(16.0D, 26.0D, 3.0D, 21.0D, 27.0D, 4.0D), Block.box(17.0D, 27.0D, 8.0D, 22.0D, 30.0D, 11.0D), Block.box(19.0D, 21.0D, 9.0D, 20.0D, 27.0D, 10.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_BACK_RIGHT_SOUTH = Stream.of(Block.box(-4.0D, 14.0D, 14.0D, -2.0D, 16.0D, 16.0D), Block.box(-4.0D, 14.0D, 2.0D, 0.0D, 16.0D, 12.0D), Block.box(-4.0D, 14.0D, 12.0D, 0.0D, 16.0D, 14.0D), Block.box(-15.0D, 0.0D, 1.0D, 0.0D, 2.0D, 16.0D), Block.box(-15.0D, 12.0D, 1.0D, 0.0D, 14.0D, 16.0D), Block.box(-15.0D, 2.0D, 1.0D, 0.0D, 12.0D, 16.0D), Block.box(-14.0D, 14.0D, 2.0D, -4.0D, 16.0D, 16.0D), Block.box(0.0D, 14.0D, 2.0D, 4.0D, 16.0D, 12.0D), Block.box(2.0D, 14.0D, 14.0D, 4.0D, 16.0D, 16.0D), Block.box(0.0D, 14.0D, 12.0D, 4.0D, 16.0D, 14.0D), Block.box(4.0D, 14.0D, 2.0D, 14.0D, 16.0D, 14.0D), Block.box(0.0D, 0.0D, 1.0D, 15.0D, 2.0D, 16.0D), Block.box(0.0D, 12.0D, 1.0D, 15.0D, 14.0D, 16.0D), Block.box(0.0D, 2.0D, 1.0D, 15.0D, 12.0D, 16.0D), Block.box(-13.0D, 9.0D, 16.0D, 0.0D, 12.0D, 29.0D), Block.box(-15.0D, 0.0D, 16.0D, 0.0D, 2.0D, 31.0D), Block.box(-15.0D, 2.0D, 29.0D, -6.0D, 7.0D, 31.0D), Block.box(-15.0D, 7.0D, 29.0D, 0.0D, 12.0D, 31.0D), Block.box(-15.0D, 12.0D, 16.0D, 0.0D, 14.0D, 31.0D), Block.box(-15.0D, 2.0D, 16.0D, -13.0D, 12.0D, 29.0D), Block.box(-3.0D, 15.0D, 20.0D, 0.0D, 16.0D, 21.0D), Block.box(-12.0D, 14.0D, 24.0D, -4.0D, 15.0D, 28.0D), Block.box(-11.0D, 15.0D, 25.0D, -5.0D, 16.0D, 27.0D), Block.box(-4.0D, 14.0D, 18.0D, 0.0D, 16.0D, 20.0D), Block.box(-4.0D, 14.0D, 16.0D, -2.0D, 16.0D, 18.0D), Block.box(0.0D, 15.0D, 20.0D, 3.0D, 16.0D, 21.0D), Block.box(0.0D, 0.0D, 16.0D, 15.0D, 2.0D, 31.0D), Block.box(6.0D, 2.0D, 29.0D, 15.0D, 7.0D, 31.0D), Block.box(0.0D, 7.0D, 29.0D, 15.0D, 12.0D, 31.0D), Block.box(0.0D, 12.0D, 16.0D, 7.0D, 14.0D, 31.0D), Block.box(0.0D, 9.0D, 16.0D, 7.0D, 12.0D, 29.0D), Block.box(13.0D, 2.0D, 16.0D, 15.0D, 12.0D, 29.0D), Block.box(0.0D, 14.0D, 18.0D, 4.0D, 16.0D, 20.0D), Block.box(2.0D, 14.0D, 16.0D, 4.0D, 16.0D, 18.0D), Block.box(11.0D, 12.0D, 16.0D, 15.0D, 14.0D, 31.0D), Block.box(7.0D, 12.0D, 25.0D, 11.0D, 14.0D, 31.0D), Block.box(7.0D, 9.0D, 25.0D, 13.0D, 12.0D, 29.0D), Block.box(11.0D, 9.0D, 17.0D, 13.0D, 12.0D, 25.0D), Block.box(7.0D, 12.0D, 16.0D, 11.0D, 14.0D, 17.0D), Block.box(7.0D, 9.0D, 16.0D, 13.0D, 12.0D, 17.0D), Block.box(7.0D, 9.0D, 17.0D, 11.0D, 10.0D, 25.0D), Block.box(-4.0D, 16.0D, 12.0D, 0.0D, 31.0D, 14.0D), Block.box(-4.0D, 16.0D, 14.0D, -2.0D, 31.0D, 16.0D), Block.box(-5.0D, 31.0D, 11.0D, 0.0D, 32.0D, 13.0D), Block.box(-5.0D, 31.0D, 13.0D, -3.0D, 32.0D, 16.0D), Block.box(-14.0D, 16.0D, 2.0D, -4.0D, 22.0D, 16.0D), Block.box(-4.0D, 16.0D, 2.0D, 0.0D, 22.0D, 12.0D), Block.box(-4.0D, 22.0D, 3.0D, 0.0D, 30.0D, 12.0D), Block.box(-13.0D, 22.0D, 3.0D, -4.0D, 30.0D, 16.0D), Block.box(-11.0D, 30.0D, 5.0D, -5.0D, 32.0D, 11.0D), Block.box(0.0D, 16.0D, 2.0D, 4.0D, 22.0D, 12.0D), Block.box(0.0D, 22.0D, 3.0D, 4.0D, 30.0D, 12.0D), Block.box(4.0D, 26.0D, 14.0D, 12.0D, 27.0D, 15.0D), Block.box(0.0D, 16.0D, 12.0D, 4.0D, 31.0D, 14.0D), Block.box(2.0D, 16.0D, 14.0D, 4.0D, 31.0D, 16.0D), Block.box(0.0D, 31.0D, 11.0D, 5.0D, 32.0D, 13.0D), Block.box(3.0D, 31.0D, 13.0D, 5.0D, 32.0D, 16.0D), Block.box(4.0D, 16.0D, 2.0D, 14.0D, 22.0D, 14.0D), Block.box(4.0D, 22.0D, 3.0D, 13.0D, 30.0D, 13.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(12.0D, 26.0D, 13.0D, 13.0D, 27.0D, 16.0D), Block.box(-3.0D, 16.0D, 20.0D, 0.0D, 21.0D, 21.0D), Block.box(-13.0D, 16.0D, 23.0D, -3.0D, 19.0D, 29.0D), Block.box(-4.0D, 16.0D, 18.0D, 0.0D, 31.0D, 20.0D), Block.box(-4.0D, 16.0D, 16.0D, -2.0D, 31.0D, 18.0D), Block.box(-13.0D, 26.0D, 16.0D, -4.0D, 30.0D, 29.0D), Block.box(-4.0D, 26.0D, 20.0D, -3.0D, 30.0D, 29.0D), Block.box(-5.0D, 31.0D, 19.0D, 0.0D, 32.0D, 21.0D), Block.box(-5.0D, 31.0D, 16.0D, -3.0D, 32.0D, 19.0D), Block.box(-11.0D, 30.0D, 21.0D, -5.0D, 32.0D, 27.0D), Block.box(-3.0D, 26.0D, 20.0D, 0.0D, 27.0D, 21.0D), Block.box(0.0D, 16.0D, 20.0D, 3.0D, 21.0D, 21.0D), Block.box(2.0D, 16.0D, 16.0D, 4.0D, 31.0D, 18.0D), Block.box(3.0D, 31.0D, 16.0D, 5.0D, 32.0D, 19.0D), Block.box(0.0D, 16.0D, 18.0D, 4.0D, 31.0D, 20.0D), Block.box(0.0D, 31.0D, 19.0D, 5.0D, 32.0D, 21.0D), Block.box(4.0D, 26.0D, 20.0D, 12.0D, 27.0D, 21.0D), Block.box(4.0D, 26.0D, 18.0D, 12.0D, 27.0D, 19.0D), Block.box(4.0D, 26.0D, 16.0D, 12.0D, 27.0D, 17.0D), Block.box(0.0D, 26.0D, 20.0D, 4.0D, 27.0D, 21.0D), Block.box(12.0D, 26.0D, 16.0D, 13.0D, 27.0D, 21.0D), Block.box(5.0D, 27.0D, 17.0D, 8.0D, 30.0D, 22.0D), Block.box(6.0D, 21.0D, 19.0D, 7.0D, 27.0D, 20.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_BACK_RIGHT_WEST = Stream.of(Block.box(0.0D, 14.0D, -4.0D, 2.0D, 16.0D, -2.0D), Block.box(4.0D, 14.0D, -4.0D, 14.0D, 16.0D, 0.0D), Block.box(2.0D, 14.0D, -4.0D, 4.0D, 16.0D, 0.0D), Block.box(0.0D, 0.0D, -15.0D, 15.0D, 2.0D, 0.0D), Block.box(0.0D, 12.0D, -15.0D, 15.0D, 14.0D, 0.0D), Block.box(0.0D, 2.0D, -15.0D, 15.0D, 12.0D, 0.0D), Block.box(0.0D, 14.0D, -14.0D, 14.0D, 16.0D, -4.0D), Block.box(4.0D, 14.0D, 0.0D, 14.0D, 16.0D, 4.0D), Block.box(0.0D, 14.0D, 2.0D, 2.0D, 16.0D, 4.0D), Block.box(2.0D, 14.0D, 0.0D, 4.0D, 16.0D, 4.0D), Block.box(2.0D, 14.0D, 4.0D, 14.0D, 16.0D, 14.0D), Block.box(0.0D, 0.0D, 0.0D, 15.0D, 2.0D, 15.0D), Block.box(0.0D, 12.0D, 0.0D, 15.0D, 14.0D, 15.0D), Block.box(0.0D, 2.0D, 0.0D, 15.0D, 12.0D, 15.0D), Block.box(-13.0D, 9.0D, -13.0D, 0.0D, 12.0D, 0.0D), Block.box(-15.0D, 0.0D, -15.0D, 0.0D, 2.0D, 0.0D), Block.box(-15.0D, 2.0D, -15.0D, -13.0D, 7.0D, -6.0D), Block.box(-15.0D, 7.0D, -15.0D, -13.0D, 12.0D, 0.0D), Block.box(-15.0D, 12.0D, -15.0D, 0.0D, 14.0D, 0.0D), Block.box(-13.0D, 2.0D, -15.0D, 0.0D, 12.0D, -13.0D), Block.box(-5.0D, 15.0D, -3.0D, -4.0D, 16.0D, 0.0D), Block.box(-12.0D, 14.0D, -12.0D, -8.0D, 15.0D, -4.0D), Block.box(-11.0D, 15.0D, -11.0D, -9.0D, 16.0D, -5.0D), Block.box(-4.0D, 14.0D, -4.0D, -2.0D, 16.0D, 0.0D), Block.box(-2.0D, 14.0D, -4.0D, 0.0D, 16.0D, -2.0D), Block.box(-5.0D, 15.0D, 0.0D, -4.0D, 16.0D, 3.0D), Block.box(-15.0D, 0.0D, 0.0D, 0.0D, 2.0D, 15.0D), Block.box(-15.0D, 2.0D, 6.0D, -13.0D, 7.0D, 15.0D), Block.box(-15.0D, 7.0D, 0.0D, -13.0D, 12.0D, 15.0D), Block.box(-15.0D, 12.0D, 0.0D, 0.0D, 14.0D, 7.0D), Block.box(-13.0D, 9.0D, 0.0D, 0.0D, 12.0D, 7.0D), Block.box(-13.0D, 2.0D, 13.0D, 0.0D, 12.0D, 15.0D), Block.box(-4.0D, 14.0D, 0.0D, -2.0D, 16.0D, 4.0D), Block.box(-2.0D, 14.0D, 2.0D, 0.0D, 16.0D, 4.0D), Block.box(-15.0D, 12.0D, 11.0D, 0.0D, 14.0D, 15.0D), Block.box(-15.0D, 12.0D, 7.0D, -9.0D, 14.0D, 11.0D), Block.box(-13.0D, 9.0D, 7.0D, -9.0D, 12.0D, 13.0D), Block.box(-9.0D, 9.0D, 11.0D, -1.0D, 12.0D, 13.0D), Block.box(-1.0D, 12.0D, 7.0D, 0.0D, 14.0D, 11.0D), Block.box(-1.0D, 9.0D, 7.0D, 0.0D, 12.0D, 13.0D), Block.box(-9.0D, 9.0D, 7.0D, -1.0D, 10.0D, 11.0D), Block.box(2.0D, 16.0D, -4.0D, 4.0D, 31.0D, 0.0D), Block.box(0.0D, 16.0D, -4.0D, 2.0D, 31.0D, -2.0D), Block.box(3.0D, 31.0D, -5.0D, 5.0D, 32.0D, 0.0D), Block.box(0.0D, 31.0D, -5.0D, 3.0D, 32.0D, -3.0D), Block.box(0.0D, 16.0D, -14.0D, 14.0D, 22.0D, -4.0D), Block.box(4.0D, 16.0D, -4.0D, 14.0D, 22.0D, 0.0D), Block.box(4.0D, 22.0D, -4.0D, 13.0D, 30.0D, 0.0D), Block.box(0.0D, 22.0D, -13.0D, 13.0D, 30.0D, -4.0D), Block.box(5.0D, 30.0D, -11.0D, 11.0D, 32.0D, -5.0D), Block.box(4.0D, 16.0D, 0.0D, 14.0D, 22.0D, 4.0D), Block.box(4.0D, 22.0D, 0.0D, 13.0D, 30.0D, 4.0D), Block.box(1.0D, 26.0D, 4.0D, 2.0D, 27.0D, 12.0D), Block.box(2.0D, 16.0D, 0.0D, 4.0D, 31.0D, 4.0D), Block.box(0.0D, 16.0D, 2.0D, 2.0D, 31.0D, 4.0D), Block.box(3.0D, 31.0D, 0.0D, 5.0D, 32.0D, 5.0D), Block.box(0.0D, 31.0D, 3.0D, 3.0D, 32.0D, 5.0D), Block.box(2.0D, 16.0D, 4.0D, 14.0D, 22.0D, 14.0D), Block.box(3.0D, 22.0D, 4.0D, 13.0D, 30.0D, 13.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(0.0D, 26.0D, 12.0D, 3.0D, 27.0D, 13.0D), Block.box(-5.0D, 16.0D, -3.0D, -4.0D, 21.0D, 0.0D), Block.box(-13.0D, 16.0D, -13.0D, -7.0D, 19.0D, -3.0D), Block.box(-4.0D, 16.0D, -4.0D, -2.0D, 31.0D, 0.0D), Block.box(-2.0D, 16.0D, -4.0D, 0.0D, 31.0D, -2.0D), Block.box(-13.0D, 26.0D, -13.0D, 0.0D, 30.0D, -4.0D), Block.box(-13.0D, 26.0D, -4.0D, -4.0D, 30.0D, -3.0D), Block.box(-5.0D, 31.0D, -5.0D, -3.0D, 32.0D, 0.0D), Block.box(-3.0D, 31.0D, -5.0D, 0.0D, 32.0D, -3.0D), Block.box(-11.0D, 30.0D, -11.0D, -5.0D, 32.0D, -5.0D), Block.box(-5.0D, 26.0D, -3.0D, -4.0D, 27.0D, 0.0D), Block.box(-5.0D, 16.0D, 0.0D, -4.0D, 21.0D, 3.0D), Block.box(-2.0D, 16.0D, 2.0D, 0.0D, 31.0D, 4.0D), Block.box(-3.0D, 31.0D, 3.0D, 0.0D, 32.0D, 5.0D), Block.box(-4.0D, 16.0D, 0.0D, -2.0D, 31.0D, 4.0D), Block.box(-5.0D, 31.0D, 0.0D, -3.0D, 32.0D, 5.0D), Block.box(-5.0D, 26.0D, 4.0D, -4.0D, 27.0D, 12.0D), Block.box(-3.0D, 26.0D, 4.0D, -2.0D, 27.0D, 12.0D), Block.box(-1.0D, 26.0D, 4.0D, 0.0D, 27.0D, 12.0D), Block.box(-5.0D, 26.0D, 0.0D, -4.0D, 27.0D, 4.0D), Block.box(-5.0D, 26.0D, 12.0D, 0.0D, 27.0D, 13.0D), Block.box(-6.0D, 27.0D, 5.0D, -1.0D, 30.0D, 8.0D), Block.box(-4.0D, 21.0D, 6.0D, -3.0D, 27.0D, 7.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape BOTTOM_FRONT_LEFT_NORTH = Stream.of(Block.box(2.0D, 14.0D, 16.0D, 4.0D, 16.0D, 18.0D), Block.box(0.0D, 14.0D, 20.0D, 4.0D, 16.0D, 30.0D), Block.box(0.0D, 14.0D, 18.0D, 4.0D, 16.0D, 20.0D), Block.box(0.0D, 0.0D, 16.0D, 15.0D, 2.0D, 31.0D), Block.box(0.0D, 12.0D, 16.0D, 15.0D, 14.0D, 31.0D), Block.box(0.0D, 2.0D, 16.0D, 15.0D, 12.0D, 31.0D), Block.box(4.0D, 14.0D, 16.0D, 14.0D, 16.0D, 30.0D), Block.box(-4.0D, 14.0D, 20.0D, 0.0D, 16.0D, 30.0D), Block.box(-4.0D, 14.0D, 16.0D, -2.0D, 16.0D, 18.0D), Block.box(-4.0D, 14.0D, 18.0D, 0.0D, 16.0D, 20.0D), Block.box(-14.0D, 14.0D, 18.0D, -4.0D, 16.0D, 30.0D), Block.box(-15.0D, 0.0D, 16.0D, 0.0D, 2.0D, 31.0D), Block.box(-15.0D, 12.0D, 16.0D, 0.0D, 14.0D, 31.0D), Block.box(-15.0D, 2.0D, 16.0D, 0.0D, 12.0D, 31.0D), Block.box(0.0D, 9.0D, 3.0D, 13.0D, 12.0D, 16.0D), Block.box(0.0D, 0.0D, 1.0D, 15.0D, 2.0D, 16.0D), Block.box(6.0D, 2.0D, 1.0D, 15.0D, 7.0D, 3.0D), Block.box(0.0D, 7.0D, 1.0D, 15.0D, 12.0D, 3.0D), Block.box(0.0D, 12.0D, 1.0D, 15.0D, 14.0D, 16.0D), Block.box(13.0D, 2.0D, 3.0D, 15.0D, 12.0D, 16.0D), Block.box(0.0D, 15.0D, 11.0D, 3.0D, 16.0D, 12.0D), Block.box(4.0D, 14.0D, 4.0D, 12.0D, 15.0D, 8.0D), Block.box(5.0D, 15.0D, 5.0D, 11.0D, 16.0D, 7.0D), Block.box(0.0D, 14.0D, 12.0D, 4.0D, 16.0D, 14.0D), Block.box(2.0D, 14.0D, 14.0D, 4.0D, 16.0D, 16.0D), Block.box(-3.0D, 15.0D, 11.0D, 0.0D, 16.0D, 12.0D), Block.box(-15.0D, 0.0D, 1.0D, 0.0D, 2.0D, 16.0D), Block.box(-15.0D, 2.0D, 1.0D, -6.0D, 7.0D, 3.0D), Block.box(-15.0D, 7.0D, 1.0D, 0.0D, 12.0D, 3.0D), Block.box(-7.0D, 12.0D, 1.0D, 0.0D, 14.0D, 16.0D), Block.box(-7.0D, 9.0D, 3.0D, 0.0D, 12.0D, 16.0D), Block.box(-15.0D, 2.0D, 3.0D, -13.0D, 12.0D, 16.0D), Block.box(-4.0D, 14.0D, 12.0D, 0.0D, 16.0D, 14.0D), Block.box(-4.0D, 14.0D, 14.0D, -2.0D, 16.0D, 16.0D), Block.box(-15.0D, 12.0D, 1.0D, -11.0D, 14.0D, 16.0D), Block.box(-11.0D, 12.0D, 1.0D, -7.0D, 14.0D, 7.0D), Block.box(-13.0D, 9.0D, 3.0D, -7.0D, 12.0D, 7.0D), Block.box(-13.0D, 9.0D, 7.0D, -11.0D, 12.0D, 15.0D), Block.box(-11.0D, 12.0D, 15.0D, -7.0D, 14.0D, 16.0D), Block.box(-13.0D, 9.0D, 15.0D, -7.0D, 12.0D, 16.0D), Block.box(-11.0D, 9.0D, 7.0D, -7.0D, 10.0D, 15.0D), Block.box(0.0D, 16.0D, 18.0D, 4.0D, 31.0D, 20.0D), Block.box(2.0D, 16.0D, 16.0D, 4.0D, 31.0D, 18.0D), Block.box(0.0D, 31.0D, 19.0D, 5.0D, 32.0D, 21.0D), Block.box(3.0D, 31.0D, 16.0D, 5.0D, 32.0D, 19.0D), Block.box(4.0D, 16.0D, 16.0D, 14.0D, 22.0D, 30.0D), Block.box(0.0D, 16.0D, 20.0D, 4.0D, 22.0D, 30.0D), Block.box(0.0D, 22.0D, 20.0D, 4.0D, 30.0D, 29.0D), Block.box(4.0D, 22.0D, 16.0D, 13.0D, 30.0D, 29.0D), Block.box(5.0D, 30.0D, 21.0D, 11.0D, 32.0D, 27.0D), Block.box(-4.0D, 16.0D, 20.0D, 0.0D, 22.0D, 30.0D), Block.box(-4.0D, 22.0D, 20.0D, 0.0D, 30.0D, 29.0D), Block.box(-12.0D, 26.0D, 17.0D, -4.0D, 27.0D, 18.0D), Block.box(-4.0D, 16.0D, 18.0D, 0.0D, 31.0D, 20.0D), Block.box(-4.0D, 16.0D, 16.0D, -2.0D, 31.0D, 18.0D), Block.box(-5.0D, 31.0D, 19.0D, 0.0D, 32.0D, 21.0D), Block.box(-5.0D, 31.0D, 16.0D, -3.0D, 32.0D, 19.0D), Block.box(-14.0D, 16.0D, 18.0D, -4.0D, 22.0D, 30.0D), Block.box(-13.0D, 22.0D, 19.0D, -4.0D, 30.0D, 29.0D), Block.box(-11.0D, 30.0D, 21.0D, -5.0D, 32.0D, 27.0D), Block.box(-13.0D, 26.0D, 16.0D, -12.0D, 27.0D, 19.0D), Block.box(0.0D, 16.0D, 11.0D, 3.0D, 21.0D, 12.0D), Block.box(3.0D, 16.0D, 3.0D, 13.0D, 19.0D, 9.0D), Block.box(0.0D, 16.0D, 12.0D, 4.0D, 31.0D, 14.0D), Block.box(2.0D, 16.0D, 14.0D, 4.0D, 31.0D, 16.0D), Block.box(4.0D, 26.0D, 3.0D, 13.0D, 30.0D, 16.0D), Block.box(3.0D, 26.0D, 3.0D, 4.0D, 30.0D, 12.0D), Block.box(0.0D, 31.0D, 11.0D, 5.0D, 32.0D, 13.0D), Block.box(3.0D, 31.0D, 13.0D, 5.0D, 32.0D, 16.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(0.0D, 26.0D, 11.0D, 3.0D, 27.0D, 12.0D), Block.box(-3.0D, 16.0D, 11.0D, 0.0D, 21.0D, 12.0D), Block.box(-4.0D, 16.0D, 14.0D, -2.0D, 31.0D, 16.0D), Block.box(-5.0D, 31.0D, 13.0D, -3.0D, 32.0D, 16.0D), Block.box(-4.0D, 16.0D, 12.0D, 0.0D, 31.0D, 14.0D), Block.box(-5.0D, 31.0D, 11.0D, 0.0D, 32.0D, 13.0D), Block.box(-12.0D, 26.0D, 11.0D, -4.0D, 27.0D, 12.0D), Block.box(-12.0D, 26.0D, 13.0D, -4.0D, 27.0D, 14.0D), Block.box(-12.0D, 26.0D, 15.0D, -4.0D, 27.0D, 16.0D), Block.box(-4.0D, 26.0D, 11.0D, 0.0D, 27.0D, 12.0D), Block.box(-13.0D, 26.0D, 11.0D, -12.0D, 27.0D, 16.0D), Block.box(-8.0D, 27.0D, 10.0D, -5.0D, 30.0D, 15.0D), Block.box(-7.0D, 21.0D, 12.0D, -6.0D, 27.0D, 13.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_FRONT_LEFT_EAST = Stream.of(Block.box(-2.0D, 14.0D, 2.0D, 0.0D, 16.0D, 4.0D), Block.box(-14.0D, 14.0D, 0.0D, -4.0D, 16.0D, 4.0D), Block.box(-4.0D, 14.0D, 0.0D, -2.0D, 16.0D, 4.0D), Block.box(-15.0D, 0.0D, 0.0D, 0.0D, 2.0D, 15.0D), Block.box(-15.0D, 12.0D, 0.0D, 0.0D, 14.0D, 15.0D), Block.box(-15.0D, 2.0D, 0.0D, 0.0D, 12.0D, 15.0D), Block.box(-14.0D, 14.0D, 4.0D, 0.0D, 16.0D, 14.0D), Block.box(-14.0D, 14.0D, -4.0D, -4.0D, 16.0D, 0.0D), Block.box(-2.0D, 14.0D, -4.0D, 0.0D, 16.0D, -2.0D), Block.box(-4.0D, 14.0D, -4.0D, -2.0D, 16.0D, 0.0D), Block.box(-14.0D, 14.0D, -14.0D, -2.0D, 16.0D, -4.0D), Block.box(-15.0D, 0.0D, -15.0D, 0.0D, 2.0D, 0.0D), Block.box(-15.0D, 12.0D, -15.0D, 0.0D, 14.0D, 0.0D), Block.box(-15.0D, 2.0D, -15.0D, 0.0D, 12.0D, 0.0D), Block.box(0.0D, 9.0D, 0.0D, 13.0D, 12.0D, 13.0D), Block.box(0.0D, 0.0D, 0.0D, 15.0D, 2.0D, 15.0D), Block.box(13.0D, 2.0D, 6.0D, 15.0D, 7.0D, 15.0D), Block.box(13.0D, 7.0D, 0.0D, 15.0D, 12.0D, 15.0D), Block.box(0.0D, 12.0D, 0.0D, 15.0D, 14.0D, 15.0D), Block.box(0.0D, 2.0D, 13.0D, 13.0D, 12.0D, 15.0D), Block.box(4.0D, 15.0D, 0.0D, 5.0D, 16.0D, 3.0D), Block.box(8.0D, 14.0D, 4.0D, 12.0D, 15.0D, 12.0D), Block.box(9.0D, 15.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(2.0D, 14.0D, 0.0D, 4.0D, 16.0D, 4.0D), Block.box(0.0D, 14.0D, 2.0D, 2.0D, 16.0D, 4.0D), Block.box(4.0D, 15.0D, -3.0D, 5.0D, 16.0D, 0.0D), Block.box(0.0D, 0.0D, -15.0D, 15.0D, 2.0D, 0.0D), Block.box(13.0D, 2.0D, -15.0D, 15.0D, 7.0D, -6.0D), Block.box(13.0D, 7.0D, -15.0D, 15.0D, 12.0D, 0.0D), Block.box(0.0D, 12.0D, -7.0D, 15.0D, 14.0D, 0.0D), Block.box(0.0D, 9.0D, -7.0D, 13.0D, 12.0D, 0.0D), Block.box(0.0D, 2.0D, -15.0D, 13.0D, 12.0D, -13.0D), Block.box(2.0D, 14.0D, -4.0D, 4.0D, 16.0D, 0.0D), Block.box(0.0D, 14.0D, -4.0D, 2.0D, 16.0D, -2.0D), Block.box(0.0D, 12.0D, -15.0D, 15.0D, 14.0D, -11.0D), Block.box(9.0D, 12.0D, -11.0D, 15.0D, 14.0D, -7.0D), Block.box(9.0D, 9.0D, -13.0D, 13.0D, 12.0D, -7.0D), Block.box(1.0D, 9.0D, -13.0D, 9.0D, 12.0D, -11.0D), Block.box(0.0D, 12.0D, -11.0D, 1.0D, 14.0D, -7.0D), Block.box(0.0D, 9.0D, -13.0D, 1.0D, 12.0D, -7.0D), Block.box(1.0D, 9.0D, -11.0D, 9.0D, 10.0D, -7.0D), Block.box(-4.0D, 16.0D, 0.0D, -2.0D, 31.0D, 4.0D), Block.box(-2.0D, 16.0D, 2.0D, 0.0D, 31.0D, 4.0D), Block.box(-5.0D, 31.0D, 0.0D, -3.0D, 32.0D, 5.0D), Block.box(-3.0D, 31.0D, 3.0D, 0.0D, 32.0D, 5.0D), Block.box(-14.0D, 16.0D, 4.0D, 0.0D, 22.0D, 14.0D), Block.box(-14.0D, 16.0D, 0.0D, -4.0D, 22.0D, 4.0D), Block.box(-13.0D, 22.0D, 0.0D, -4.0D, 30.0D, 4.0D), Block.box(-13.0D, 22.0D, 4.0D, 0.0D, 30.0D, 13.0D), Block.box(-11.0D, 30.0D, 5.0D, -5.0D, 32.0D, 11.0D), Block.box(-14.0D, 16.0D, -4.0D, -4.0D, 22.0D, 0.0D), Block.box(-13.0D, 22.0D, -4.0D, -4.0D, 30.0D, 0.0D), Block.box(-2.0D, 26.0D, -12.0D, -1.0D, 27.0D, -4.0D), Block.box(-4.0D, 16.0D, -4.0D, -2.0D, 31.0D, 0.0D), Block.box(-2.0D, 16.0D, -4.0D, 0.0D, 31.0D, -2.0D), Block.box(-5.0D, 31.0D, -5.0D, -3.0D, 32.0D, 0.0D), Block.box(-3.0D, 31.0D, -5.0D, 0.0D, 32.0D, -3.0D), Block.box(-14.0D, 16.0D, -14.0D, -2.0D, 22.0D, -4.0D), Block.box(-13.0D, 22.0D, -13.0D, -3.0D, 30.0D, -4.0D), Block.box(-11.0D, 30.0D, -11.0D, -5.0D, 32.0D, -5.0D), Block.box(-3.0D, 26.0D, -13.0D, 0.0D, 27.0D, -12.0D), Block.box(4.0D, 16.0D, 0.0D, 5.0D, 21.0D, 3.0D), Block.box(7.0D, 16.0D, 3.0D, 13.0D, 19.0D, 13.0D), Block.box(2.0D, 16.0D, 0.0D, 4.0D, 31.0D, 4.0D), Block.box(0.0D, 16.0D, 2.0D, 2.0D, 31.0D, 4.0D), Block.box(0.0D, 26.0D, 4.0D, 13.0D, 30.0D, 13.0D), Block.box(4.0D, 26.0D, 3.0D, 13.0D, 30.0D, 4.0D), Block.box(3.0D, 31.0D, 0.0D, 5.0D, 32.0D, 5.0D), Block.box(0.0D, 31.0D, 3.0D, 3.0D, 32.0D, 5.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(4.0D, 26.0D, 0.0D, 5.0D, 27.0D, 3.0D), Block.box(4.0D, 16.0D, -3.0D, 5.0D, 21.0D, 0.0D), Block.box(0.0D, 16.0D, -4.0D, 2.0D, 31.0D, -2.0D), Block.box(0.0D, 31.0D, -5.0D, 3.0D, 32.0D, -3.0D), Block.box(2.0D, 16.0D, -4.0D, 4.0D, 31.0D, 0.0D), Block.box(3.0D, 31.0D, -5.0D, 5.0D, 32.0D, 0.0D), Block.box(4.0D, 26.0D, -12.0D, 5.0D, 27.0D, -4.0D), Block.box(2.0D, 26.0D, -12.0D, 3.0D, 27.0D, -4.0D), Block.box(0.0D, 26.0D, -12.0D, 1.0D, 27.0D, -4.0D), Block.box(4.0D, 26.0D, -4.0D, 5.0D, 27.0D, 0.0D), Block.box(0.0D, 26.0D, -13.0D, 5.0D, 27.0D, -12.0D), Block.box(1.0D, 27.0D, -8.0D, 6.0D, 30.0D, -5.0D), Block.box(3.0D, 21.0D, -7.0D, 4.0D, 27.0D, -6.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_FRONT_LEFT_SOUTH = Stream.of(Block.box(12.0D, 14.0D, -2.0D, 14.0D, 16.0D, 0.0D), Block.box(12.0D, 14.0D, -14.0D, 16.0D, 16.0D, -4.0D), Block.box(12.0D, 14.0D, -4.0D, 16.0D, 16.0D, -2.0D), Block.box(1.0D, 0.0D, -15.0D, 16.0D, 2.0D, 0.0D), Block.box(1.0D, 12.0D, -15.0D, 16.0D, 14.0D, 0.0D), Block.box(1.0D, 2.0D, -15.0D, 16.0D, 12.0D, 0.0D), Block.box(2.0D, 14.0D, -14.0D, 12.0D, 16.0D, 0.0D), Block.box(16.0D, 14.0D, -14.0D, 20.0D, 16.0D, -4.0D), Block.box(18.0D, 14.0D, -2.0D, 20.0D, 16.0D, 0.0D), Block.box(16.0D, 14.0D, -4.0D, 20.0D, 16.0D, -2.0D), Block.box(20.0D, 14.0D, -14.0D, 30.0D, 16.0D, -2.0D), Block.box(16.0D, 0.0D, -15.0D, 31.0D, 2.0D, 0.0D), Block.box(16.0D, 12.0D, -15.0D, 31.0D, 14.0D, 0.0D), Block.box(16.0D, 2.0D, -15.0D, 31.0D, 12.0D, 0.0D), Block.box(3.0D, 9.0D, 0.0D, 16.0D, 12.0D, 13.0D), Block.box(1.0D, 0.0D, 0.0D, 16.0D, 2.0D, 15.0D), Block.box(1.0D, 2.0D, 13.0D, 10.0D, 7.0D, 15.0D), Block.box(1.0D, 7.0D, 13.0D, 16.0D, 12.0D, 15.0D), Block.box(1.0D, 12.0D, 0.0D, 16.0D, 14.0D, 15.0D), Block.box(1.0D, 2.0D, 0.0D, 3.0D, 12.0D, 13.0D), Block.box(13.0D, 15.0D, 4.0D, 16.0D, 16.0D, 5.0D), Block.box(4.0D, 14.0D, 8.0D, 12.0D, 15.0D, 12.0D), Block.box(5.0D, 15.0D, 9.0D, 11.0D, 16.0D, 11.0D), Block.box(12.0D, 14.0D, 2.0D, 16.0D, 16.0D, 4.0D), Block.box(12.0D, 14.0D, 0.0D, 14.0D, 16.0D, 2.0D), Block.box(16.0D, 15.0D, 4.0D, 19.0D, 16.0D, 5.0D), Block.box(16.0D, 0.0D, 0.0D, 31.0D, 2.0D, 15.0D), Block.box(22.0D, 2.0D, 13.0D, 31.0D, 7.0D, 15.0D), Block.box(16.0D, 7.0D, 13.0D, 31.0D, 12.0D, 15.0D), Block.box(16.0D, 12.0D, 0.0D, 23.0D, 14.0D, 15.0D), Block.box(16.0D, 9.0D, 0.0D, 23.0D, 12.0D, 13.0D), Block.box(29.0D, 2.0D, 0.0D, 31.0D, 12.0D, 13.0D), Block.box(16.0D, 14.0D, 2.0D, 20.0D, 16.0D, 4.0D), Block.box(18.0D, 14.0D, 0.0D, 20.0D, 16.0D, 2.0D), Block.box(27.0D, 12.0D, 0.0D, 31.0D, 14.0D, 15.0D), Block.box(23.0D, 12.0D, 9.0D, 27.0D, 14.0D, 15.0D), Block.box(23.0D, 9.0D, 9.0D, 29.0D, 12.0D, 13.0D), Block.box(27.0D, 9.0D, 1.0D, 29.0D, 12.0D, 9.0D), Block.box(23.0D, 12.0D, 0.0D, 27.0D, 14.0D, 1.0D), Block.box(23.0D, 9.0D, 0.0D, 29.0D, 12.0D, 1.0D), Block.box(23.0D, 9.0D, 1.0D, 27.0D, 10.0D, 9.0D), Block.box(12.0D, 16.0D, -4.0D, 16.0D, 31.0D, -2.0D), Block.box(12.0D, 16.0D, -2.0D, 14.0D, 31.0D, 0.0D), Block.box(11.0D, 31.0D, -5.0D, 16.0D, 32.0D, -3.0D), Block.box(11.0D, 31.0D, -3.0D, 13.0D, 32.0D, 0.0D), Block.box(2.0D, 16.0D, -14.0D, 12.0D, 22.0D, 0.0D), Block.box(12.0D, 16.0D, -14.0D, 16.0D, 22.0D, -4.0D), Block.box(12.0D, 22.0D, -13.0D, 16.0D, 30.0D, -4.0D), Block.box(3.0D, 22.0D, -13.0D, 12.0D, 30.0D, 0.0D), Block.box(5.0D, 30.0D, -11.0D, 11.0D, 32.0D, -5.0D), Block.box(16.0D, 16.0D, -14.0D, 20.0D, 22.0D, -4.0D), Block.box(16.0D, 22.0D, -13.0D, 20.0D, 30.0D, -4.0D), Block.box(20.0D, 26.0D, -2.0D, 28.0D, 27.0D, -1.0D), Block.box(16.0D, 16.0D, -4.0D, 20.0D, 31.0D, -2.0D), Block.box(18.0D, 16.0D, -2.0D, 20.0D, 31.0D, 0.0D), Block.box(16.0D, 31.0D, -5.0D, 21.0D, 32.0D, -3.0D), Block.box(19.0D, 31.0D, -3.0D, 21.0D, 32.0D, 0.0D), Block.box(20.0D, 16.0D, -14.0D, 30.0D, 22.0D, -2.0D), Block.box(20.0D, 22.0D, -13.0D, 29.0D, 30.0D, -3.0D), Block.box(21.0D, 30.0D, -11.0D, 27.0D, 32.0D, -5.0D), Block.box(28.0D, 26.0D, -3.0D, 29.0D, 27.0D, 0.0D), Block.box(13.0D, 16.0D, 4.0D, 16.0D, 21.0D, 5.0D), Block.box(3.0D, 16.0D, 7.0D, 13.0D, 19.0D, 13.0D), Block.box(12.0D, 16.0D, 2.0D, 16.0D, 31.0D, 4.0D), Block.box(12.0D, 16.0D, 0.0D, 14.0D, 31.0D, 2.0D), Block.box(3.0D, 26.0D, 0.0D, 12.0D, 30.0D, 13.0D), Block.box(12.0D, 26.0D, 4.0D, 13.0D, 30.0D, 13.0D), Block.box(11.0D, 31.0D, 3.0D, 16.0D, 32.0D, 5.0D), Block.box(11.0D, 31.0D, 0.0D, 13.0D, 32.0D, 3.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(13.0D, 26.0D, 4.0D, 16.0D, 27.0D, 5.0D), Block.box(16.0D, 16.0D, 4.0D, 19.0D, 21.0D, 5.0D), Block.box(18.0D, 16.0D, 0.0D, 20.0D, 31.0D, 2.0D), Block.box(19.0D, 31.0D, 0.0D, 21.0D, 32.0D, 3.0D), Block.box(16.0D, 16.0D, 2.0D, 20.0D, 31.0D, 4.0D), Block.box(16.0D, 31.0D, 3.0D, 21.0D, 32.0D, 5.0D), Block.box(20.0D, 26.0D, 4.0D, 28.0D, 27.0D, 5.0D), Block.box(20.0D, 26.0D, 2.0D, 28.0D, 27.0D, 3.0D), Block.box(20.0D, 26.0D, 0.0D, 28.0D, 27.0D, 1.0D), Block.box(16.0D, 26.0D, 4.0D, 20.0D, 27.0D, 5.0D), Block.box(28.0D, 26.0D, 0.0D, 29.0D, 27.0D, 5.0D), Block.box(21.0D, 27.0D, 1.0D, 24.0D, 30.0D, 6.0D), Block.box(22.0D, 21.0D, 3.0D, 23.0D, 27.0D, 4.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_FRONT_LEFT_WEST = Stream.of(Block.box(16.0D, 14.0D, 12.0D, 18.0D, 16.0D, 14.0D), Block.box(20.0D, 14.0D, 12.0D, 30.0D, 16.0D, 16.0D), Block.box(18.0D, 14.0D, 12.0D, 20.0D, 16.0D, 16.0D), Block.box(16.0D, 0.0D, 1.0D, 31.0D, 2.0D, 16.0D), Block.box(16.0D, 12.0D, 1.0D, 31.0D, 14.0D, 16.0D), Block.box(16.0D, 2.0D, 1.0D, 31.0D, 12.0D, 16.0D), Block.box(16.0D, 14.0D, 2.0D, 30.0D, 16.0D, 12.0D), Block.box(20.0D, 14.0D, 16.0D, 30.0D, 16.0D, 20.0D), Block.box(16.0D, 14.0D, 18.0D, 18.0D, 16.0D, 20.0D), Block.box(18.0D, 14.0D, 16.0D, 20.0D, 16.0D, 20.0D), Block.box(18.0D, 14.0D, 20.0D, 30.0D, 16.0D, 30.0D), Block.box(16.0D, 0.0D, 16.0D, 31.0D, 2.0D, 31.0D), Block.box(16.0D, 12.0D, 16.0D, 31.0D, 14.0D, 31.0D), Block.box(16.0D, 2.0D, 16.0D, 31.0D, 12.0D, 31.0D), Block.box(3.0D, 9.0D, 3.0D, 16.0D, 12.0D, 16.0D), Block.box(1.0D, 0.0D, 1.0D, 16.0D, 2.0D, 16.0D), Block.box(1.0D, 2.0D, 1.0D, 3.0D, 7.0D, 10.0D), Block.box(1.0D, 7.0D, 1.0D, 3.0D, 12.0D, 16.0D), Block.box(1.0D, 12.0D, 1.0D, 16.0D, 14.0D, 16.0D), Block.box(3.0D, 2.0D, 1.0D, 16.0D, 12.0D, 3.0D), Block.box(11.0D, 15.0D, 13.0D, 12.0D, 16.0D, 16.0D), Block.box(4.0D, 14.0D, 4.0D, 8.0D, 15.0D, 12.0D), Block.box(5.0D, 15.0D, 5.0D, 7.0D, 16.0D, 11.0D), Block.box(12.0D, 14.0D, 12.0D, 14.0D, 16.0D, 16.0D), Block.box(14.0D, 14.0D, 12.0D, 16.0D, 16.0D, 14.0D), Block.box(11.0D, 15.0D, 16.0D, 12.0D, 16.0D, 19.0D), Block.box(1.0D, 0.0D, 16.0D, 16.0D, 2.0D, 31.0D), Block.box(1.0D, 2.0D, 22.0D, 3.0D, 7.0D, 31.0D), Block.box(1.0D, 7.0D, 16.0D, 3.0D, 12.0D, 31.0D), Block.box(1.0D, 12.0D, 16.0D, 16.0D, 14.0D, 23.0D), Block.box(3.0D, 9.0D, 16.0D, 16.0D, 12.0D, 23.0D), Block.box(3.0D, 2.0D, 29.0D, 16.0D, 12.0D, 31.0D), Block.box(12.0D, 14.0D, 16.0D, 14.0D, 16.0D, 20.0D), Block.box(14.0D, 14.0D, 18.0D, 16.0D, 16.0D, 20.0D), Block.box(1.0D, 12.0D, 27.0D, 16.0D, 14.0D, 31.0D), Block.box(1.0D, 12.0D, 23.0D, 7.0D, 14.0D, 27.0D), Block.box(3.0D, 9.0D, 23.0D, 7.0D, 12.0D, 29.0D), Block.box(7.0D, 9.0D, 27.0D, 15.0D, 12.0D, 29.0D), Block.box(15.0D, 12.0D, 23.0D, 16.0D, 14.0D, 27.0D), Block.box(15.0D, 9.0D, 23.0D, 16.0D, 12.0D, 29.0D), Block.box(7.0D, 9.0D, 23.0D, 15.0D, 10.0D, 27.0D), Block.box(18.0D, 16.0D, 12.0D, 20.0D, 31.0D, 16.0D), Block.box(16.0D, 16.0D, 12.0D, 18.0D, 31.0D, 14.0D), Block.box(19.0D, 31.0D, 11.0D, 21.0D, 32.0D, 16.0D), Block.box(16.0D, 31.0D, 11.0D, 19.0D, 32.0D, 13.0D), Block.box(16.0D, 16.0D, 2.0D, 30.0D, 22.0D, 12.0D), Block.box(20.0D, 16.0D, 12.0D, 30.0D, 22.0D, 16.0D), Block.box(20.0D, 22.0D, 12.0D, 29.0D, 30.0D, 16.0D), Block.box(16.0D, 22.0D, 3.0D, 29.0D, 30.0D, 12.0D), Block.box(21.0D, 30.0D, 5.0D, 27.0D, 32.0D, 11.0D), Block.box(20.0D, 16.0D, 16.0D, 30.0D, 22.0D, 20.0D), Block.box(20.0D, 22.0D, 16.0D, 29.0D, 30.0D, 20.0D), Block.box(17.0D, 26.0D, 20.0D, 18.0D, 27.0D, 28.0D), Block.box(18.0D, 16.0D, 16.0D, 20.0D, 31.0D, 20.0D), Block.box(16.0D, 16.0D, 18.0D, 18.0D, 31.0D, 20.0D), Block.box(19.0D, 31.0D, 16.0D, 21.0D, 32.0D, 21.0D), Block.box(16.0D, 31.0D, 19.0D, 19.0D, 32.0D, 21.0D), Block.box(18.0D, 16.0D, 20.0D, 30.0D, 22.0D, 30.0D), Block.box(19.0D, 22.0D, 20.0D, 29.0D, 30.0D, 29.0D), Block.box(21.0D, 30.0D, 21.0D, 27.0D, 32.0D, 27.0D), Block.box(16.0D, 26.0D, 28.0D, 19.0D, 27.0D, 29.0D), Block.box(11.0D, 16.0D, 13.0D, 12.0D, 21.0D, 16.0D), Block.box(3.0D, 16.0D, 3.0D, 9.0D, 19.0D, 13.0D), Block.box(12.0D, 16.0D, 12.0D, 14.0D, 31.0D, 16.0D), Block.box(14.0D, 16.0D, 12.0D, 16.0D, 31.0D, 14.0D), Block.box(3.0D, 26.0D, 3.0D, 16.0D, 30.0D, 12.0D), Block.box(3.0D, 26.0D, 12.0D, 12.0D, 30.0D, 13.0D), Block.box(11.0D, 31.0D, 11.0D, 13.0D, 32.0D, 16.0D), Block.box(13.0D, 31.0D, 11.0D, 16.0D, 32.0D, 13.0D), Block.box(5.0D, 30.0D, 5.0D, 11.0D, 32.0D, 11.0D), Block.box(11.0D, 26.0D, 13.0D, 12.0D, 27.0D, 16.0D), Block.box(11.0D, 16.0D, 16.0D, 12.0D, 21.0D, 19.0D), Block.box(14.0D, 16.0D, 18.0D, 16.0D, 31.0D, 20.0D), Block.box(13.0D, 31.0D, 19.0D, 16.0D, 32.0D, 21.0D), Block.box(12.0D, 16.0D, 16.0D, 14.0D, 31.0D, 20.0D), Block.box(11.0D, 31.0D, 16.0D, 13.0D, 32.0D, 21.0D), Block.box(11.0D, 26.0D, 20.0D, 12.0D, 27.0D, 28.0D), Block.box(13.0D, 26.0D, 20.0D, 14.0D, 27.0D, 28.0D), Block.box(15.0D, 26.0D, 20.0D, 16.0D, 27.0D, 28.0D), Block.box(11.0D, 26.0D, 16.0D, 12.0D, 27.0D, 20.0D), Block.box(11.0D, 26.0D, 28.0D, 16.0D, 27.0D, 29.0D), Block.box(10.0D, 27.0D, 21.0D, 15.0D, 30.0D, 24.0D), Block.box(12.0D, 21.0D, 22.0D, 13.0D, 27.0D, 23.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape BOTTOM_FRONT_RIGHT_NORTH = Stream.of(Block.box(18.0D, 14.0D, 16.0D, 20.0D, 16.0D, 18.0D), Block.box(16.0D, 14.0D, 20.0D, 20.0D, 16.0D, 30.0D), Block.box(16.0D, 14.0D, 18.0D, 20.0D, 16.0D, 20.0D), Block.box(16.0D, 0.0D, 16.0D, 31.0D, 2.0D, 31.0D), Block.box(16.0D, 12.0D, 16.0D, 31.0D, 14.0D, 31.0D), Block.box(16.0D, 2.0D, 16.0D, 31.0D, 12.0D, 31.0D), Block.box(20.0D, 14.0D, 16.0D, 30.0D, 16.0D, 30.0D), Block.box(12.0D, 14.0D, 20.0D, 16.0D, 16.0D, 30.0D), Block.box(12.0D, 14.0D, 16.0D, 14.0D, 16.0D, 18.0D), Block.box(12.0D, 14.0D, 18.0D, 16.0D, 16.0D, 20.0D), Block.box(2.0D, 14.0D, 18.0D, 12.0D, 16.0D, 30.0D), Block.box(1.0D, 0.0D, 16.0D, 16.0D, 2.0D, 31.0D), Block.box(1.0D, 12.0D, 16.0D, 16.0D, 14.0D, 31.0D), Block.box(1.0D, 2.0D, 16.0D, 16.0D, 12.0D, 31.0D), Block.box(16.0D, 9.0D, 3.0D, 29.0D, 12.0D, 16.0D), Block.box(16.0D, 0.0D, 1.0D, 31.0D, 2.0D, 16.0D), Block.box(22.0D, 2.0D, 1.0D, 31.0D, 7.0D, 3.0D), Block.box(16.0D, 7.0D, 1.0D, 31.0D, 12.0D, 3.0D), Block.box(16.0D, 12.0D, 1.0D, 31.0D, 14.0D, 16.0D), Block.box(29.0D, 2.0D, 3.0D, 31.0D, 12.0D, 16.0D), Block.box(16.0D, 15.0D, 11.0D, 19.0D, 16.0D, 12.0D), Block.box(20.0D, 14.0D, 4.0D, 28.0D, 15.0D, 8.0D), Block.box(21.0D, 15.0D, 5.0D, 27.0D, 16.0D, 7.0D), Block.box(16.0D, 14.0D, 12.0D, 20.0D, 16.0D, 14.0D), Block.box(18.0D, 14.0D, 14.0D, 20.0D, 16.0D, 16.0D), Block.box(13.0D, 15.0D, 11.0D, 16.0D, 16.0D, 12.0D), Block.box(1.0D, 0.0D, 1.0D, 16.0D, 2.0D, 16.0D), Block.box(1.0D, 2.0D, 1.0D, 10.0D, 7.0D, 3.0D), Block.box(1.0D, 7.0D, 1.0D, 16.0D, 12.0D, 3.0D), Block.box(9.0D, 12.0D, 1.0D, 16.0D, 14.0D, 16.0D), Block.box(9.0D, 9.0D, 3.0D, 16.0D, 12.0D, 16.0D), Block.box(1.0D, 2.0D, 3.0D, 3.0D, 12.0D, 16.0D), Block.box(12.0D, 14.0D, 12.0D, 16.0D, 16.0D, 14.0D), Block.box(12.0D, 14.0D, 14.0D, 14.0D, 16.0D, 16.0D), Block.box(1.0D, 12.0D, 1.0D, 5.0D, 14.0D, 16.0D), Block.box(5.0D, 12.0D, 1.0D, 9.0D, 14.0D, 7.0D), Block.box(3.0D, 9.0D, 3.0D, 9.0D, 12.0D, 7.0D), Block.box(3.0D, 9.0D, 7.0D, 5.0D, 12.0D, 15.0D), Block.box(5.0D, 12.0D, 15.0D, 9.0D, 14.0D, 16.0D), Block.box(3.0D, 9.0D, 15.0D, 9.0D, 12.0D, 16.0D), Block.box(5.0D, 9.0D, 7.0D, 9.0D, 10.0D, 15.0D), Block.box(16.0D, 16.0D, 18.0D, 20.0D, 31.0D, 20.0D), Block.box(18.0D, 16.0D, 16.0D, 20.0D, 31.0D, 18.0D), Block.box(16.0D, 31.0D, 19.0D, 21.0D, 32.0D, 21.0D), Block.box(19.0D, 31.0D, 16.0D, 21.0D, 32.0D, 19.0D), Block.box(20.0D, 16.0D, 16.0D, 30.0D, 22.0D, 30.0D), Block.box(16.0D, 16.0D, 20.0D, 20.0D, 22.0D, 30.0D), Block.box(16.0D, 22.0D, 20.0D, 20.0D, 30.0D, 29.0D), Block.box(20.0D, 22.0D, 16.0D, 29.0D, 30.0D, 29.0D), Block.box(21.0D, 30.0D, 21.0D, 27.0D, 32.0D, 27.0D), Block.box(12.0D, 16.0D, 20.0D, 16.0D, 22.0D, 30.0D), Block.box(12.0D, 22.0D, 20.0D, 16.0D, 30.0D, 29.0D), Block.box(4.0D, 26.0D, 17.0D, 12.0D, 27.0D, 18.0D), Block.box(12.0D, 16.0D, 18.0D, 16.0D, 31.0D, 20.0D), Block.box(12.0D, 16.0D, 16.0D, 14.0D, 31.0D, 18.0D), Block.box(11.0D, 31.0D, 19.0D, 16.0D, 32.0D, 21.0D), Block.box(11.0D, 31.0D, 16.0D, 13.0D, 32.0D, 19.0D), Block.box(2.0D, 16.0D, 18.0D, 12.0D, 22.0D, 30.0D), Block.box(3.0D, 22.0D, 19.0D, 12.0D, 30.0D, 29.0D), Block.box(5.0D, 30.0D, 21.0D, 11.0D, 32.0D, 27.0D), Block.box(3.0D, 26.0D, 16.0D, 4.0D, 27.0D, 19.0D), Block.box(16.0D, 16.0D, 11.0D, 19.0D, 21.0D, 12.0D), Block.box(19.0D, 16.0D, 3.0D, 29.0D, 19.0D, 9.0D), Block.box(16.0D, 16.0D, 12.0D, 20.0D, 31.0D, 14.0D), Block.box(18.0D, 16.0D, 14.0D, 20.0D, 31.0D, 16.0D), Block.box(20.0D, 26.0D, 3.0D, 29.0D, 30.0D, 16.0D), Block.box(19.0D, 26.0D, 3.0D, 20.0D, 30.0D, 12.0D), Block.box(16.0D, 31.0D, 11.0D, 21.0D, 32.0D, 13.0D), Block.box(19.0D, 31.0D, 13.0D, 21.0D, 32.0D, 16.0D), Block.box(21.0D, 30.0D, 5.0D, 27.0D, 32.0D, 11.0D), Block.box(16.0D, 26.0D, 11.0D, 19.0D, 27.0D, 12.0D), Block.box(13.0D, 16.0D, 11.0D, 16.0D, 21.0D, 12.0D), Block.box(12.0D, 16.0D, 14.0D, 14.0D, 31.0D, 16.0D), Block.box(11.0D, 31.0D, 13.0D, 13.0D, 32.0D, 16.0D), Block.box(12.0D, 16.0D, 12.0D, 16.0D, 31.0D, 14.0D), Block.box(11.0D, 31.0D, 11.0D, 16.0D, 32.0D, 13.0D), Block.box(4.0D, 26.0D, 11.0D, 12.0D, 27.0D, 12.0D), Block.box(4.0D, 26.0D, 13.0D, 12.0D, 27.0D, 14.0D), Block.box(4.0D, 26.0D, 15.0D, 12.0D, 27.0D, 16.0D), Block.box(12.0D, 26.0D, 11.0D, 16.0D, 27.0D, 12.0D), Block.box(3.0D, 26.0D, 11.0D, 4.0D, 27.0D, 16.0D), Block.box(8.0D, 27.0D, 10.0D, 11.0D, 30.0D, 15.0D), Block.box(9.0D, 21.0D, 12.0D, 10.0D, 27.0D, 13.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_FRONT_RIGHT_EAST = Stream.of(Block.box(-2.0D, 14.0D, 18.0D, 0.0D, 16.0D, 20.0D), Block.box(-14.0D, 14.0D, 16.0D, -4.0D, 16.0D, 20.0D), Block.box(-4.0D, 14.0D, 16.0D, -2.0D, 16.0D, 20.0D), Block.box(-15.0D, 0.0D, 16.0D, 0.0D, 2.0D, 31.0D), Block.box(-15.0D, 12.0D, 16.0D, 0.0D, 14.0D, 31.0D), Block.box(-15.0D, 2.0D, 16.0D, 0.0D, 12.0D, 31.0D), Block.box(-14.0D, 14.0D, 20.0D, 0.0D, 16.0D, 30.0D), Block.box(-14.0D, 14.0D, 12.0D, -4.0D, 16.0D, 16.0D), Block.box(-2.0D, 14.0D, 12.0D, 0.0D, 16.0D, 14.0D), Block.box(-4.0D, 14.0D, 12.0D, -2.0D, 16.0D, 16.0D), Block.box(-14.0D, 14.0D, 2.0D, -2.0D, 16.0D, 12.0D), Block.box(-15.0D, 0.0D, 1.0D, 0.0D, 2.0D, 16.0D), Block.box(-15.0D, 12.0D, 1.0D, 0.0D, 14.0D, 16.0D), Block.box(-15.0D, 2.0D, 1.0D, 0.0D, 12.0D, 16.0D), Block.box(0.0D, 9.0D, 16.0D, 13.0D, 12.0D, 29.0D), Block.box(0.0D, 0.0D, 16.0D, 15.0D, 2.0D, 31.0D), Block.box(13.0D, 2.0D, 22.0D, 15.0D, 7.0D, 31.0D), Block.box(13.0D, 7.0D, 16.0D, 15.0D, 12.0D, 31.0D), Block.box(0.0D, 12.0D, 16.0D, 15.0D, 14.0D, 31.0D), Block.box(0.0D, 2.0D, 29.0D, 13.0D, 12.0D, 31.0D), Block.box(4.0D, 15.0D, 16.0D, 5.0D, 16.0D, 19.0D), Block.box(8.0D, 14.0D, 20.0D, 12.0D, 15.0D, 28.0D), Block.box(9.0D, 15.0D, 21.0D, 11.0D, 16.0D, 27.0D), Block.box(2.0D, 14.0D, 16.0D, 4.0D, 16.0D, 20.0D), Block.box(0.0D, 14.0D, 18.0D, 2.0D, 16.0D, 20.0D), Block.box(4.0D, 15.0D, 13.0D, 5.0D, 16.0D, 16.0D), Block.box(0.0D, 0.0D, 1.0D, 15.0D, 2.0D, 16.0D), Block.box(13.0D, 2.0D, 1.0D, 15.0D, 7.0D, 10.0D), Block.box(13.0D, 7.0D, 1.0D, 15.0D, 12.0D, 16.0D), Block.box(0.0D, 12.0D, 9.0D, 15.0D, 14.0D, 16.0D), Block.box(0.0D, 9.0D, 9.0D, 13.0D, 12.0D, 16.0D), Block.box(0.0D, 2.0D, 1.0D, 13.0D, 12.0D, 3.0D), Block.box(2.0D, 14.0D, 12.0D, 4.0D, 16.0D, 16.0D), Block.box(0.0D, 14.0D, 12.0D, 2.0D, 16.0D, 14.0D), Block.box(0.0D, 12.0D, 1.0D, 15.0D, 14.0D, 5.0D), Block.box(9.0D, 12.0D, 5.0D, 15.0D, 14.0D, 9.0D), Block.box(9.0D, 9.0D, 3.0D, 13.0D, 12.0D, 9.0D), Block.box(1.0D, 9.0D, 3.0D, 9.0D, 12.0D, 5.0D), Block.box(0.0D, 12.0D, 5.0D, 1.0D, 14.0D, 9.0D), Block.box(0.0D, 9.0D, 3.0D, 1.0D, 12.0D, 9.0D), Block.box(1.0D, 9.0D, 5.0D, 9.0D, 10.0D, 9.0D), Block.box(-4.0D, 16.0D, 16.0D, -2.0D, 31.0D, 20.0D), Block.box(-2.0D, 16.0D, 18.0D, 0.0D, 31.0D, 20.0D), Block.box(-5.0D, 31.0D, 16.0D, -3.0D, 32.0D, 21.0D), Block.box(-3.0D, 31.0D, 19.0D, 0.0D, 32.0D, 21.0D), Block.box(-14.0D, 16.0D, 20.0D, 0.0D, 22.0D, 30.0D), Block.box(-14.0D, 16.0D, 16.0D, -4.0D, 22.0D, 20.0D), Block.box(-13.0D, 22.0D, 16.0D, -4.0D, 30.0D, 20.0D), Block.box(-13.0D, 22.0D, 20.0D, 0.0D, 30.0D, 29.0D), Block.box(-11.0D, 30.0D, 21.0D, -5.0D, 32.0D, 27.0D), Block.box(-14.0D, 16.0D, 12.0D, -4.0D, 22.0D, 16.0D), Block.box(-13.0D, 22.0D, 12.0D, -4.0D, 30.0D, 16.0D), Block.box(-2.0D, 26.0D, 4.0D, -1.0D, 27.0D, 12.0D), Block.box(-4.0D, 16.0D, 12.0D, -2.0D, 31.0D, 16.0D), Block.box(-2.0D, 16.0D, 12.0D, 0.0D, 31.0D, 14.0D), Block.box(-5.0D, 31.0D, 11.0D, -3.0D, 32.0D, 16.0D), Block.box(-3.0D, 31.0D, 11.0D, 0.0D, 32.0D, 13.0D), Block.box(-14.0D, 16.0D, 2.0D, -2.0D, 22.0D, 12.0D), Block.box(-13.0D, 22.0D, 3.0D, -3.0D, 30.0D, 12.0D), Block.box(-11.0D, 30.0D, 5.0D, -5.0D, 32.0D, 11.0D), Block.box(-3.0D, 26.0D, 3.0D, 0.0D, 27.0D, 4.0D), Block.box(4.0D, 16.0D, 16.0D, 5.0D, 21.0D, 19.0D), Block.box(7.0D, 16.0D, 19.0D, 13.0D, 19.0D, 29.0D), Block.box(2.0D, 16.0D, 16.0D, 4.0D, 31.0D, 20.0D), Block.box(0.0D, 16.0D, 18.0D, 2.0D, 31.0D, 20.0D), Block.box(0.0D, 26.0D, 20.0D, 13.0D, 30.0D, 29.0D), Block.box(4.0D, 26.0D, 19.0D, 13.0D, 30.0D, 20.0D), Block.box(3.0D, 31.0D, 16.0D, 5.0D, 32.0D, 21.0D), Block.box(0.0D, 31.0D, 19.0D, 3.0D, 32.0D, 21.0D), Block.box(5.0D, 30.0D, 21.0D, 11.0D, 32.0D, 27.0D), Block.box(4.0D, 26.0D, 16.0D, 5.0D, 27.0D, 19.0D), Block.box(4.0D, 16.0D, 13.0D, 5.0D, 21.0D, 16.0D), Block.box(0.0D, 16.0D, 12.0D, 2.0D, 31.0D, 14.0D), Block.box(0.0D, 31.0D, 11.0D, 3.0D, 32.0D, 13.0D), Block.box(2.0D, 16.0D, 12.0D, 4.0D, 31.0D, 16.0D), Block.box(3.0D, 31.0D, 11.0D, 5.0D, 32.0D, 16.0D), Block.box(4.0D, 26.0D, 4.0D, 5.0D, 27.0D, 12.0D), Block.box(2.0D, 26.0D, 4.0D, 3.0D, 27.0D, 12.0D), Block.box(0.0D, 26.0D, 4.0D, 1.0D, 27.0D, 12.0D), Block.box(4.0D, 26.0D, 12.0D, 5.0D, 27.0D, 16.0D), Block.box(0.0D, 26.0D, 3.0D, 5.0D, 27.0D, 4.0D), Block.box(1.0D, 27.0D, 8.0D, 6.0D, 30.0D, 11.0D), Block.box(3.0D, 21.0D, 9.0D, 4.0D, 27.0D, 10.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_FRONT_RIGHT_SOUTH = Stream.of(Block.box(-4.0D, 14.0D, -2.0D, -2.0D, 16.0D, 0.0D), Block.box(-4.0D, 14.0D, -14.0D, 0.0D, 16.0D, -4.0D), Block.box(-4.0D, 14.0D, -4.0D, 0.0D, 16.0D, -2.0D), Block.box(-15.0D, 0.0D, -15.0D, 0.0D, 2.0D, 0.0D), Block.box(-15.0D, 12.0D, -15.0D, 0.0D, 14.0D, 0.0D), Block.box(-15.0D, 2.0D, -15.0D, 0.0D, 12.0D, 0.0D), Block.box(-14.0D, 14.0D, -14.0D, -4.0D, 16.0D, 0.0D), Block.box(0.0D, 14.0D, -14.0D, 4.0D, 16.0D, -4.0D), Block.box(2.0D, 14.0D, -2.0D, 4.0D, 16.0D, 0.0D), Block.box(0.0D, 14.0D, -4.0D, 4.0D, 16.0D, -2.0D), Block.box(4.0D, 14.0D, -14.0D, 14.0D, 16.0D, -2.0D), Block.box(0.0D, 0.0D, -15.0D, 15.0D, 2.0D, 0.0D), Block.box(0.0D, 12.0D, -15.0D, 15.0D, 14.0D, 0.0D), Block.box(0.0D, 2.0D, -15.0D, 15.0D, 12.0D, 0.0D), Block.box(-13.0D, 9.0D, 0.0D, 0.0D, 12.0D, 13.0D), Block.box(-15.0D, 0.0D, 0.0D, 0.0D, 2.0D, 15.0D), Block.box(-15.0D, 2.0D, 13.0D, -6.0D, 7.0D, 15.0D), Block.box(-15.0D, 7.0D, 13.0D, 0.0D, 12.0D, 15.0D), Block.box(-15.0D, 12.0D, 0.0D, 0.0D, 14.0D, 15.0D), Block.box(-15.0D, 2.0D, 0.0D, -13.0D, 12.0D, 13.0D), Block.box(-3.0D, 15.0D, 4.0D, 0.0D, 16.0D, 5.0D), Block.box(-12.0D, 14.0D, 8.0D, -4.0D, 15.0D, 12.0D), Block.box(-11.0D, 15.0D, 9.0D, -5.0D, 16.0D, 11.0D), Block.box(-4.0D, 14.0D, 2.0D, 0.0D, 16.0D, 4.0D), Block.box(-4.0D, 14.0D, 0.0D, -2.0D, 16.0D, 2.0D), Block.box(0.0D, 15.0D, 4.0D, 3.0D, 16.0D, 5.0D), Block.box(0.0D, 0.0D, 0.0D, 15.0D, 2.0D, 15.0D), Block.box(6.0D, 2.0D, 13.0D, 15.0D, 7.0D, 15.0D), Block.box(0.0D, 7.0D, 13.0D, 15.0D, 12.0D, 15.0D), Block.box(0.0D, 12.0D, 0.0D, 7.0D, 14.0D, 15.0D), Block.box(0.0D, 9.0D, 0.0D, 7.0D, 12.0D, 13.0D), Block.box(13.0D, 2.0D, 0.0D, 15.0D, 12.0D, 13.0D), Block.box(0.0D, 14.0D, 2.0D, 4.0D, 16.0D, 4.0D), Block.box(2.0D, 14.0D, 0.0D, 4.0D, 16.0D, 2.0D), Block.box(11.0D, 12.0D, 0.0D, 15.0D, 14.0D, 15.0D), Block.box(7.0D, 12.0D, 9.0D, 11.0D, 14.0D, 15.0D), Block.box(7.0D, 9.0D, 9.0D, 13.0D, 12.0D, 13.0D), Block.box(11.0D, 9.0D, 1.0D, 13.0D, 12.0D, 9.0D), Block.box(7.0D, 12.0D, 0.0D, 11.0D, 14.0D, 1.0D), Block.box(7.0D, 9.0D, 0.0D, 13.0D, 12.0D, 1.0D), Block.box(7.0D, 9.0D, 1.0D, 11.0D, 10.0D, 9.0D), Block.box(-4.0D, 16.0D, -4.0D, 0.0D, 31.0D, -2.0D), Block.box(-4.0D, 16.0D, -2.0D, -2.0D, 31.0D, 0.0D), Block.box(-5.0D, 31.0D, -5.0D, 0.0D, 32.0D, -3.0D), Block.box(-5.0D, 31.0D, -3.0D, -3.0D, 32.0D, 0.0D), Block.box(-14.0D, 16.0D, -14.0D, -4.0D, 22.0D, 0.0D), Block.box(-4.0D, 16.0D, -14.0D, 0.0D, 22.0D, -4.0D), Block.box(-4.0D, 22.0D, -13.0D, 0.0D, 30.0D, -4.0D), Block.box(-13.0D, 22.0D, -13.0D, -4.0D, 30.0D, 0.0D), Block.box(-11.0D, 30.0D, -11.0D, -5.0D, 32.0D, -5.0D), Block.box(0.0D, 16.0D, -14.0D, 4.0D, 22.0D, -4.0D), Block.box(0.0D, 22.0D, -13.0D, 4.0D, 30.0D, -4.0D), Block.box(4.0D, 26.0D, -2.0D, 12.0D, 27.0D, -1.0D), Block.box(0.0D, 16.0D, -4.0D, 4.0D, 31.0D, -2.0D), Block.box(2.0D, 16.0D, -2.0D, 4.0D, 31.0D, 0.0D), Block.box(0.0D, 31.0D, -5.0D, 5.0D, 32.0D, -3.0D), Block.box(3.0D, 31.0D, -3.0D, 5.0D, 32.0D, 0.0D), Block.box(4.0D, 16.0D, -14.0D, 14.0D, 22.0D, -2.0D), Block.box(4.0D, 22.0D, -13.0D, 13.0D, 30.0D, -3.0D), Block.box(5.0D, 30.0D, -11.0D, 11.0D, 32.0D, -5.0D), Block.box(12.0D, 26.0D, -3.0D, 13.0D, 27.0D, 0.0D), Block.box(-3.0D, 16.0D, 4.0D, 0.0D, 21.0D, 5.0D), Block.box(-13.0D, 16.0D, 7.0D, -3.0D, 19.0D, 13.0D), Block.box(-4.0D, 16.0D, 2.0D, 0.0D, 31.0D, 4.0D), Block.box(-4.0D, 16.0D, 0.0D, -2.0D, 31.0D, 2.0D), Block.box(-13.0D, 26.0D, 0.0D, -4.0D, 30.0D, 13.0D), Block.box(-4.0D, 26.0D, 4.0D, -3.0D, 30.0D, 13.0D), Block.box(-5.0D, 31.0D, 3.0D, 0.0D, 32.0D, 5.0D), Block.box(-5.0D, 31.0D, 0.0D, -3.0D, 32.0D, 3.0D), Block.box(-11.0D, 30.0D, 5.0D, -5.0D, 32.0D, 11.0D), Block.box(-3.0D, 26.0D, 4.0D, 0.0D, 27.0D, 5.0D), Block.box(0.0D, 16.0D, 4.0D, 3.0D, 21.0D, 5.0D), Block.box(2.0D, 16.0D, 0.0D, 4.0D, 31.0D, 2.0D), Block.box(3.0D, 31.0D, 0.0D, 5.0D, 32.0D, 3.0D), Block.box(0.0D, 16.0D, 2.0D, 4.0D, 31.0D, 4.0D), Block.box(0.0D, 31.0D, 3.0D, 5.0D, 32.0D, 5.0D), Block.box(4.0D, 26.0D, 4.0D, 12.0D, 27.0D, 5.0D), Block.box(4.0D, 26.0D, 2.0D, 12.0D, 27.0D, 3.0D), Block.box(4.0D, 26.0D, 0.0D, 12.0D, 27.0D, 1.0D), Block.box(0.0D, 26.0D, 4.0D, 4.0D, 27.0D, 5.0D), Block.box(12.0D, 26.0D, 0.0D, 13.0D, 27.0D, 5.0D), Block.box(5.0D, 27.0D, 1.0D, 8.0D, 30.0D, 6.0D), Block.box(6.0D, 21.0D, 3.0D, 7.0D, 27.0D, 4.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_FRONT_RIGHT_WEST = Stream.of(Block.box(16.0D, 14.0D, -4.0D, 18.0D, 16.0D, -2.0D), Block.box(20.0D, 14.0D, -4.0D, 30.0D, 16.0D, 0.0D), Block.box(18.0D, 14.0D, -4.0D, 20.0D, 16.0D, 0.0D), Block.box(16.0D, 0.0D, -15.0D, 31.0D, 2.0D, 0.0D), Block.box(16.0D, 12.0D, -15.0D, 31.0D, 14.0D, 0.0D), Block.box(16.0D, 2.0D, -15.0D, 31.0D, 12.0D, 0.0D), Block.box(16.0D, 14.0D, -14.0D, 30.0D, 16.0D, -4.0D), Block.box(20.0D, 14.0D, 0.0D, 30.0D, 16.0D, 4.0D), Block.box(16.0D, 14.0D, 2.0D, 18.0D, 16.0D, 4.0D), Block.box(18.0D, 14.0D, 0.0D, 20.0D, 16.0D, 4.0D), Block.box(18.0D, 14.0D, 4.0D, 30.0D, 16.0D, 14.0D), Block.box(16.0D, 0.0D, 0.0D, 31.0D, 2.0D, 15.0D), Block.box(16.0D, 12.0D, 0.0D, 31.0D, 14.0D, 15.0D), Block.box(16.0D, 2.0D, 0.0D, 31.0D, 12.0D, 15.0D), Block.box(3.0D, 9.0D, -13.0D, 16.0D, 12.0D, 0.0D), Block.box(1.0D, 0.0D, -15.0D, 16.0D, 2.0D, 0.0D), Block.box(1.0D, 2.0D, -15.0D, 3.0D, 7.0D, -6.0D), Block.box(1.0D, 7.0D, -15.0D, 3.0D, 12.0D, 0.0D), Block.box(1.0D, 12.0D, -15.0D, 16.0D, 14.0D, 0.0D), Block.box(3.0D, 2.0D, -15.0D, 16.0D, 12.0D, -13.0D), Block.box(11.0D, 15.0D, -3.0D, 12.0D, 16.0D, 0.0D), Block.box(4.0D, 14.0D, -12.0D, 8.0D, 15.0D, -4.0D), Block.box(5.0D, 15.0D, -11.0D, 7.0D, 16.0D, -5.0D), Block.box(12.0D, 14.0D, -4.0D, 14.0D, 16.0D, 0.0D), Block.box(14.0D, 14.0D, -4.0D, 16.0D, 16.0D, -2.0D), Block.box(11.0D, 15.0D, 0.0D, 12.0D, 16.0D, 3.0D), Block.box(1.0D, 0.0D, 0.0D, 16.0D, 2.0D, 15.0D), Block.box(1.0D, 2.0D, 6.0D, 3.0D, 7.0D, 15.0D), Block.box(1.0D, 7.0D, 0.0D, 3.0D, 12.0D, 15.0D), Block.box(1.0D, 12.0D, 0.0D, 16.0D, 14.0D, 7.0D), Block.box(3.0D, 9.0D, 0.0D, 16.0D, 12.0D, 7.0D), Block.box(3.0D, 2.0D, 13.0D, 16.0D, 12.0D, 15.0D), Block.box(12.0D, 14.0D, 0.0D, 14.0D, 16.0D, 4.0D), Block.box(14.0D, 14.0D, 2.0D, 16.0D, 16.0D, 4.0D), Block.box(1.0D, 12.0D, 11.0D, 16.0D, 14.0D, 15.0D), Block.box(1.0D, 12.0D, 7.0D, 7.0D, 14.0D, 11.0D), Block.box(3.0D, 9.0D, 7.0D, 7.0D, 12.0D, 13.0D), Block.box(7.0D, 9.0D, 11.0D, 15.0D, 12.0D, 13.0D), Block.box(15.0D, 12.0D, 7.0D, 16.0D, 14.0D, 11.0D), Block.box(15.0D, 9.0D, 7.0D, 16.0D, 12.0D, 13.0D), Block.box(7.0D, 9.0D, 7.0D, 15.0D, 10.0D, 11.0D), Block.box(18.0D, 16.0D, -4.0D, 20.0D, 31.0D, 0.0D), Block.box(16.0D, 16.0D, -4.0D, 18.0D, 31.0D, -2.0D), Block.box(19.0D, 31.0D, -5.0D, 21.0D, 32.0D, 0.0D), Block.box(16.0D, 31.0D, -5.0D, 19.0D, 32.0D, -3.0D), Block.box(16.0D, 16.0D, -14.0D, 30.0D, 22.0D, -4.0D), Block.box(20.0D, 16.0D, -4.0D, 30.0D, 22.0D, 0.0D), Block.box(20.0D, 22.0D, -4.0D, 29.0D, 30.0D, 0.0D), Block.box(16.0D, 22.0D, -13.0D, 29.0D, 30.0D, -4.0D), Block.box(21.0D, 30.0D, -11.0D, 27.0D, 32.0D, -5.0D), Block.box(20.0D, 16.0D, 0.0D, 30.0D, 22.0D, 4.0D), Block.box(20.0D, 22.0D, 0.0D, 29.0D, 30.0D, 4.0D), Block.box(17.0D, 26.0D, 4.0D, 18.0D, 27.0D, 12.0D), Block.box(18.0D, 16.0D, 0.0D, 20.0D, 31.0D, 4.0D), Block.box(16.0D, 16.0D, 2.0D, 18.0D, 31.0D, 4.0D), Block.box(19.0D, 31.0D, 0.0D, 21.0D, 32.0D, 5.0D), Block.box(16.0D, 31.0D, 3.0D, 19.0D, 32.0D, 5.0D), Block.box(18.0D, 16.0D, 4.0D, 30.0D, 22.0D, 14.0D), Block.box(19.0D, 22.0D, 4.0D, 29.0D, 30.0D, 13.0D), Block.box(21.0D, 30.0D, 5.0D, 27.0D, 32.0D, 11.0D), Block.box(16.0D, 26.0D, 12.0D, 19.0D, 27.0D, 13.0D), Block.box(11.0D, 16.0D, -3.0D, 12.0D, 21.0D, 0.0D), Block.box(3.0D, 16.0D, -13.0D, 9.0D, 19.0D, -3.0D), Block.box(12.0D, 16.0D, -4.0D, 14.0D, 31.0D, 0.0D), Block.box(14.0D, 16.0D, -4.0D, 16.0D, 31.0D, -2.0D), Block.box(3.0D, 26.0D, -13.0D, 16.0D, 30.0D, -4.0D), Block.box(3.0D, 26.0D, -4.0D, 12.0D, 30.0D, -3.0D), Block.box(11.0D, 31.0D, -5.0D, 13.0D, 32.0D, 0.0D), Block.box(13.0D, 31.0D, -5.0D, 16.0D, 32.0D, -3.0D), Block.box(5.0D, 30.0D, -11.0D, 11.0D, 32.0D, -5.0D), Block.box(11.0D, 26.0D, -3.0D, 12.0D, 27.0D, 0.0D), Block.box(11.0D, 16.0D, 0.0D, 12.0D, 21.0D, 3.0D), Block.box(14.0D, 16.0D, 2.0D, 16.0D, 31.0D, 4.0D), Block.box(13.0D, 31.0D, 3.0D, 16.0D, 32.0D, 5.0D), Block.box(12.0D, 16.0D, 0.0D, 14.0D, 31.0D, 4.0D), Block.box(11.0D, 31.0D, 0.0D, 13.0D, 32.0D, 5.0D), Block.box(11.0D, 26.0D, 4.0D, 12.0D, 27.0D, 12.0D), Block.box(13.0D, 26.0D, 4.0D, 14.0D, 27.0D, 12.0D), Block.box(15.0D, 26.0D, 4.0D, 16.0D, 27.0D, 12.0D), Block.box(11.0D, 26.0D, 0.0D, 12.0D, 27.0D, 4.0D), Block.box(11.0D, 26.0D, 12.0D, 16.0D, 27.0D, 13.0D), Block.box(10.0D, 27.0D, 5.0D, 15.0D, 30.0D, 8.0D), Block.box(12.0D, 21.0D, 6.0D, 13.0D, 27.0D, 7.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape TOP_BACK_LEFT_NORTH = Stream.of(Block.box(2.0D, -2.0D, 0.0D, 4.0D, 0.0D, 2.0D), Block.box(0.0D, -2.0D, 4.0D, 4.0D, 0.0D, 14.0D), Block.box(0.0D, -2.0D, 2.0D, 4.0D, 0.0D, 4.0D), Block.box(0.0D, -16.0D, 0.0D, 15.0D, -14.0D, 15.0D), Block.box(0.0D, -4.0D, 0.0D, 15.0D, -2.0D, 15.0D), Block.box(0.0D, -14.0D, 0.0D, 15.0D, -4.0D, 15.0D), Block.box(4.0D, -2.0D, 0.0D, 14.0D, 0.0D, 14.0D), Block.box(-4.0D, -2.0D, 4.0D, 0.0D, 0.0D, 14.0D), Block.box(-4.0D, -2.0D, 0.0D, -2.0D, 0.0D, 2.0D), Block.box(-4.0D, -2.0D, 2.0D, 0.0D, 0.0D, 4.0D), Block.box(-14.0D, -2.0D, 2.0D, -4.0D, 0.0D, 14.0D), Block.box(-15.0D, -16.0D, 0.0D, 0.0D, -14.0D, 15.0D), Block.box(-15.0D, -4.0D, 0.0D, 0.0D, -2.0D, 15.0D), Block.box(-15.0D, -14.0D, 0.0D, 0.0D, -4.0D, 15.0D), Block.box(0.0D, -7.0D, -13.0D, 13.0D, -4.0D, 0.0D), Block.box(0.0D, -16.0D, -15.0D, 15.0D, -14.0D, 0.0D), Block.box(6.0D, -14.0D, -15.0D, 15.0D, -9.0D, -13.0D), Block.box(0.0D, -9.0D, -15.0D, 15.0D, -4.0D, -13.0D), Block.box(0.0D, -4.0D, -15.0D, 15.0D, -2.0D, 0.0D), Block.box(13.0D, -14.0D, -13.0D, 15.0D, -4.0D, 0.0D), Block.box(0.0D, -1.0D, -5.0D, 3.0D, 0.0D, -4.0D), Block.box(4.0D, -2.0D, -12.0D, 12.0D, -1.0D, -8.0D), Block.box(5.0D, -1.0D, -11.0D, 11.0D, 0.0D, -9.0D), Block.box(0.0D, -2.0D, -4.0D, 4.0D, 0.0D, -2.0D), Block.box(2.0D, -2.0D, -2.0D, 4.0D, 0.0D, 0.0D), Block.box(-3.0D, -1.0D, -5.0D, 0.0D, 0.0D, -4.0D), Block.box(-15.0D, -16.0D, -15.0D, 0.0D, -14.0D, 0.0D), Block.box(-15.0D, -14.0D, -15.0D, -6.0D, -9.0D, -13.0D), Block.box(-15.0D, -9.0D, -15.0D, 0.0D, -4.0D, -13.0D), Block.box(-7.0D, -4.0D, -15.0D, 0.0D, -2.0D, 0.0D), Block.box(-7.0D, -7.0D, -13.0D, 0.0D, -4.0D, 0.0D), Block.box(-15.0D, -14.0D, -13.0D, -13.0D, -4.0D, 0.0D), Block.box(-4.0D, -2.0D, -4.0D, 0.0D, 0.0D, -2.0D), Block.box(-4.0D, -2.0D, -2.0D, -2.0D, 0.0D, 0.0D), Block.box(-15.0D, -4.0D, -15.0D, -11.0D, -2.0D, 0.0D), Block.box(-11.0D, -4.0D, -15.0D, -7.0D, -2.0D, -9.0D), Block.box(-13.0D, -7.0D, -13.0D, -7.0D, -4.0D, -9.0D), Block.box(-13.0D, -7.0D, -9.0D, -11.0D, -4.0D, -1.0D), Block.box(-11.0D, -4.0D, -1.0D, -7.0D, -2.0D, 0.0D), Block.box(-13.0D, -7.0D, -1.0D, -7.0D, -4.0D, 0.0D), Block.box(-11.0D, -7.0D, -9.0D, -7.0D, -6.0D, -1.0D), Block.box(0.0D, 0.0D, 2.0D, 4.0D, 15.0D, 4.0D), Block.box(2.0D, 0.0D, 0.0D, 4.0D, 15.0D, 2.0D), Block.box(0.0D, 15.0D, 3.0D, 5.0D, 16.0D, 5.0D), Block.box(3.0D, 15.0D, 0.0D, 5.0D, 16.0D, 3.0D), Block.box(4.0D, 0.0D, 0.0D, 14.0D, 6.0D, 14.0D), Block.box(0.0D, 0.0D, 4.0D, 4.0D, 6.0D, 14.0D), Block.box(0.0D, 6.0D, 4.0D, 4.0D, 14.0D, 13.0D), Block.box(4.0D, 6.0D, 0.0D, 13.0D, 14.0D, 13.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(-4.0D, 0.0D, 4.0D, 0.0D, 6.0D, 14.0D), Block.box(-4.0D, 6.0D, 4.0D, 0.0D, 14.0D, 13.0D), Block.box(-12.0D, 10.0D, 1.0D, -4.0D, 11.0D, 2.0D), Block.box(-4.0D, 0.0D, 2.0D, 0.0D, 15.0D, 4.0D), Block.box(-4.0D, 0.0D, 0.0D, -2.0D, 15.0D, 2.0D), Block.box(-5.0D, 15.0D, 3.0D, 0.0D, 16.0D, 5.0D), Block.box(-5.0D, 15.0D, 0.0D, -3.0D, 16.0D, 3.0D), Block.box(-14.0D, 0.0D, 2.0D, -4.0D, 6.0D, 14.0D), Block.box(-13.0D, 6.0D, 3.0D, -4.0D, 14.0D, 13.0D), Block.box(-11.0D, 14.0D, 5.0D, -5.0D, 16.0D, 11.0D), Block.box(-13.0D, 10.0D, 0.0D, -12.0D, 11.0D, 3.0D), Block.box(0.0D, 0.0D, -5.0D, 3.0D, 5.0D, -4.0D), Block.box(3.0D, 0.0D, -13.0D, 13.0D, 3.0D, -7.0D), Block.box(0.0D, 0.0D, -4.0D, 4.0D, 15.0D, -2.0D), Block.box(2.0D, 0.0D, -2.0D, 4.0D, 15.0D, 0.0D), Block.box(4.0D, 10.0D, -13.0D, 13.0D, 14.0D, 0.0D), Block.box(3.0D, 10.0D, -13.0D, 4.0D, 14.0D, -4.0D), Block.box(0.0D, 15.0D, -5.0D, 5.0D, 16.0D, -3.0D), Block.box(3.0D, 15.0D, -3.0D, 5.0D, 16.0D, 0.0D), Block.box(5.0D, 14.0D, -11.0D, 11.0D, 16.0D, -5.0D), Block.box(0.0D, 10.0D, -5.0D, 3.0D, 11.0D, -4.0D), Block.box(-3.0D, 0.0D, -5.0D, 0.0D, 5.0D, -4.0D), Block.box(-4.0D, 0.0D, -2.0D, -2.0D, 15.0D, 0.0D), Block.box(-5.0D, 15.0D, -3.0D, -3.0D, 16.0D, 0.0D), Block.box(-4.0D, 0.0D, -4.0D, 0.0D, 15.0D, -2.0D), Block.box(-5.0D, 15.0D, -5.0D, 0.0D, 16.0D, -3.0D), Block.box(-12.0D, 10.0D, -5.0D, -4.0D, 11.0D, -4.0D), Block.box(-12.0D, 10.0D, -3.0D, -4.0D, 11.0D, -2.0D), Block.box(-12.0D, 10.0D, -1.0D, -4.0D, 11.0D, 0.0D), Block.box(-4.0D, 10.0D, -5.0D, 0.0D, 11.0D, -4.0D), Block.box(-13.0D, 10.0D, -5.0D, -12.0D, 11.0D, 0.0D), Block.box(-8.0D, 11.0D, -6.0D, -5.0D, 14.0D, -1.0D), Block.box(-7.0D, 5.0D, -4.0D, -6.0D, 11.0D, -3.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_BACK_LEFT_EAST = Stream.of(Block.box(14.0D, -2.0D, 2.0D, 16.0D, 0.0D, 4.0D), Block.box(2.0D, -2.0D, 0.0D, 12.0D, 0.0D, 4.0D), Block.box(12.0D, -2.0D, 0.0D, 14.0D, 0.0D, 4.0D), Block.box(1.0D, -16.0D, 0.0D, 16.0D, -14.0D, 15.0D), Block.box(1.0D, -4.0D, 0.0D, 16.0D, -2.0D, 15.0D), Block.box(1.0D, -14.0D, 0.0D, 16.0D, -4.0D, 15.0D), Block.box(2.0D, -2.0D, 4.0D, 16.0D, 0.0D, 14.0D), Block.box(2.0D, -2.0D, -4.0D, 12.0D, 0.0D, 0.0D), Block.box(14.0D, -2.0D, -4.0D, 16.0D, 0.0D, -2.0D), Block.box(12.0D, -2.0D, -4.0D, 14.0D, 0.0D, 0.0D), Block.box(2.0D, -2.0D, -14.0D, 14.0D, 0.0D, -4.0D), Block.box(1.0D, -16.0D, -15.0D, 16.0D, -14.0D, 0.0D), Block.box(1.0D, -4.0D, -15.0D, 16.0D, -2.0D, 0.0D), Block.box(1.0D, -14.0D, -15.0D, 16.0D, -4.0D, 0.0D), Block.box(16.0D, -7.0D, 0.0D, 29.0D, -4.0D, 13.0D), Block.box(16.0D, -16.0D, 0.0D, 31.0D, -14.0D, 15.0D), Block.box(29.0D, -14.0D, 6.0D, 31.0D, -9.0D, 15.0D), Block.box(29.0D, -9.0D, 0.0D, 31.0D, -4.0D, 15.0D), Block.box(16.0D, -4.0D, 0.0D, 31.0D, -2.0D, 15.0D), Block.box(16.0D, -14.0D, 13.0D, 29.0D, -4.0D, 15.0D), Block.box(20.0D, -1.0D, 0.0D, 21.0D, 0.0D, 3.0D), Block.box(24.0D, -2.0D, 4.0D, 28.0D, -1.0D, 12.0D), Block.box(25.0D, -1.0D, 5.0D, 27.0D, 0.0D, 11.0D), Block.box(18.0D, -2.0D, 0.0D, 20.0D, 0.0D, 4.0D), Block.box(16.0D, -2.0D, 2.0D, 18.0D, 0.0D, 4.0D), Block.box(20.0D, -1.0D, -3.0D, 21.0D, 0.0D, 0.0D), Block.box(16.0D, -16.0D, -15.0D, 31.0D, -14.0D, 0.0D), Block.box(29.0D, -14.0D, -15.0D, 31.0D, -9.0D, -6.0D), Block.box(29.0D, -9.0D, -15.0D, 31.0D, -4.0D, 0.0D), Block.box(16.0D, -4.0D, -7.0D, 31.0D, -2.0D, 0.0D), Block.box(16.0D, -7.0D, -7.0D, 29.0D, -4.0D, 0.0D), Block.box(16.0D, -14.0D, -15.0D, 29.0D, -4.0D, -13.0D), Block.box(18.0D, -2.0D, -4.0D, 20.0D, 0.0D, 0.0D), Block.box(16.0D, -2.0D, -4.0D, 18.0D, 0.0D, -2.0D), Block.box(16.0D, -4.0D, -15.0D, 31.0D, -2.0D, -11.0D), Block.box(25.0D, -4.0D, -11.0D, 31.0D, -2.0D, -7.0D), Block.box(25.0D, -7.0D, -13.0D, 29.0D, -4.0D, -7.0D), Block.box(17.0D, -7.0D, -13.0D, 25.0D, -4.0D, -11.0D), Block.box(16.0D, -4.0D, -11.0D, 17.0D, -2.0D, -7.0D), Block.box(16.0D, -7.0D, -13.0D, 17.0D, -4.0D, -7.0D), Block.box(17.0D, -7.0D, -11.0D, 25.0D, -6.0D, -7.0D), Block.box(12.0D, 0.0D, 0.0D, 14.0D, 15.0D, 4.0D), Block.box(14.0D, 0.0D, 2.0D, 16.0D, 15.0D, 4.0D), Block.box(11.0D, 15.0D, 0.0D, 13.0D, 16.0D, 5.0D), Block.box(13.0D, 15.0D, 3.0D, 16.0D, 16.0D, 5.0D), Block.box(2.0D, 0.0D, 4.0D, 16.0D, 6.0D, 14.0D), Block.box(2.0D, 0.0D, 0.0D, 12.0D, 6.0D, 4.0D), Block.box(3.0D, 6.0D, 0.0D, 12.0D, 14.0D, 4.0D), Block.box(3.0D, 6.0D, 4.0D, 16.0D, 14.0D, 13.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(2.0D, 0.0D, -4.0D, 12.0D, 6.0D, 0.0D), Block.box(3.0D, 6.0D, -4.0D, 12.0D, 14.0D, 0.0D), Block.box(14.0D, 10.0D, -12.0D, 15.0D, 11.0D, -4.0D), Block.box(12.0D, 0.0D, -4.0D, 14.0D, 15.0D, 0.0D), Block.box(14.0D, 0.0D, -4.0D, 16.0D, 15.0D, -2.0D), Block.box(11.0D, 15.0D, -5.0D, 13.0D, 16.0D, 0.0D), Block.box(13.0D, 15.0D, -5.0D, 16.0D, 16.0D, -3.0D), Block.box(2.0D, 0.0D, -14.0D, 14.0D, 6.0D, -4.0D), Block.box(3.0D, 6.0D, -13.0D, 13.0D, 14.0D, -4.0D), Block.box(5.0D, 14.0D, -11.0D, 11.0D, 16.0D, -5.0D), Block.box(13.0D, 10.0D, -13.0D, 16.0D, 11.0D, -12.0D), Block.box(20.0D, 0.0D, 0.0D, 21.0D, 5.0D, 3.0D), Block.box(23.0D, 0.0D, 3.0D, 29.0D, 3.0D, 13.0D), Block.box(18.0D, 0.0D, 0.0D, 20.0D, 15.0D, 4.0D), Block.box(16.0D, 0.0D, 2.0D, 18.0D, 15.0D, 4.0D), Block.box(16.0D, 10.0D, 4.0D, 29.0D, 14.0D, 13.0D), Block.box(20.0D, 10.0D, 3.0D, 29.0D, 14.0D, 4.0D), Block.box(19.0D, 15.0D, 0.0D, 21.0D, 16.0D, 5.0D), Block.box(16.0D, 15.0D, 3.0D, 19.0D, 16.0D, 5.0D), Block.box(21.0D, 14.0D, 5.0D, 27.0D, 16.0D, 11.0D), Block.box(20.0D, 10.0D, 0.0D, 21.0D, 11.0D, 3.0D), Block.box(20.0D, 0.0D, -3.0D, 21.0D, 5.0D, 0.0D), Block.box(16.0D, 0.0D, -4.0D, 18.0D, 15.0D, -2.0D), Block.box(16.0D, 15.0D, -5.0D, 19.0D, 16.0D, -3.0D), Block.box(18.0D, 0.0D, -4.0D, 20.0D, 15.0D, 0.0D), Block.box(19.0D, 15.0D, -5.0D, 21.0D, 16.0D, 0.0D), Block.box(20.0D, 10.0D, -12.0D, 21.0D, 11.0D, -4.0D), Block.box(18.0D, 10.0D, -12.0D, 19.0D, 11.0D, -4.0D), Block.box(16.0D, 10.0D, -12.0D, 17.0D, 11.0D, -4.0D), Block.box(20.0D, 10.0D, -4.0D, 21.0D, 11.0D, 0.0D), Block.box(16.0D, 10.0D, -13.0D, 21.0D, 11.0D, -12.0D), Block.box(17.0D, 11.0D, -8.0D, 22.0D, 14.0D, -5.0D), Block.box(19.0D, 5.0D, -7.0D, 20.0D, 11.0D, -6.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_BACK_LEFT_SOUTH = Stream.of(Block.box(12.0D, -2.0D, 14.0D, 14.0D, 0.0D, 16.0D), Block.box(12.0D, -2.0D, 2.0D, 16.0D, 0.0D, 12.0D), Block.box(12.0D, -2.0D, 12.0D, 16.0D, 0.0D, 14.0D), Block.box(1.0D, -16.0D, 1.0D, 16.0D, -14.0D, 16.0D), Block.box(1.0D, -4.0D, 1.0D, 16.0D, -2.0D, 16.0D), Block.box(1.0D, -14.0D, 1.0D, 16.0D, -4.0D, 16.0D), Block.box(2.0D, -2.0D, 2.0D, 12.0D, 0.0D, 16.0D), Block.box(16.0D, -2.0D, 2.0D, 20.0D, 0.0D, 12.0D), Block.box(18.0D, -2.0D, 14.0D, 20.0D, 0.0D, 16.0D), Block.box(16.0D, -2.0D, 12.0D, 20.0D, 0.0D, 14.0D), Block.box(20.0D, -2.0D, 2.0D, 30.0D, 0.0D, 14.0D), Block.box(16.0D, -16.0D, 1.0D, 31.0D, -14.0D, 16.0D), Block.box(16.0D, -4.0D, 1.0D, 31.0D, -2.0D, 16.0D), Block.box(16.0D, -14.0D, 1.0D, 31.0D, -4.0D, 16.0D), Block.box(3.0D, -7.0D, 16.0D, 16.0D, -4.0D, 29.0D), Block.box(1.0D, -16.0D, 16.0D, 16.0D, -14.0D, 31.0D), Block.box(1.0D, -14.0D, 29.0D, 10.0D, -9.0D, 31.0D), Block.box(1.0D, -9.0D, 29.0D, 16.0D, -4.0D, 31.0D), Block.box(1.0D, -4.0D, 16.0D, 16.0D, -2.0D, 31.0D), Block.box(1.0D, -14.0D, 16.0D, 3.0D, -4.0D, 29.0D), Block.box(13.0D, -1.0D, 20.0D, 16.0D, 0.0D, 21.0D), Block.box(4.0D, -2.0D, 24.0D, 12.0D, -1.0D, 28.0D), Block.box(5.0D, -1.0D, 25.0D, 11.0D, 0.0D, 27.0D), Block.box(12.0D, -2.0D, 18.0D, 16.0D, 0.0D, 20.0D), Block.box(12.0D, -2.0D, 16.0D, 14.0D, 0.0D, 18.0D), Block.box(16.0D, -1.0D, 20.0D, 19.0D, 0.0D, 21.0D), Block.box(16.0D, -16.0D, 16.0D, 31.0D, -14.0D, 31.0D), Block.box(22.0D, -14.0D, 29.0D, 31.0D, -9.0D, 31.0D), Block.box(16.0D, -9.0D, 29.0D, 31.0D, -4.0D, 31.0D), Block.box(16.0D, -4.0D, 16.0D, 23.0D, -2.0D, 31.0D), Block.box(16.0D, -7.0D, 16.0D, 23.0D, -4.0D, 29.0D), Block.box(29.0D, -14.0D, 16.0D, 31.0D, -4.0D, 29.0D), Block.box(16.0D, -2.0D, 18.0D, 20.0D, 0.0D, 20.0D), Block.box(18.0D, -2.0D, 16.0D, 20.0D, 0.0D, 18.0D), Block.box(27.0D, -4.0D, 16.0D, 31.0D, -2.0D, 31.0D), Block.box(23.0D, -4.0D, 25.0D, 27.0D, -2.0D, 31.0D), Block.box(23.0D, -7.0D, 25.0D, 29.0D, -4.0D, 29.0D), Block.box(27.0D, -7.0D, 17.0D, 29.0D, -4.0D, 25.0D), Block.box(23.0D, -4.0D, 16.0D, 27.0D, -2.0D, 17.0D), Block.box(23.0D, -7.0D, 16.0D, 29.0D, -4.0D, 17.0D), Block.box(23.0D, -7.0D, 17.0D, 27.0D, -6.0D, 25.0D), Block.box(12.0D, 0.0D, 12.0D, 16.0D, 15.0D, 14.0D), Block.box(12.0D, 0.0D, 14.0D, 14.0D, 15.0D, 16.0D), Block.box(11.0D, 15.0D, 11.0D, 16.0D, 16.0D, 13.0D), Block.box(11.0D, 15.0D, 13.0D, 13.0D, 16.0D, 16.0D), Block.box(2.0D, 0.0D, 2.0D, 12.0D, 6.0D, 16.0D), Block.box(12.0D, 0.0D, 2.0D, 16.0D, 6.0D, 12.0D), Block.box(12.0D, 6.0D, 3.0D, 16.0D, 14.0D, 12.0D), Block.box(3.0D, 6.0D, 3.0D, 12.0D, 14.0D, 16.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(16.0D, 0.0D, 2.0D, 20.0D, 6.0D, 12.0D), Block.box(16.0D, 6.0D, 3.0D, 20.0D, 14.0D, 12.0D), Block.box(20.0D, 10.0D, 14.0D, 28.0D, 11.0D, 15.0D), Block.box(16.0D, 0.0D, 12.0D, 20.0D, 15.0D, 14.0D), Block.box(18.0D, 0.0D, 14.0D, 20.0D, 15.0D, 16.0D), Block.box(16.0D, 15.0D, 11.0D, 21.0D, 16.0D, 13.0D), Block.box(19.0D, 15.0D, 13.0D, 21.0D, 16.0D, 16.0D), Block.box(20.0D, 0.0D, 2.0D, 30.0D, 6.0D, 14.0D), Block.box(20.0D, 6.0D, 3.0D, 29.0D, 14.0D, 13.0D), Block.box(21.0D, 14.0D, 5.0D, 27.0D, 16.0D, 11.0D), Block.box(28.0D, 10.0D, 13.0D, 29.0D, 11.0D, 16.0D), Block.box(13.0D, 0.0D, 20.0D, 16.0D, 5.0D, 21.0D), Block.box(3.0D, 0.0D, 23.0D, 13.0D, 3.0D, 29.0D), Block.box(12.0D, 0.0D, 18.0D, 16.0D, 15.0D, 20.0D), Block.box(12.0D, 0.0D, 16.0D, 14.0D, 15.0D, 18.0D), Block.box(3.0D, 10.0D, 16.0D, 12.0D, 14.0D, 29.0D), Block.box(12.0D, 10.0D, 20.0D, 13.0D, 14.0D, 29.0D), Block.box(11.0D, 15.0D, 19.0D, 16.0D, 16.0D, 21.0D), Block.box(11.0D, 15.0D, 16.0D, 13.0D, 16.0D, 19.0D), Block.box(5.0D, 14.0D, 21.0D, 11.0D, 16.0D, 27.0D), Block.box(13.0D, 10.0D, 20.0D, 16.0D, 11.0D, 21.0D), Block.box(16.0D, 0.0D, 20.0D, 19.0D, 5.0D, 21.0D), Block.box(18.0D, 0.0D, 16.0D, 20.0D, 15.0D, 18.0D), Block.box(19.0D, 15.0D, 16.0D, 21.0D, 16.0D, 19.0D), Block.box(16.0D, 0.0D, 18.0D, 20.0D, 15.0D, 20.0D), Block.box(16.0D, 15.0D, 19.0D, 21.0D, 16.0D, 21.0D), Block.box(20.0D, 10.0D, 20.0D, 28.0D, 11.0D, 21.0D), Block.box(20.0D, 10.0D, 18.0D, 28.0D, 11.0D, 19.0D), Block.box(20.0D, 10.0D, 16.0D, 28.0D, 11.0D, 17.0D), Block.box(16.0D, 10.0D, 20.0D, 20.0D, 11.0D, 21.0D), Block.box(28.0D, 10.0D, 16.0D, 29.0D, 11.0D, 21.0D), Block.box(21.0D, 11.0D, 17.0D, 24.0D, 14.0D, 22.0D), Block.box(22.0D, 5.0D, 19.0D, 23.0D, 11.0D, 20.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_BACK_LEFT_WEST = Stream.of(Block.box(0.0D, -2.0D, 12.0D, 2.0D, 0.0D, 14.0D), Block.box(4.0D, -2.0D, 12.0D, 14.0D, 0.0D, 16.0D), Block.box(2.0D, -2.0D, 12.0D, 4.0D, 0.0D, 16.0D), Block.box(0.0D, -16.0D, 1.0D, 15.0D, -14.0D, 16.0D), Block.box(0.0D, -4.0D, 1.0D, 15.0D, -2.0D, 16.0D), Block.box(0.0D, -14.0D, 1.0D, 15.0D, -4.0D, 16.0D), Block.box(0.0D, -2.0D, 2.0D, 14.0D, 0.0D, 12.0D), Block.box(4.0D, -2.0D, 16.0D, 14.0D, 0.0D, 20.0D), Block.box(0.0D, -2.0D, 18.0D, 2.0D, 0.0D, 20.0D), Block.box(2.0D, -2.0D, 16.0D, 4.0D, 0.0D, 20.0D), Block.box(2.0D, -2.0D, 20.0D, 14.0D, 0.0D, 30.0D), Block.box(0.0D, -16.0D, 16.0D, 15.0D, -14.0D, 31.0D), Block.box(0.0D, -4.0D, 16.0D, 15.0D, -2.0D, 31.0D), Block.box(0.0D, -14.0D, 16.0D, 15.0D, -4.0D, 31.0D), Block.box(-13.0D, -7.0D, 3.0D, 0.0D, -4.0D, 16.0D), Block.box(-15.0D, -16.0D, 1.0D, 0.0D, -14.0D, 16.0D), Block.box(-15.0D, -14.0D, 1.0D, -13.0D, -9.0D, 10.0D), Block.box(-15.0D, -9.0D, 1.0D, -13.0D, -4.0D, 16.0D), Block.box(-15.0D, -4.0D, 1.0D, 0.0D, -2.0D, 16.0D), Block.box(-13.0D, -14.0D, 1.0D, 0.0D, -4.0D, 3.0D), Block.box(-5.0D, -1.0D, 13.0D, -4.0D, 0.0D, 16.0D), Block.box(-12.0D, -2.0D, 4.0D, -8.0D, -1.0D, 12.0D), Block.box(-11.0D, -1.0D, 5.0D, -9.0D, 0.0D, 11.0D), Block.box(-4.0D, -2.0D, 12.0D, -2.0D, 0.0D, 16.0D), Block.box(-2.0D, -2.0D, 12.0D, 0.0D, 0.0D, 14.0D), Block.box(-5.0D, -1.0D, 16.0D, -4.0D, 0.0D, 19.0D), Block.box(-15.0D, -16.0D, 16.0D, 0.0D, -14.0D, 31.0D), Block.box(-15.0D, -14.0D, 22.0D, -13.0D, -9.0D, 31.0D), Block.box(-15.0D, -9.0D, 16.0D, -13.0D, -4.0D, 31.0D), Block.box(-15.0D, -4.0D, 16.0D, 0.0D, -2.0D, 23.0D), Block.box(-13.0D, -7.0D, 16.0D, 0.0D, -4.0D, 23.0D), Block.box(-13.0D, -14.0D, 29.0D, 0.0D, -4.0D, 31.0D), Block.box(-4.0D, -2.0D, 16.0D, -2.0D, 0.0D, 20.0D), Block.box(-2.0D, -2.0D, 18.0D, 0.0D, 0.0D, 20.0D), Block.box(-15.0D, -4.0D, 27.0D, 0.0D, -2.0D, 31.0D), Block.box(-15.0D, -4.0D, 23.0D, -9.0D, -2.0D, 27.0D), Block.box(-13.0D, -7.0D, 23.0D, -9.0D, -4.0D, 29.0D), Block.box(-9.0D, -7.0D, 27.0D, -1.0D, -4.0D, 29.0D), Block.box(-1.0D, -4.0D, 23.0D, 0.0D, -2.0D, 27.0D), Block.box(-1.0D, -7.0D, 23.0D, 0.0D, -4.0D, 29.0D), Block.box(-9.0D, -7.0D, 23.0D, -1.0D, -6.0D, 27.0D), Block.box(2.0D, 0.0D, 12.0D, 4.0D, 15.0D, 16.0D), Block.box(0.0D, 0.0D, 12.0D, 2.0D, 15.0D, 14.0D), Block.box(3.0D, 15.0D, 11.0D, 5.0D, 16.0D, 16.0D), Block.box(0.0D, 15.0D, 11.0D, 3.0D, 16.0D, 13.0D), Block.box(0.0D, 0.0D, 2.0D, 14.0D, 6.0D, 12.0D), Block.box(4.0D, 0.0D, 12.0D, 14.0D, 6.0D, 16.0D), Block.box(4.0D, 6.0D, 12.0D, 13.0D, 14.0D, 16.0D), Block.box(0.0D, 6.0D, 3.0D, 13.0D, 14.0D, 12.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(4.0D, 0.0D, 16.0D, 14.0D, 6.0D, 20.0D), Block.box(4.0D, 6.0D, 16.0D, 13.0D, 14.0D, 20.0D), Block.box(1.0D, 10.0D, 20.0D, 2.0D, 11.0D, 28.0D), Block.box(2.0D, 0.0D, 16.0D, 4.0D, 15.0D, 20.0D), Block.box(0.0D, 0.0D, 18.0D, 2.0D, 15.0D, 20.0D), Block.box(3.0D, 15.0D, 16.0D, 5.0D, 16.0D, 21.0D), Block.box(0.0D, 15.0D, 19.0D, 3.0D, 16.0D, 21.0D), Block.box(2.0D, 0.0D, 20.0D, 14.0D, 6.0D, 30.0D), Block.box(3.0D, 6.0D, 20.0D, 13.0D, 14.0D, 29.0D), Block.box(5.0D, 14.0D, 21.0D, 11.0D, 16.0D, 27.0D), Block.box(0.0D, 10.0D, 28.0D, 3.0D, 11.0D, 29.0D), Block.box(-5.0D, 0.0D, 13.0D, -4.0D, 5.0D, 16.0D), Block.box(-13.0D, 0.0D, 3.0D, -7.0D, 3.0D, 13.0D), Block.box(-4.0D, 0.0D, 12.0D, -2.0D, 15.0D, 16.0D), Block.box(-2.0D, 0.0D, 12.0D, 0.0D, 15.0D, 14.0D), Block.box(-13.0D, 10.0D, 3.0D, 0.0D, 14.0D, 12.0D), Block.box(-13.0D, 10.0D, 12.0D, -4.0D, 14.0D, 13.0D), Block.box(-5.0D, 15.0D, 11.0D, -3.0D, 16.0D, 16.0D), Block.box(-3.0D, 15.0D, 11.0D, 0.0D, 16.0D, 13.0D), Block.box(-11.0D, 14.0D, 5.0D, -5.0D, 16.0D, 11.0D), Block.box(-5.0D, 10.0D, 13.0D, -4.0D, 11.0D, 16.0D), Block.box(-5.0D, 0.0D, 16.0D, -4.0D, 5.0D, 19.0D), Block.box(-2.0D, 0.0D, 18.0D, 0.0D, 15.0D, 20.0D), Block.box(-3.0D, 15.0D, 19.0D, 0.0D, 16.0D, 21.0D), Block.box(-4.0D, 0.0D, 16.0D, -2.0D, 15.0D, 20.0D), Block.box(-5.0D, 15.0D, 16.0D, -3.0D, 16.0D, 21.0D), Block.box(-5.0D, 10.0D, 20.0D, -4.0D, 11.0D, 28.0D), Block.box(-3.0D, 10.0D, 20.0D, -2.0D, 11.0D, 28.0D), Block.box(-1.0D, 10.0D, 20.0D, 0.0D, 11.0D, 28.0D), Block.box(-5.0D, 10.0D, 16.0D, -4.0D, 11.0D, 20.0D), Block.box(-5.0D, 10.0D, 28.0D, 0.0D, 11.0D, 29.0D), Block.box(-6.0D, 11.0D, 21.0D, -1.0D, 14.0D, 24.0D), Block.box(-4.0D, 5.0D, 22.0D, -3.0D, 11.0D, 23.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape TOP_BACK_RIGHT_NORTH = Stream.of(Block.box(18.0D, -2.0D, 0.0D, 20.0D, 0.0D, 2.0D), Block.box(16.0D, -2.0D, 4.0D, 20.0D, 0.0D, 14.0D), Block.box(16.0D, -2.0D, 2.0D, 20.0D, 0.0D, 4.0D), Block.box(16.0D, -16.0D, 0.0D, 31.0D, -14.0D, 15.0D), Block.box(16.0D, -4.0D, 0.0D, 31.0D, -2.0D, 15.0D), Block.box(16.0D, -14.0D, 0.0D, 31.0D, -4.0D, 15.0D), Block.box(20.0D, -2.0D, 0.0D, 30.0D, 0.0D, 14.0D), Block.box(12.0D, -2.0D, 4.0D, 16.0D, 0.0D, 14.0D), Block.box(12.0D, -2.0D, 0.0D, 14.0D, 0.0D, 2.0D), Block.box(12.0D, -2.0D, 2.0D, 16.0D, 0.0D, 4.0D), Block.box(2.0D, -2.0D, 2.0D, 12.0D, 0.0D, 14.0D), Block.box(1.0D, -16.0D, 0.0D, 16.0D, -14.0D, 15.0D), Block.box(1.0D, -4.0D, 0.0D, 16.0D, -2.0D, 15.0D), Block.box(1.0D, -14.0D, 0.0D, 16.0D, -4.0D, 15.0D), Block.box(16.0D, -7.0D, -13.0D, 29.0D, -4.0D, 0.0D), Block.box(16.0D, -16.0D, -15.0D, 31.0D, -14.0D, 0.0D), Block.box(22.0D, -14.0D, -15.0D, 31.0D, -9.0D, -13.0D), Block.box(16.0D, -9.0D, -15.0D, 31.0D, -4.0D, -13.0D), Block.box(16.0D, -4.0D, -15.0D, 31.0D, -2.0D, 0.0D), Block.box(29.0D, -14.0D, -13.0D, 31.0D, -4.0D, 0.0D), Block.box(16.0D, -1.0D, -5.0D, 19.0D, 0.0D, -4.0D), Block.box(20.0D, -2.0D, -12.0D, 28.0D, -1.0D, -8.0D), Block.box(21.0D, -1.0D, -11.0D, 27.0D, 0.0D, -9.0D), Block.box(16.0D, -2.0D, -4.0D, 20.0D, 0.0D, -2.0D), Block.box(18.0D, -2.0D, -2.0D, 20.0D, 0.0D, 0.0D), Block.box(13.0D, -1.0D, -5.0D, 16.0D, 0.0D, -4.0D), Block.box(1.0D, -16.0D, -15.0D, 16.0D, -14.0D, 0.0D), Block.box(1.0D, -14.0D, -15.0D, 10.0D, -9.0D, -13.0D), Block.box(1.0D, -9.0D, -15.0D, 16.0D, -4.0D, -13.0D), Block.box(9.0D, -4.0D, -15.0D, 16.0D, -2.0D, 0.0D), Block.box(9.0D, -7.0D, -13.0D, 16.0D, -4.0D, 0.0D), Block.box(1.0D, -14.0D, -13.0D, 3.0D, -4.0D, 0.0D), Block.box(12.0D, -2.0D, -4.0D, 16.0D, 0.0D, -2.0D), Block.box(12.0D, -2.0D, -2.0D, 14.0D, 0.0D, 0.0D), Block.box(1.0D, -4.0D, -15.0D, 5.0D, -2.0D, 0.0D), Block.box(5.0D, -4.0D, -15.0D, 9.0D, -2.0D, -9.0D), Block.box(3.0D, -7.0D, -13.0D, 9.0D, -4.0D, -9.0D), Block.box(3.0D, -7.0D, -9.0D, 5.0D, -4.0D, -1.0D), Block.box(5.0D, -4.0D, -1.0D, 9.0D, -2.0D, 0.0D), Block.box(3.0D, -7.0D, -1.0D, 9.0D, -4.0D, 0.0D), Block.box(5.0D, -7.0D, -9.0D, 9.0D, -6.0D, -1.0D), Block.box(16.0D, 0.0D, 2.0D, 20.0D, 15.0D, 4.0D), Block.box(18.0D, 0.0D, 0.0D, 20.0D, 15.0D, 2.0D), Block.box(16.0D, 15.0D, 3.0D, 21.0D, 16.0D, 5.0D), Block.box(19.0D, 15.0D, 0.0D, 21.0D, 16.0D, 3.0D), Block.box(20.0D, 0.0D, 0.0D, 30.0D, 6.0D, 14.0D), Block.box(16.0D, 0.0D, 4.0D, 20.0D, 6.0D, 14.0D), Block.box(16.0D, 6.0D, 4.0D, 20.0D, 14.0D, 13.0D), Block.box(20.0D, 6.0D, 0.0D, 29.0D, 14.0D, 13.0D), Block.box(21.0D, 14.0D, 5.0D, 27.0D, 16.0D, 11.0D), Block.box(12.0D, 0.0D, 4.0D, 16.0D, 6.0D, 14.0D), Block.box(12.0D, 6.0D, 4.0D, 16.0D, 14.0D, 13.0D), Block.box(4.0D, 10.0D, 1.0D, 12.0D, 11.0D, 2.0D), Block.box(12.0D, 0.0D, 2.0D, 16.0D, 15.0D, 4.0D), Block.box(12.0D, 0.0D, 0.0D, 14.0D, 15.0D, 2.0D), Block.box(11.0D, 15.0D, 3.0D, 16.0D, 16.0D, 5.0D), Block.box(11.0D, 15.0D, 0.0D, 13.0D, 16.0D, 3.0D), Block.box(2.0D, 0.0D, 2.0D, 12.0D, 6.0D, 14.0D), Block.box(3.0D, 6.0D, 3.0D, 12.0D, 14.0D, 13.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(3.0D, 10.0D, 0.0D, 4.0D, 11.0D, 3.0D), Block.box(16.0D, 0.0D, -5.0D, 19.0D, 5.0D, -4.0D), Block.box(19.0D, 0.0D, -13.0D, 29.0D, 3.0D, -7.0D), Block.box(16.0D, 0.0D, -4.0D, 20.0D, 15.0D, -2.0D), Block.box(18.0D, 0.0D, -2.0D, 20.0D, 15.0D, 0.0D), Block.box(20.0D, 10.0D, -13.0D, 29.0D, 14.0D, 0.0D), Block.box(19.0D, 10.0D, -13.0D, 20.0D, 14.0D, -4.0D), Block.box(16.0D, 15.0D, -5.0D, 21.0D, 16.0D, -3.0D), Block.box(19.0D, 15.0D, -3.0D, 21.0D, 16.0D, 0.0D), Block.box(21.0D, 14.0D, -11.0D, 27.0D, 16.0D, -5.0D), Block.box(16.0D, 10.0D, -5.0D, 19.0D, 11.0D, -4.0D), Block.box(13.0D, 0.0D, -5.0D, 16.0D, 5.0D, -4.0D), Block.box(12.0D, 0.0D, -2.0D, 14.0D, 15.0D, 0.0D), Block.box(11.0D, 15.0D, -3.0D, 13.0D, 16.0D, 0.0D), Block.box(12.0D, 0.0D, -4.0D, 16.0D, 15.0D, -2.0D), Block.box(11.0D, 15.0D, -5.0D, 16.0D, 16.0D, -3.0D), Block.box(4.0D, 10.0D, -5.0D, 12.0D, 11.0D, -4.0D), Block.box(4.0D, 10.0D, -3.0D, 12.0D, 11.0D, -2.0D), Block.box(4.0D, 10.0D, -1.0D, 12.0D, 11.0D, 0.0D), Block.box(12.0D, 10.0D, -5.0D, 16.0D, 11.0D, -4.0D), Block.box(3.0D, 10.0D, -5.0D, 4.0D, 11.0D, 0.0D), Block.box(8.0D, 11.0D, -6.0D, 11.0D, 14.0D, -1.0D), Block.box(9.0D, 5.0D, -4.0D, 10.0D, 11.0D, -3.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_BACK_RIGHT_EAST = Stream.of(Block.box(14.0D, -2.0D, 18.0D, 16.0D, 0.0D, 20.0D), Block.box(2.0D, -2.0D, 16.0D, 12.0D, 0.0D, 20.0D), Block.box(12.0D, -2.0D, 16.0D, 14.0D, 0.0D, 20.0D), Block.box(1.0D, -16.0D, 16.0D, 16.0D, -14.0D, 31.0D), Block.box(1.0D, -4.0D, 16.0D, 16.0D, -2.0D, 31.0D), Block.box(1.0D, -14.0D, 16.0D, 16.0D, -4.0D, 31.0D), Block.box(2.0D, -2.0D, 20.0D, 16.0D, 0.0D, 30.0D), Block.box(2.0D, -2.0D, 12.0D, 12.0D, 0.0D, 16.0D), Block.box(14.0D, -2.0D, 12.0D, 16.0D, 0.0D, 14.0D), Block.box(12.0D, -2.0D, 12.0D, 14.0D, 0.0D, 16.0D), Block.box(2.0D, -2.0D, 2.0D, 14.0D, 0.0D, 12.0D), Block.box(1.0D, -16.0D, 1.0D, 16.0D, -14.0D, 16.0D), Block.box(1.0D, -4.0D, 1.0D, 16.0D, -2.0D, 16.0D), Block.box(1.0D, -14.0D, 1.0D, 16.0D, -4.0D, 16.0D), Block.box(16.0D, -7.0D, 16.0D, 29.0D, -4.0D, 29.0D), Block.box(16.0D, -16.0D, 16.0D, 31.0D, -14.0D, 31.0D), Block.box(29.0D, -14.0D, 22.0D, 31.0D, -9.0D, 31.0D), Block.box(29.0D, -9.0D, 16.0D, 31.0D, -4.0D, 31.0D), Block.box(16.0D, -4.0D, 16.0D, 31.0D, -2.0D, 31.0D), Block.box(16.0D, -14.0D, 29.0D, 29.0D, -4.0D, 31.0D), Block.box(20.0D, -1.0D, 16.0D, 21.0D, 0.0D, 19.0D), Block.box(24.0D, -2.0D, 20.0D, 28.0D, -1.0D, 28.0D), Block.box(25.0D, -1.0D, 21.0D, 27.0D, 0.0D, 27.0D), Block.box(18.0D, -2.0D, 16.0D, 20.0D, 0.0D, 20.0D), Block.box(16.0D, -2.0D, 18.0D, 18.0D, 0.0D, 20.0D), Block.box(20.0D, -1.0D, 13.0D, 21.0D, 0.0D, 16.0D), Block.box(16.0D, -16.0D, 1.0D, 31.0D, -14.0D, 16.0D), Block.box(29.0D, -14.0D, 1.0D, 31.0D, -9.0D, 10.0D), Block.box(29.0D, -9.0D, 1.0D, 31.0D, -4.0D, 16.0D), Block.box(16.0D, -4.0D, 9.0D, 31.0D, -2.0D, 16.0D), Block.box(16.0D, -7.0D, 9.0D, 29.0D, -4.0D, 16.0D), Block.box(16.0D, -14.0D, 1.0D, 29.0D, -4.0D, 3.0D), Block.box(18.0D, -2.0D, 12.0D, 20.0D, 0.0D, 16.0D), Block.box(16.0D, -2.0D, 12.0D, 18.0D, 0.0D, 14.0D), Block.box(16.0D, -4.0D, 1.0D, 31.0D, -2.0D, 5.0D), Block.box(25.0D, -4.0D, 5.0D, 31.0D, -2.0D, 9.0D), Block.box(25.0D, -7.0D, 3.0D, 29.0D, -4.0D, 9.0D), Block.box(17.0D, -7.0D, 3.0D, 25.0D, -4.0D, 5.0D), Block.box(16.0D, -4.0D, 5.0D, 17.0D, -2.0D, 9.0D), Block.box(16.0D, -7.0D, 3.0D, 17.0D, -4.0D, 9.0D), Block.box(17.0D, -7.0D, 5.0D, 25.0D, -6.0D, 9.0D), Block.box(12.0D, 0.0D, 16.0D, 14.0D, 15.0D, 20.0D), Block.box(14.0D, 0.0D, 18.0D, 16.0D, 15.0D, 20.0D), Block.box(11.0D, 15.0D, 16.0D, 13.0D, 16.0D, 21.0D), Block.box(13.0D, 15.0D, 19.0D, 16.0D, 16.0D, 21.0D), Block.box(2.0D, 0.0D, 20.0D, 16.0D, 6.0D, 30.0D), Block.box(2.0D, 0.0D, 16.0D, 12.0D, 6.0D, 20.0D), Block.box(3.0D, 6.0D, 16.0D, 12.0D, 14.0D, 20.0D), Block.box(3.0D, 6.0D, 20.0D, 16.0D, 14.0D, 29.0D), Block.box(5.0D, 14.0D, 21.0D, 11.0D, 16.0D, 27.0D), Block.box(2.0D, 0.0D, 12.0D, 12.0D, 6.0D, 16.0D), Block.box(3.0D, 6.0D, 12.0D, 12.0D, 14.0D, 16.0D), Block.box(14.0D, 10.0D, 4.0D, 15.0D, 11.0D, 12.0D), Block.box(12.0D, 0.0D, 12.0D, 14.0D, 15.0D, 16.0D), Block.box(14.0D, 0.0D, 12.0D, 16.0D, 15.0D, 14.0D), Block.box(11.0D, 15.0D, 11.0D, 13.0D, 16.0D, 16.0D), Block.box(13.0D, 15.0D, 11.0D, 16.0D, 16.0D, 13.0D), Block.box(2.0D, 0.0D, 2.0D, 14.0D, 6.0D, 12.0D), Block.box(3.0D, 6.0D, 3.0D, 13.0D, 14.0D, 12.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(13.0D, 10.0D, 3.0D, 16.0D, 11.0D, 4.0D), Block.box(20.0D, 0.0D, 16.0D, 21.0D, 5.0D, 19.0D), Block.box(23.0D, 0.0D, 19.0D, 29.0D, 3.0D, 29.0D), Block.box(18.0D, 0.0D, 16.0D, 20.0D, 15.0D, 20.0D), Block.box(16.0D, 0.0D, 18.0D, 18.0D, 15.0D, 20.0D), Block.box(16.0D, 10.0D, 20.0D, 29.0D, 14.0D, 29.0D), Block.box(20.0D, 10.0D, 19.0D, 29.0D, 14.0D, 20.0D), Block.box(19.0D, 15.0D, 16.0D, 21.0D, 16.0D, 21.0D), Block.box(16.0D, 15.0D, 19.0D, 19.0D, 16.0D, 21.0D), Block.box(21.0D, 14.0D, 21.0D, 27.0D, 16.0D, 27.0D), Block.box(20.0D, 10.0D, 16.0D, 21.0D, 11.0D, 19.0D), Block.box(20.0D, 0.0D, 13.0D, 21.0D, 5.0D, 16.0D), Block.box(16.0D, 0.0D, 12.0D, 18.0D, 15.0D, 14.0D), Block.box(16.0D, 15.0D, 11.0D, 19.0D, 16.0D, 13.0D), Block.box(18.0D, 0.0D, 12.0D, 20.0D, 15.0D, 16.0D), Block.box(19.0D, 15.0D, 11.0D, 21.0D, 16.0D, 16.0D), Block.box(20.0D, 10.0D, 4.0D, 21.0D, 11.0D, 12.0D), Block.box(18.0D, 10.0D, 4.0D, 19.0D, 11.0D, 12.0D), Block.box(16.0D, 10.0D, 4.0D, 17.0D, 11.0D, 12.0D), Block.box(20.0D, 10.0D, 12.0D, 21.0D, 11.0D, 16.0D), Block.box(16.0D, 10.0D, 3.0D, 21.0D, 11.0D, 4.0D), Block.box(17.0D, 11.0D, 8.0D, 22.0D, 14.0D, 11.0D), Block.box(19.0D, 5.0D, 9.0D, 20.0D, 11.0D, 10.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_BACK_RIGHT_SOUTH = Stream.of(Block.box(-4.0D, -2.0D, 14.0D, -2.0D, 0.0D, 16.0D), Block.box(-4.0D, -2.0D, 2.0D, 0.0D, 0.0D, 12.0D), Block.box(-4.0D, -2.0D, 12.0D, 0.0D, 0.0D, 14.0D), Block.box(-15.0D, -16.0D, 1.0D, 0.0D, -14.0D, 16.0D), Block.box(-15.0D, -4.0D, 1.0D, 0.0D, -2.0D, 16.0D), Block.box(-15.0D, -14.0D, 1.0D, 0.0D, -4.0D, 16.0D), Block.box(-14.0D, -2.0D, 2.0D, -4.0D, 0.0D, 16.0D), Block.box(0.0D, -2.0D, 2.0D, 4.0D, 0.0D, 12.0D), Block.box(2.0D, -2.0D, 14.0D, 4.0D, 0.0D, 16.0D), Block.box(0.0D, -2.0D, 12.0D, 4.0D, 0.0D, 14.0D), Block.box(4.0D, -2.0D, 2.0D, 14.0D, 0.0D, 14.0D), Block.box(0.0D, -16.0D, 1.0D, 15.0D, -14.0D, 16.0D), Block.box(0.0D, -4.0D, 1.0D, 15.0D, -2.0D, 16.0D), Block.box(0.0D, -14.0D, 1.0D, 15.0D, -4.0D, 16.0D), Block.box(-13.0D, -7.0D, 16.0D, 0.0D, -4.0D, 29.0D), Block.box(-15.0D, -16.0D, 16.0D, 0.0D, -14.0D, 31.0D), Block.box(-15.0D, -14.0D, 29.0D, -6.0D, -9.0D, 31.0D), Block.box(-15.0D, -9.0D, 29.0D, 0.0D, -4.0D, 31.0D), Block.box(-15.0D, -4.0D, 16.0D, 0.0D, -2.0D, 31.0D), Block.box(-15.0D, -14.0D, 16.0D, -13.0D, -4.0D, 29.0D), Block.box(-3.0D, -1.0D, 20.0D, 0.0D, 0.0D, 21.0D), Block.box(-12.0D, -2.0D, 24.0D, -4.0D, -1.0D, 28.0D), Block.box(-11.0D, -1.0D, 25.0D, -5.0D, 0.0D, 27.0D), Block.box(-4.0D, -2.0D, 18.0D, 0.0D, 0.0D, 20.0D), Block.box(-4.0D, -2.0D, 16.0D, -2.0D, 0.0D, 18.0D), Block.box(0.0D, -1.0D, 20.0D, 3.0D, 0.0D, 21.0D), Block.box(0.0D, -16.0D, 16.0D, 15.0D, -14.0D, 31.0D), Block.box(6.0D, -14.0D, 29.0D, 15.0D, -9.0D, 31.0D), Block.box(0.0D, -9.0D, 29.0D, 15.0D, -4.0D, 31.0D), Block.box(0.0D, -4.0D, 16.0D, 7.0D, -2.0D, 31.0D), Block.box(0.0D, -7.0D, 16.0D, 7.0D, -4.0D, 29.0D), Block.box(13.0D, -14.0D, 16.0D, 15.0D, -4.0D, 29.0D), Block.box(0.0D, -2.0D, 18.0D, 4.0D, 0.0D, 20.0D), Block.box(2.0D, -2.0D, 16.0D, 4.0D, 0.0D, 18.0D), Block.box(11.0D, -4.0D, 16.0D, 15.0D, -2.0D, 31.0D), Block.box(7.0D, -4.0D, 25.0D, 11.0D, -2.0D, 31.0D), Block.box(7.0D, -7.0D, 25.0D, 13.0D, -4.0D, 29.0D), Block.box(11.0D, -7.0D, 17.0D, 13.0D, -4.0D, 25.0D), Block.box(7.0D, -4.0D, 16.0D, 11.0D, -2.0D, 17.0D), Block.box(7.0D, -7.0D, 16.0D, 13.0D, -4.0D, 17.0D), Block.box(7.0D, -7.0D, 17.0D, 11.0D, -6.0D, 25.0D), Block.box(-4.0D, 0.0D, 12.0D, 0.0D, 15.0D, 14.0D), Block.box(-4.0D, 0.0D, 14.0D, -2.0D, 15.0D, 16.0D), Block.box(-5.0D, 15.0D, 11.0D, 0.0D, 16.0D, 13.0D), Block.box(-5.0D, 15.0D, 13.0D, -3.0D, 16.0D, 16.0D), Block.box(-14.0D, 0.0D, 2.0D, -4.0D, 6.0D, 16.0D), Block.box(-4.0D, 0.0D, 2.0D, 0.0D, 6.0D, 12.0D), Block.box(-4.0D, 6.0D, 3.0D, 0.0D, 14.0D, 12.0D), Block.box(-13.0D, 6.0D, 3.0D, -4.0D, 14.0D, 16.0D), Block.box(-11.0D, 14.0D, 5.0D, -5.0D, 16.0D, 11.0D), Block.box(0.0D, 0.0D, 2.0D, 4.0D, 6.0D, 12.0D), Block.box(0.0D, 6.0D, 3.0D, 4.0D, 14.0D, 12.0D), Block.box(4.0D, 10.0D, 14.0D, 12.0D, 11.0D, 15.0D), Block.box(0.0D, 0.0D, 12.0D, 4.0D, 15.0D, 14.0D), Block.box(2.0D, 0.0D, 14.0D, 4.0D, 15.0D, 16.0D), Block.box(0.0D, 15.0D, 11.0D, 5.0D, 16.0D, 13.0D), Block.box(3.0D, 15.0D, 13.0D, 5.0D, 16.0D, 16.0D), Block.box(4.0D, 0.0D, 2.0D, 14.0D, 6.0D, 14.0D), Block.box(4.0D, 6.0D, 3.0D, 13.0D, 14.0D, 13.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(12.0D, 10.0D, 13.0D, 13.0D, 11.0D, 16.0D), Block.box(-3.0D, 0.0D, 20.0D, 0.0D, 5.0D, 21.0D), Block.box(-13.0D, 0.0D, 23.0D, -3.0D, 3.0D, 29.0D), Block.box(-4.0D, 0.0D, 18.0D, 0.0D, 15.0D, 20.0D), Block.box(-4.0D, 0.0D, 16.0D, -2.0D, 15.0D, 18.0D), Block.box(-13.0D, 10.0D, 16.0D, -4.0D, 14.0D, 29.0D), Block.box(-4.0D, 10.0D, 20.0D, -3.0D, 14.0D, 29.0D), Block.box(-5.0D, 15.0D, 19.0D, 0.0D, 16.0D, 21.0D), Block.box(-5.0D, 15.0D, 16.0D, -3.0D, 16.0D, 19.0D), Block.box(-11.0D, 14.0D, 21.0D, -5.0D, 16.0D, 27.0D), Block.box(-3.0D, 10.0D, 20.0D, 0.0D, 11.0D, 21.0D), Block.box(0.0D, 0.0D, 20.0D, 3.0D, 5.0D, 21.0D), Block.box(2.0D, 0.0D, 16.0D, 4.0D, 15.0D, 18.0D), Block.box(3.0D, 15.0D, 16.0D, 5.0D, 16.0D, 19.0D), Block.box(0.0D, 0.0D, 18.0D, 4.0D, 15.0D, 20.0D), Block.box(0.0D, 15.0D, 19.0D, 5.0D, 16.0D, 21.0D), Block.box(4.0D, 10.0D, 20.0D, 12.0D, 11.0D, 21.0D), Block.box(4.0D, 10.0D, 18.0D, 12.0D, 11.0D, 19.0D), Block.box(4.0D, 10.0D, 16.0D, 12.0D, 11.0D, 17.0D), Block.box(0.0D, 10.0D, 20.0D, 4.0D, 11.0D, 21.0D), Block.box(12.0D, 10.0D, 16.0D, 13.0D, 11.0D, 21.0D), Block.box(5.0D, 11.0D, 17.0D, 8.0D, 14.0D, 22.0D), Block.box(6.0D, 5.0D, 19.0D, 7.0D, 11.0D, 20.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_BACK_RIGHT_WEST = Stream.of(Block.box(0.0D, -2.0D, -4.0D, 2.0D, 0.0D, -2.0D), Block.box(4.0D, -2.0D, -4.0D, 14.0D, 0.0D, 0.0D), Block.box(2.0D, -2.0D, -4.0D, 4.0D, 0.0D, 0.0D), Block.box(0.0D, -16.0D, -15.0D, 15.0D, -14.0D, 0.0D), Block.box(0.0D, -4.0D, -15.0D, 15.0D, -2.0D, 0.0D), Block.box(0.0D, -14.0D, -15.0D, 15.0D, -4.0D, 0.0D), Block.box(0.0D, -2.0D, -14.0D, 14.0D, 0.0D, -4.0D), Block.box(4.0D, -2.0D, 0.0D, 14.0D, 0.0D, 4.0D), Block.box(0.0D, -2.0D, 2.0D, 2.0D, 0.0D, 4.0D), Block.box(2.0D, -2.0D, 0.0D, 4.0D, 0.0D, 4.0D), Block.box(2.0D, -2.0D, 4.0D, 14.0D, 0.0D, 14.0D), Block.box(0.0D, -16.0D, 0.0D, 15.0D, -14.0D, 15.0D), Block.box(0.0D, -4.0D, 0.0D, 15.0D, -2.0D, 15.0D), Block.box(0.0D, -14.0D, 0.0D, 15.0D, -4.0D, 15.0D), Block.box(-13.0D, -7.0D, -13.0D, 0.0D, -4.0D, 0.0D), Block.box(-15.0D, -16.0D, -15.0D, 0.0D, -14.0D, 0.0D), Block.box(-15.0D, -14.0D, -15.0D, -13.0D, -9.0D, -6.0D), Block.box(-15.0D, -9.0D, -15.0D, -13.0D, -4.0D, 0.0D), Block.box(-15.0D, -4.0D, -15.0D, 0.0D, -2.0D, 0.0D), Block.box(-13.0D, -14.0D, -15.0D, 0.0D, -4.0D, -13.0D), Block.box(-5.0D, -1.0D, -3.0D, -4.0D, 0.0D, 0.0D), Block.box(-12.0D, -2.0D, -12.0D, -8.0D, -1.0D, -4.0D), Block.box(-11.0D, -1.0D, -11.0D, -9.0D, 0.0D, -5.0D), Block.box(-4.0D, -2.0D, -4.0D, -2.0D, 0.0D, 0.0D), Block.box(-2.0D, -2.0D, -4.0D, 0.0D, 0.0D, -2.0D), Block.box(-5.0D, -1.0D, 0.0D, -4.0D, 0.0D, 3.0D), Block.box(-15.0D, -16.0D, 0.0D, 0.0D, -14.0D, 15.0D), Block.box(-15.0D, -14.0D, 6.0D, -13.0D, -9.0D, 15.0D), Block.box(-15.0D, -9.0D, 0.0D, -13.0D, -4.0D, 15.0D), Block.box(-15.0D, -4.0D, 0.0D, 0.0D, -2.0D, 7.0D), Block.box(-13.0D, -7.0D, 0.0D, 0.0D, -4.0D, 7.0D), Block.box(-13.0D, -14.0D, 13.0D, 0.0D, -4.0D, 15.0D), Block.box(-4.0D, -2.0D, 0.0D, -2.0D, 0.0D, 4.0D), Block.box(-2.0D, -2.0D, 2.0D, 0.0D, 0.0D, 4.0D), Block.box(-15.0D, -4.0D, 11.0D, 0.0D, -2.0D, 15.0D), Block.box(-15.0D, -4.0D, 7.0D, -9.0D, -2.0D, 11.0D), Block.box(-13.0D, -7.0D, 7.0D, -9.0D, -4.0D, 13.0D), Block.box(-9.0D, -7.0D, 11.0D, -1.0D, -4.0D, 13.0D), Block.box(-1.0D, -4.0D, 7.0D, 0.0D, -2.0D, 11.0D), Block.box(-1.0D, -7.0D, 7.0D, 0.0D, -4.0D, 13.0D), Block.box(-9.0D, -7.0D, 7.0D, -1.0D, -6.0D, 11.0D), Block.box(2.0D, 0.0D, -4.0D, 4.0D, 15.0D, 0.0D), Block.box(0.0D, 0.0D, -4.0D, 2.0D, 15.0D, -2.0D), Block.box(3.0D, 15.0D, -5.0D, 5.0D, 16.0D, 0.0D), Block.box(0.0D, 15.0D, -5.0D, 3.0D, 16.0D, -3.0D), Block.box(0.0D, 0.0D, -14.0D, 14.0D, 6.0D, -4.0D), Block.box(4.0D, 0.0D, -4.0D, 14.0D, 6.0D, 0.0D), Block.box(4.0D, 6.0D, -4.0D, 13.0D, 14.0D, 0.0D), Block.box(0.0D, 6.0D, -13.0D, 13.0D, 14.0D, -4.0D), Block.box(5.0D, 14.0D, -11.0D, 11.0D, 16.0D, -5.0D), Block.box(4.0D, 0.0D, 0.0D, 14.0D, 6.0D, 4.0D), Block.box(4.0D, 6.0D, 0.0D, 13.0D, 14.0D, 4.0D), Block.box(1.0D, 10.0D, 4.0D, 2.0D, 11.0D, 12.0D), Block.box(2.0D, 0.0D, 0.0D, 4.0D, 15.0D, 4.0D), Block.box(0.0D, 0.0D, 2.0D, 2.0D, 15.0D, 4.0D), Block.box(3.0D, 15.0D, 0.0D, 5.0D, 16.0D, 5.0D), Block.box(0.0D, 15.0D, 3.0D, 3.0D, 16.0D, 5.0D), Block.box(2.0D, 0.0D, 4.0D, 14.0D, 6.0D, 14.0D), Block.box(3.0D, 6.0D, 4.0D, 13.0D, 14.0D, 13.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(0.0D, 10.0D, 12.0D, 3.0D, 11.0D, 13.0D), Block.box(-5.0D, 0.0D, -3.0D, -4.0D, 5.0D, 0.0D), Block.box(-13.0D, 0.0D, -13.0D, -7.0D, 3.0D, -3.0D), Block.box(-4.0D, 0.0D, -4.0D, -2.0D, 15.0D, 0.0D), Block.box(-2.0D, 0.0D, -4.0D, 0.0D, 15.0D, -2.0D), Block.box(-13.0D, 10.0D, -13.0D, 0.0D, 14.0D, -4.0D), Block.box(-13.0D, 10.0D, -4.0D, -4.0D, 14.0D, -3.0D), Block.box(-5.0D, 15.0D, -5.0D, -3.0D, 16.0D, 0.0D), Block.box(-3.0D, 15.0D, -5.0D, 0.0D, 16.0D, -3.0D), Block.box(-11.0D, 14.0D, -11.0D, -5.0D, 16.0D, -5.0D), Block.box(-5.0D, 10.0D, -3.0D, -4.0D, 11.0D, 0.0D), Block.box(-5.0D, 0.0D, 0.0D, -4.0D, 5.0D, 3.0D), Block.box(-2.0D, 0.0D, 2.0D, 0.0D, 15.0D, 4.0D), Block.box(-3.0D, 15.0D, 3.0D, 0.0D, 16.0D, 5.0D), Block.box(-4.0D, 0.0D, 0.0D, -2.0D, 15.0D, 4.0D), Block.box(-5.0D, 15.0D, 0.0D, -3.0D, 16.0D, 5.0D), Block.box(-5.0D, 10.0D, 4.0D, -4.0D, 11.0D, 12.0D), Block.box(-3.0D, 10.0D, 4.0D, -2.0D, 11.0D, 12.0D), Block.box(-1.0D, 10.0D, 4.0D, 0.0D, 11.0D, 12.0D), Block.box(-5.0D, 10.0D, 0.0D, -4.0D, 11.0D, 4.0D), Block.box(-5.0D, 10.0D, 12.0D, 0.0D, 11.0D, 13.0D), Block.box(-6.0D, 11.0D, 5.0D, -1.0D, 14.0D, 8.0D), Block.box(-4.0D, 5.0D, 6.0D, -3.0D, 11.0D, 7.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape TOP_FRONT_LEFT_NORTH = Stream.of(Block.box(2.0D, -2.0D, 16.0D, 4.0D, 0.0D, 18.0D), Block.box(0.0D, -2.0D, 20.0D, 4.0D, 0.0D, 30.0D), Block.box(0.0D, -2.0D, 18.0D, 4.0D, 0.0D, 20.0D), Block.box(0.0D, -16.0D, 16.0D, 15.0D, -14.0D, 31.0D), Block.box(0.0D, -4.0D, 16.0D, 15.0D, -2.0D, 31.0D), Block.box(0.0D, -14.0D, 16.0D, 15.0D, -4.0D, 31.0D), Block.box(4.0D, -2.0D, 16.0D, 14.0D, 0.0D, 30.0D), Block.box(-4.0D, -2.0D, 20.0D, 0.0D, 0.0D, 30.0D), Block.box(-4.0D, -2.0D, 16.0D, -2.0D, 0.0D, 18.0D), Block.box(-4.0D, -2.0D, 18.0D, 0.0D, 0.0D, 20.0D), Block.box(-14.0D, -2.0D, 18.0D, -4.0D, 0.0D, 30.0D), Block.box(-15.0D, -16.0D, 16.0D, 0.0D, -14.0D, 31.0D), Block.box(-15.0D, -4.0D, 16.0D, 0.0D, -2.0D, 31.0D), Block.box(-15.0D, -14.0D, 16.0D, 0.0D, -4.0D, 31.0D), Block.box(0.0D, -7.0D, 3.0D, 13.0D, -4.0D, 16.0D), Block.box(0.0D, -16.0D, 1.0D, 15.0D, -14.0D, 16.0D), Block.box(6.0D, -14.0D, 1.0D, 15.0D, -9.0D, 3.0D), Block.box(0.0D, -9.0D, 1.0D, 15.0D, -4.0D, 3.0D), Block.box(0.0D, -4.0D, 1.0D, 15.0D, -2.0D, 16.0D), Block.box(13.0D, -14.0D, 3.0D, 15.0D, -4.0D, 16.0D), Block.box(0.0D, -1.0D, 11.0D, 3.0D, 0.0D, 12.0D), Block.box(4.0D, -2.0D, 4.0D, 12.0D, -1.0D, 8.0D), Block.box(5.0D, -1.0D, 5.0D, 11.0D, 0.0D, 7.0D), Block.box(0.0D, -2.0D, 12.0D, 4.0D, 0.0D, 14.0D), Block.box(2.0D, -2.0D, 14.0D, 4.0D, 0.0D, 16.0D), Block.box(-3.0D, -1.0D, 11.0D, 0.0D, 0.0D, 12.0D), Block.box(-15.0D, -16.0D, 1.0D, 0.0D, -14.0D, 16.0D), Block.box(-15.0D, -14.0D, 1.0D, -6.0D, -9.0D, 3.0D), Block.box(-15.0D, -9.0D, 1.0D, 0.0D, -4.0D, 3.0D), Block.box(-7.0D, -4.0D, 1.0D, 0.0D, -2.0D, 16.0D), Block.box(-7.0D, -7.0D, 3.0D, 0.0D, -4.0D, 16.0D), Block.box(-15.0D, -14.0D, 3.0D, -13.0D, -4.0D, 16.0D), Block.box(-4.0D, -2.0D, 12.0D, 0.0D, 0.0D, 14.0D), Block.box(-4.0D, -2.0D, 14.0D, -2.0D, 0.0D, 16.0D), Block.box(-15.0D, -4.0D, 1.0D, -11.0D, -2.0D, 16.0D), Block.box(-11.0D, -4.0D, 1.0D, -7.0D, -2.0D, 7.0D), Block.box(-13.0D, -7.0D, 3.0D, -7.0D, -4.0D, 7.0D), Block.box(-13.0D, -7.0D, 7.0D, -11.0D, -4.0D, 15.0D), Block.box(-11.0D, -4.0D, 15.0D, -7.0D, -2.0D, 16.0D), Block.box(-13.0D, -7.0D, 15.0D, -7.0D, -4.0D, 16.0D), Block.box(-11.0D, -7.0D, 7.0D, -7.0D, -6.0D, 15.0D), Block.box(0.0D, 0.0D, 18.0D, 4.0D, 15.0D, 20.0D), Block.box(2.0D, 0.0D, 16.0D, 4.0D, 15.0D, 18.0D), Block.box(0.0D, 15.0D, 19.0D, 5.0D, 16.0D, 21.0D), Block.box(3.0D, 15.0D, 16.0D, 5.0D, 16.0D, 19.0D), Block.box(4.0D, 0.0D, 16.0D, 14.0D, 6.0D, 30.0D), Block.box(0.0D, 0.0D, 20.0D, 4.0D, 6.0D, 30.0D), Block.box(0.0D, 6.0D, 20.0D, 4.0D, 14.0D, 29.0D), Block.box(4.0D, 6.0D, 16.0D, 13.0D, 14.0D, 29.0D), Block.box(5.0D, 14.0D, 21.0D, 11.0D, 16.0D, 27.0D), Block.box(-4.0D, 0.0D, 20.0D, 0.0D, 6.0D, 30.0D), Block.box(-4.0D, 6.0D, 20.0D, 0.0D, 14.0D, 29.0D), Block.box(-12.0D, 10.0D, 17.0D, -4.0D, 11.0D, 18.0D), Block.box(-4.0D, 0.0D, 18.0D, 0.0D, 15.0D, 20.0D), Block.box(-4.0D, 0.0D, 16.0D, -2.0D, 15.0D, 18.0D), Block.box(-5.0D, 15.0D, 19.0D, 0.0D, 16.0D, 21.0D), Block.box(-5.0D, 15.0D, 16.0D, -3.0D, 16.0D, 19.0D), Block.box(-14.0D, 0.0D, 18.0D, -4.0D, 6.0D, 30.0D), Block.box(-13.0D, 6.0D, 19.0D, -4.0D, 14.0D, 29.0D), Block.box(-11.0D, 14.0D, 21.0D, -5.0D, 16.0D, 27.0D), Block.box(-13.0D, 10.0D, 16.0D, -12.0D, 11.0D, 19.0D), Block.box(0.0D, 0.0D, 11.0D, 3.0D, 5.0D, 12.0D), Block.box(3.0D, 0.0D, 3.0D, 13.0D, 3.0D, 9.0D), Block.box(0.0D, 0.0D, 12.0D, 4.0D, 15.0D, 14.0D), Block.box(2.0D, 0.0D, 14.0D, 4.0D, 15.0D, 16.0D), Block.box(4.0D, 10.0D, 3.0D, 13.0D, 14.0D, 16.0D), Block.box(3.0D, 10.0D, 3.0D, 4.0D, 14.0D, 12.0D), Block.box(0.0D, 15.0D, 11.0D, 5.0D, 16.0D, 13.0D), Block.box(3.0D, 15.0D, 13.0D, 5.0D, 16.0D, 16.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(0.0D, 10.0D, 11.0D, 3.0D, 11.0D, 12.0D), Block.box(-3.0D, 0.0D, 11.0D, 0.0D, 5.0D, 12.0D), Block.box(-4.0D, 0.0D, 14.0D, -2.0D, 15.0D, 16.0D), Block.box(-5.0D, 15.0D, 13.0D, -3.0D, 16.0D, 16.0D), Block.box(-4.0D, 0.0D, 12.0D, 0.0D, 15.0D, 14.0D), Block.box(-5.0D, 15.0D, 11.0D, 0.0D, 16.0D, 13.0D), Block.box(-12.0D, 10.0D, 11.0D, -4.0D, 11.0D, 12.0D), Block.box(-12.0D, 10.0D, 13.0D, -4.0D, 11.0D, 14.0D), Block.box(-12.0D, 10.0D, 15.0D, -4.0D, 11.0D, 16.0D), Block.box(-4.0D, 10.0D, 11.0D, 0.0D, 11.0D, 12.0D), Block.box(-13.0D, 10.0D, 11.0D, -12.0D, 11.0D, 16.0D), Block.box(-8.0D, 11.0D, 10.0D, -5.0D, 14.0D, 15.0D), Block.box(-7.0D, 5.0D, 12.0D, -6.0D, 11.0D, 13.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_FRONT_LEFT_EAST = Stream.of(Block.box(-2.0D, -2.0D, 2.0D, 0.0D, 0.0D, 4.0D), Block.box(-14.0D, -2.0D, 0.0D, -4.0D, 0.0D, 4.0D), Block.box(-4.0D, -2.0D, 0.0D, -2.0D, 0.0D, 4.0D), Block.box(-15.0D, -16.0D, 0.0D, 0.0D, -14.0D, 15.0D), Block.box(-15.0D, -4.0D, 0.0D, 0.0D, -2.0D, 15.0D), Block.box(-15.0D, -14.0D, 0.0D, 0.0D, -4.0D, 15.0D), Block.box(-14.0D, -2.0D, 4.0D, 0.0D, 0.0D, 14.0D), Block.box(-14.0D, -2.0D, -4.0D, -4.0D, 0.0D, 0.0D), Block.box(-2.0D, -2.0D, -4.0D, 0.0D, 0.0D, -2.0D), Block.box(-4.0D, -2.0D, -4.0D, -2.0D, 0.0D, 0.0D), Block.box(-14.0D, -2.0D, -14.0D, -2.0D, 0.0D, -4.0D), Block.box(-15.0D, -16.0D, -15.0D, 0.0D, -14.0D, 0.0D), Block.box(-15.0D, -4.0D, -15.0D, 0.0D, -2.0D, 0.0D), Block.box(-15.0D, -14.0D, -15.0D, 0.0D, -4.0D, 0.0D), Block.box(0.0D, -7.0D, 0.0D, 13.0D, -4.0D, 13.0D), Block.box(0.0D, -16.0D, 0.0D, 15.0D, -14.0D, 15.0D), Block.box(13.0D, -14.0D, 6.0D, 15.0D, -9.0D, 15.0D), Block.box(13.0D, -9.0D, 0.0D, 15.0D, -4.0D, 15.0D), Block.box(0.0D, -4.0D, 0.0D, 15.0D, -2.0D, 15.0D), Block.box(0.0D, -14.0D, 13.0D, 13.0D, -4.0D, 15.0D), Block.box(4.0D, -1.0D, 0.0D, 5.0D, 0.0D, 3.0D), Block.box(8.0D, -2.0D, 4.0D, 12.0D, -1.0D, 12.0D), Block.box(9.0D, -1.0D, 5.0D, 11.0D, 0.0D, 11.0D), Block.box(2.0D, -2.0D, 0.0D, 4.0D, 0.0D, 4.0D), Block.box(0.0D, -2.0D, 2.0D, 2.0D, 0.0D, 4.0D), Block.box(4.0D, -1.0D, -3.0D, 5.0D, 0.0D, 0.0D), Block.box(0.0D, -16.0D, -15.0D, 15.0D, -14.0D, 0.0D), Block.box(13.0D, -14.0D, -15.0D, 15.0D, -9.0D, -6.0D), Block.box(13.0D, -9.0D, -15.0D, 15.0D, -4.0D, 0.0D), Block.box(0.0D, -4.0D, -7.0D, 15.0D, -2.0D, 0.0D), Block.box(0.0D, -7.0D, -7.0D, 13.0D, -4.0D, 0.0D), Block.box(0.0D, -14.0D, -15.0D, 13.0D, -4.0D, -13.0D), Block.box(2.0D, -2.0D, -4.0D, 4.0D, 0.0D, 0.0D), Block.box(0.0D, -2.0D, -4.0D, 2.0D, 0.0D, -2.0D), Block.box(0.0D, -4.0D, -15.0D, 15.0D, -2.0D, -11.0D), Block.box(9.0D, -4.0D, -11.0D, 15.0D, -2.0D, -7.0D), Block.box(9.0D, -7.0D, -13.0D, 13.0D, -4.0D, -7.0D), Block.box(1.0D, -7.0D, -13.0D, 9.0D, -4.0D, -11.0D), Block.box(0.0D, -4.0D, -11.0D, 1.0D, -2.0D, -7.0D), Block.box(0.0D, -7.0D, -13.0D, 1.0D, -4.0D, -7.0D), Block.box(1.0D, -7.0D, -11.0D, 9.0D, -6.0D, -7.0D), Block.box(-4.0D, 0.0D, 0.0D, -2.0D, 15.0D, 4.0D), Block.box(-2.0D, 0.0D, 2.0D, 0.0D, 15.0D, 4.0D), Block.box(-5.0D, 15.0D, 0.0D, -3.0D, 16.0D, 5.0D), Block.box(-3.0D, 15.0D, 3.0D, 0.0D, 16.0D, 5.0D), Block.box(-14.0D, 0.0D, 4.0D, 0.0D, 6.0D, 14.0D), Block.box(-14.0D, 0.0D, 0.0D, -4.0D, 6.0D, 4.0D), Block.box(-13.0D, 6.0D, 0.0D, -4.0D, 14.0D, 4.0D), Block.box(-13.0D, 6.0D, 4.0D, 0.0D, 14.0D, 13.0D), Block.box(-11.0D, 14.0D, 5.0D, -5.0D, 16.0D, 11.0D), Block.box(-14.0D, 0.0D, -4.0D, -4.0D, 6.0D, 0.0D), Block.box(-13.0D, 6.0D, -4.0D, -4.0D, 14.0D, 0.0D), Block.box(-2.0D, 10.0D, -12.0D, -1.0D, 11.0D, -4.0D), Block.box(-4.0D, 0.0D, -4.0D, -2.0D, 15.0D, 0.0D), Block.box(-2.0D, 0.0D, -4.0D, 0.0D, 15.0D, -2.0D), Block.box(-5.0D, 15.0D, -5.0D, -3.0D, 16.0D, 0.0D), Block.box(-3.0D, 15.0D, -5.0D, 0.0D, 16.0D, -3.0D), Block.box(-14.0D, 0.0D, -14.0D, -2.0D, 6.0D, -4.0D), Block.box(-13.0D, 6.0D, -13.0D, -3.0D, 14.0D, -4.0D), Block.box(-11.0D, 14.0D, -11.0D, -5.0D, 16.0D, -5.0D), Block.box(-3.0D, 10.0D, -13.0D, 0.0D, 11.0D, -12.0D), Block.box(4.0D, 0.0D, 0.0D, 5.0D, 5.0D, 3.0D), Block.box(7.0D, 0.0D, 3.0D, 13.0D, 3.0D, 13.0D), Block.box(2.0D, 0.0D, 0.0D, 4.0D, 15.0D, 4.0D), Block.box(0.0D, 0.0D, 2.0D, 2.0D, 15.0D, 4.0D), Block.box(0.0D, 10.0D, 4.0D, 13.0D, 14.0D, 13.0D), Block.box(4.0D, 10.0D, 3.0D, 13.0D, 14.0D, 4.0D), Block.box(3.0D, 15.0D, 0.0D, 5.0D, 16.0D, 5.0D), Block.box(0.0D, 15.0D, 3.0D, 3.0D, 16.0D, 5.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(4.0D, 10.0D, 0.0D, 5.0D, 11.0D, 3.0D), Block.box(4.0D, 0.0D, -3.0D, 5.0D, 5.0D, 0.0D), Block.box(0.0D, 0.0D, -4.0D, 2.0D, 15.0D, -2.0D), Block.box(0.0D, 15.0D, -5.0D, 3.0D, 16.0D, -3.0D), Block.box(2.0D, 0.0D, -4.0D, 4.0D, 15.0D, 0.0D), Block.box(3.0D, 15.0D, -5.0D, 5.0D, 16.0D, 0.0D), Block.box(4.0D, 10.0D, -12.0D, 5.0D, 11.0D, -4.0D), Block.box(2.0D, 10.0D, -12.0D, 3.0D, 11.0D, -4.0D), Block.box(0.0D, 10.0D, -12.0D, 1.0D, 11.0D, -4.0D), Block.box(4.0D, 10.0D, -4.0D, 5.0D, 11.0D, 0.0D), Block.box(0.0D, 10.0D, -13.0D, 5.0D, 11.0D, -12.0D), Block.box(1.0D, 11.0D, -8.0D, 6.0D, 14.0D, -5.0D), Block.box(3.0D, 5.0D, -7.0D, 4.0D, 11.0D, -6.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_FRONT_LEFT_SOUTH = Stream.of(Block.box(12.0D, -2.0D, -2.0D, 14.0D, 0.0D, 0.0D), Block.box(12.0D, -2.0D, -14.0D, 16.0D, 0.0D, -4.0D), Block.box(12.0D, -2.0D, -4.0D, 16.0D, 0.0D, -2.0D), Block.box(1.0D, -16.0D, -15.0D, 16.0D, -14.0D, 0.0D), Block.box(1.0D, -4.0D, -15.0D, 16.0D, -2.0D, 0.0D), Block.box(1.0D, -14.0D, -15.0D, 16.0D, -4.0D, 0.0D), Block.box(2.0D, -2.0D, -14.0D, 12.0D, 0.0D, 0.0D), Block.box(16.0D, -2.0D, -14.0D, 20.0D, 0.0D, -4.0D), Block.box(18.0D, -2.0D, -2.0D, 20.0D, 0.0D, 0.0D), Block.box(16.0D, -2.0D, -4.0D, 20.0D, 0.0D, -2.0D), Block.box(20.0D, -2.0D, -14.0D, 30.0D, 0.0D, -2.0D), Block.box(16.0D, -16.0D, -15.0D, 31.0D, -14.0D, 0.0D), Block.box(16.0D, -4.0D, -15.0D, 31.0D, -2.0D, 0.0D), Block.box(16.0D, -14.0D, -15.0D, 31.0D, -4.0D, 0.0D), Block.box(3.0D, -7.0D, 0.0D, 16.0D, -4.0D, 13.0D), Block.box(1.0D, -16.0D, 0.0D, 16.0D, -14.0D, 15.0D), Block.box(1.0D, -14.0D, 13.0D, 10.0D, -9.0D, 15.0D), Block.box(1.0D, -9.0D, 13.0D, 16.0D, -4.0D, 15.0D), Block.box(1.0D, -4.0D, 0.0D, 16.0D, -2.0D, 15.0D), Block.box(1.0D, -14.0D, 0.0D, 3.0D, -4.0D, 13.0D), Block.box(13.0D, -1.0D, 4.0D, 16.0D, 0.0D, 5.0D), Block.box(4.0D, -2.0D, 8.0D, 12.0D, -1.0D, 12.0D), Block.box(5.0D, -1.0D, 9.0D, 11.0D, 0.0D, 11.0D), Block.box(12.0D, -2.0D, 2.0D, 16.0D, 0.0D, 4.0D), Block.box(12.0D, -2.0D, 0.0D, 14.0D, 0.0D, 2.0D), Block.box(16.0D, -1.0D, 4.0D, 19.0D, 0.0D, 5.0D), Block.box(16.0D, -16.0D, 0.0D, 31.0D, -14.0D, 15.0D), Block.box(22.0D, -14.0D, 13.0D, 31.0D, -9.0D, 15.0D), Block.box(16.0D, -9.0D, 13.0D, 31.0D, -4.0D, 15.0D), Block.box(16.0D, -4.0D, 0.0D, 23.0D, -2.0D, 15.0D), Block.box(16.0D, -7.0D, 0.0D, 23.0D, -4.0D, 13.0D), Block.box(29.0D, -14.0D, 0.0D, 31.0D, -4.0D, 13.0D), Block.box(16.0D, -2.0D, 2.0D, 20.0D, 0.0D, 4.0D), Block.box(18.0D, -2.0D, 0.0D, 20.0D, 0.0D, 2.0D), Block.box(27.0D, -4.0D, 0.0D, 31.0D, -2.0D, 15.0D), Block.box(23.0D, -4.0D, 9.0D, 27.0D, -2.0D, 15.0D), Block.box(23.0D, -7.0D, 9.0D, 29.0D, -4.0D, 13.0D), Block.box(27.0D, -7.0D, 1.0D, 29.0D, -4.0D, 9.0D), Block.box(23.0D, -4.0D, 0.0D, 27.0D, -2.0D, 1.0D), Block.box(23.0D, -7.0D, 0.0D, 29.0D, -4.0D, 1.0D), Block.box(23.0D, -7.0D, 1.0D, 27.0D, -6.0D, 9.0D), Block.box(12.0D, 0.0D, -4.0D, 16.0D, 15.0D, -2.0D), Block.box(12.0D, 0.0D, -2.0D, 14.0D, 15.0D, 0.0D), Block.box(11.0D, 15.0D, -5.0D, 16.0D, 16.0D, -3.0D), Block.box(11.0D, 15.0D, -3.0D, 13.0D, 16.0D, 0.0D), Block.box(2.0D, 0.0D, -14.0D, 12.0D, 6.0D, 0.0D), Block.box(12.0D, 0.0D, -14.0D, 16.0D, 6.0D, -4.0D), Block.box(12.0D, 6.0D, -13.0D, 16.0D, 14.0D, -4.0D), Block.box(3.0D, 6.0D, -13.0D, 12.0D, 14.0D, 0.0D), Block.box(5.0D, 14.0D, -11.0D, 11.0D, 16.0D, -5.0D), Block.box(16.0D, 0.0D, -14.0D, 20.0D, 6.0D, -4.0D), Block.box(16.0D, 6.0D, -13.0D, 20.0D, 14.0D, -4.0D), Block.box(20.0D, 10.0D, -2.0D, 28.0D, 11.0D, -1.0D), Block.box(16.0D, 0.0D, -4.0D, 20.0D, 15.0D, -2.0D), Block.box(18.0D, 0.0D, -2.0D, 20.0D, 15.0D, 0.0D), Block.box(16.0D, 15.0D, -5.0D, 21.0D, 16.0D, -3.0D), Block.box(19.0D, 15.0D, -3.0D, 21.0D, 16.0D, 0.0D), Block.box(20.0D, 0.0D, -14.0D, 30.0D, 6.0D, -2.0D), Block.box(20.0D, 6.0D, -13.0D, 29.0D, 14.0D, -3.0D), Block.box(21.0D, 14.0D, -11.0D, 27.0D, 16.0D, -5.0D), Block.box(28.0D, 10.0D, -3.0D, 29.0D, 11.0D, 0.0D), Block.box(13.0D, 0.0D, 4.0D, 16.0D, 5.0D, 5.0D), Block.box(3.0D, 0.0D, 7.0D, 13.0D, 3.0D, 13.0D), Block.box(12.0D, 0.0D, 2.0D, 16.0D, 15.0D, 4.0D), Block.box(12.0D, 0.0D, 0.0D, 14.0D, 15.0D, 2.0D), Block.box(3.0D, 10.0D, 0.0D, 12.0D, 14.0D, 13.0D), Block.box(12.0D, 10.0D, 4.0D, 13.0D, 14.0D, 13.0D), Block.box(11.0D, 15.0D, 3.0D, 16.0D, 16.0D, 5.0D), Block.box(11.0D, 15.0D, 0.0D, 13.0D, 16.0D, 3.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(13.0D, 10.0D, 4.0D, 16.0D, 11.0D, 5.0D), Block.box(16.0D, 0.0D, 4.0D, 19.0D, 5.0D, 5.0D), Block.box(18.0D, 0.0D, 0.0D, 20.0D, 15.0D, 2.0D), Block.box(19.0D, 15.0D, 0.0D, 21.0D, 16.0D, 3.0D), Block.box(16.0D, 0.0D, 2.0D, 20.0D, 15.0D, 4.0D), Block.box(16.0D, 15.0D, 3.0D, 21.0D, 16.0D, 5.0D), Block.box(20.0D, 10.0D, 4.0D, 28.0D, 11.0D, 5.0D), Block.box(20.0D, 10.0D, 2.0D, 28.0D, 11.0D, 3.0D), Block.box(20.0D, 10.0D, 0.0D, 28.0D, 11.0D, 1.0D), Block.box(16.0D, 10.0D, 4.0D, 20.0D, 11.0D, 5.0D), Block.box(28.0D, 10.0D, 0.0D, 29.0D, 11.0D, 5.0D), Block.box(21.0D, 11.0D, 1.0D, 24.0D, 14.0D, 6.0D), Block.box(22.0D, 5.0D, 3.0D, 23.0D, 11.0D, 4.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_FRONT_LEFT_WEST = Stream.of(Block.box(16.0D, -2.0D, 12.0D, 18.0D, 0.0D, 14.0D), Block.box(20.0D, -2.0D, 12.0D, 30.0D, 0.0D, 16.0D), Block.box(18.0D, -2.0D, 12.0D, 20.0D, 0.0D, 16.0D), Block.box(16.0D, -16.0D, 1.0D, 31.0D, -14.0D, 16.0D), Block.box(16.0D, -4.0D, 1.0D, 31.0D, -2.0D, 16.0D), Block.box(16.0D, -14.0D, 1.0D, 31.0D, -4.0D, 16.0D), Block.box(16.0D, -2.0D, 2.0D, 30.0D, 0.0D, 12.0D), Block.box(20.0D, -2.0D, 16.0D, 30.0D, 0.0D, 20.0D), Block.box(16.0D, -2.0D, 18.0D, 18.0D, 0.0D, 20.0D), Block.box(18.0D, -2.0D, 16.0D, 20.0D, 0.0D, 20.0D), Block.box(18.0D, -2.0D, 20.0D, 30.0D, 0.0D, 30.0D), Block.box(16.0D, -16.0D, 16.0D, 31.0D, -14.0D, 31.0D), Block.box(16.0D, -4.0D, 16.0D, 31.0D, -2.0D, 31.0D), Block.box(16.0D, -14.0D, 16.0D, 31.0D, -4.0D, 31.0D), Block.box(3.0D, -7.0D, 3.0D, 16.0D, -4.0D, 16.0D), Block.box(1.0D, -16.0D, 1.0D, 16.0D, -14.0D, 16.0D), Block.box(1.0D, -14.0D, 1.0D, 3.0D, -9.0D, 10.0D), Block.box(1.0D, -9.0D, 1.0D, 3.0D, -4.0D, 16.0D), Block.box(1.0D, -4.0D, 1.0D, 16.0D, -2.0D, 16.0D), Block.box(3.0D, -14.0D, 1.0D, 16.0D, -4.0D, 3.0D), Block.box(11.0D, -1.0D, 13.0D, 12.0D, 0.0D, 16.0D), Block.box(4.0D, -2.0D, 4.0D, 8.0D, -1.0D, 12.0D), Block.box(5.0D, -1.0D, 5.0D, 7.0D, 0.0D, 11.0D), Block.box(12.0D, -2.0D, 12.0D, 14.0D, 0.0D, 16.0D), Block.box(14.0D, -2.0D, 12.0D, 16.0D, 0.0D, 14.0D), Block.box(11.0D, -1.0D, 16.0D, 12.0D, 0.0D, 19.0D), Block.box(1.0D, -16.0D, 16.0D, 16.0D, -14.0D, 31.0D), Block.box(1.0D, -14.0D, 22.0D, 3.0D, -9.0D, 31.0D), Block.box(1.0D, -9.0D, 16.0D, 3.0D, -4.0D, 31.0D), Block.box(1.0D, -4.0D, 16.0D, 16.0D, -2.0D, 23.0D), Block.box(3.0D, -7.0D, 16.0D, 16.0D, -4.0D, 23.0D), Block.box(3.0D, -14.0D, 29.0D, 16.0D, -4.0D, 31.0D), Block.box(12.0D, -2.0D, 16.0D, 14.0D, 0.0D, 20.0D), Block.box(14.0D, -2.0D, 18.0D, 16.0D, 0.0D, 20.0D), Block.box(1.0D, -4.0D, 27.0D, 16.0D, -2.0D, 31.0D), Block.box(1.0D, -4.0D, 23.0D, 7.0D, -2.0D, 27.0D), Block.box(3.0D, -7.0D, 23.0D, 7.0D, -4.0D, 29.0D), Block.box(7.0D, -7.0D, 27.0D, 15.0D, -4.0D, 29.0D), Block.box(15.0D, -4.0D, 23.0D, 16.0D, -2.0D, 27.0D), Block.box(15.0D, -7.0D, 23.0D, 16.0D, -4.0D, 29.0D), Block.box(7.0D, -7.0D, 23.0D, 15.0D, -6.0D, 27.0D), Block.box(18.0D, 0.0D, 12.0D, 20.0D, 15.0D, 16.0D), Block.box(16.0D, 0.0D, 12.0D, 18.0D, 15.0D, 14.0D), Block.box(19.0D, 15.0D, 11.0D, 21.0D, 16.0D, 16.0D), Block.box(16.0D, 15.0D, 11.0D, 19.0D, 16.0D, 13.0D), Block.box(16.0D, 0.0D, 2.0D, 30.0D, 6.0D, 12.0D), Block.box(20.0D, 0.0D, 12.0D, 30.0D, 6.0D, 16.0D), Block.box(20.0D, 6.0D, 12.0D, 29.0D, 14.0D, 16.0D), Block.box(16.0D, 6.0D, 3.0D, 29.0D, 14.0D, 12.0D), Block.box(21.0D, 14.0D, 5.0D, 27.0D, 16.0D, 11.0D), Block.box(20.0D, 0.0D, 16.0D, 30.0D, 6.0D, 20.0D), Block.box(20.0D, 6.0D, 16.0D, 29.0D, 14.0D, 20.0D), Block.box(17.0D, 10.0D, 20.0D, 18.0D, 11.0D, 28.0D), Block.box(18.0D, 0.0D, 16.0D, 20.0D, 15.0D, 20.0D), Block.box(16.0D, 0.0D, 18.0D, 18.0D, 15.0D, 20.0D), Block.box(19.0D, 15.0D, 16.0D, 21.0D, 16.0D, 21.0D), Block.box(16.0D, 15.0D, 19.0D, 19.0D, 16.0D, 21.0D), Block.box(18.0D, 0.0D, 20.0D, 30.0D, 6.0D, 30.0D), Block.box(19.0D, 6.0D, 20.0D, 29.0D, 14.0D, 29.0D), Block.box(21.0D, 14.0D, 21.0D, 27.0D, 16.0D, 27.0D), Block.box(16.0D, 10.0D, 28.0D, 19.0D, 11.0D, 29.0D), Block.box(11.0D, 0.0D, 13.0D, 12.0D, 5.0D, 16.0D), Block.box(3.0D, 0.0D, 3.0D, 9.0D, 3.0D, 13.0D), Block.box(12.0D, 0.0D, 12.0D, 14.0D, 15.0D, 16.0D), Block.box(14.0D, 0.0D, 12.0D, 16.0D, 15.0D, 14.0D), Block.box(3.0D, 10.0D, 3.0D, 16.0D, 14.0D, 12.0D), Block.box(3.0D, 10.0D, 12.0D, 12.0D, 14.0D, 13.0D), Block.box(11.0D, 15.0D, 11.0D, 13.0D, 16.0D, 16.0D), Block.box(13.0D, 15.0D, 11.0D, 16.0D, 16.0D, 13.0D), Block.box(5.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(11.0D, 10.0D, 13.0D, 12.0D, 11.0D, 16.0D), Block.box(11.0D, 0.0D, 16.0D, 12.0D, 5.0D, 19.0D), Block.box(14.0D, 0.0D, 18.0D, 16.0D, 15.0D, 20.0D), Block.box(13.0D, 15.0D, 19.0D, 16.0D, 16.0D, 21.0D), Block.box(12.0D, 0.0D, 16.0D, 14.0D, 15.0D, 20.0D), Block.box(11.0D, 15.0D, 16.0D, 13.0D, 16.0D, 21.0D), Block.box(11.0D, 10.0D, 20.0D, 12.0D, 11.0D, 28.0D), Block.box(13.0D, 10.0D, 20.0D, 14.0D, 11.0D, 28.0D), Block.box(15.0D, 10.0D, 20.0D, 16.0D, 11.0D, 28.0D), Block.box(11.0D, 10.0D, 16.0D, 12.0D, 11.0D, 20.0D), Block.box(11.0D, 10.0D, 28.0D, 16.0D, 11.0D, 29.0D), Block.box(10.0D, 11.0D, 21.0D, 15.0D, 14.0D, 24.0D), Block.box(12.0D, 5.0D, 22.0D, 13.0D, 11.0D, 23.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape TOP_FRONT_RIGHT_NORTH = Stream.of(Block.box(18.0D, -2.0D, 16.0D, 20.0D, 0.0D, 18.0D), Block.box(16.0D, -2.0D, 20.0D, 20.0D, 0.0D, 30.0D), Block.box(16.0D, -2.0D, 18.0D, 20.0D, 0.0D, 20.0D), Block.box(16.0D, -16.0D, 16.0D, 31.0D, -14.0D, 31.0D), Block.box(16.0D, -4.0D, 16.0D, 31.0D, -2.0D, 31.0D), Block.box(16.0D, -14.0D, 16.0D, 31.0D, -4.0D, 31.0D), Block.box(20.0D, -2.0D, 16.0D, 30.0D, 0.0D, 30.0D), Block.box(12.0D, -2.0D, 20.0D, 16.0D, 0.0D, 30.0D), Block.box(12.0D, -2.0D, 16.0D, 14.0D, 0.0D, 18.0D), Block.box(12.0D, -2.0D, 18.0D, 16.0D, 0.0D, 20.0D), Block.box(2.0D, -2.0D, 18.0D, 12.0D, 0.0D, 30.0D), Block.box(1.0D, -16.0D, 16.0D, 16.0D, -14.0D, 31.0D), Block.box(1.0D, -4.0D, 16.0D, 16.0D, -2.0D, 31.0D), Block.box(1.0D, -14.0D, 16.0D, 16.0D, -4.0D, 31.0D), Block.box(16.0D, -7.0D, 3.0D, 29.0D, -4.0D, 16.0D), Block.box(16.0D, -16.0D, 1.0D, 31.0D, -14.0D, 16.0D), Block.box(22.0D, -14.0D, 1.0D, 31.0D, -9.0D, 3.0D), Block.box(16.0D, -9.0D, 1.0D, 31.0D, -4.0D, 3.0D), Block.box(16.0D, -4.0D, 1.0D, 31.0D, -2.0D, 16.0D), Block.box(29.0D, -14.0D, 3.0D, 31.0D, -4.0D, 16.0D), Block.box(16.0D, -1.0D, 11.0D, 19.0D, 0.0D, 12.0D), Block.box(20.0D, -2.0D, 4.0D, 28.0D, -1.0D, 8.0D), Block.box(21.0D, -1.0D, 5.0D, 27.0D, 0.0D, 7.0D), Block.box(16.0D, -2.0D, 12.0D, 20.0D, 0.0D, 14.0D), Block.box(18.0D, -2.0D, 14.0D, 20.0D, 0.0D, 16.0D), Block.box(13.0D, -1.0D, 11.0D, 16.0D, 0.0D, 12.0D), Block.box(1.0D, -16.0D, 1.0D, 16.0D, -14.0D, 16.0D), Block.box(1.0D, -14.0D, 1.0D, 10.0D, -9.0D, 3.0D), Block.box(1.0D, -9.0D, 1.0D, 16.0D, -4.0D, 3.0D), Block.box(9.0D, -4.0D, 1.0D, 16.0D, -2.0D, 16.0D), Block.box(9.0D, -7.0D, 3.0D, 16.0D, -4.0D, 16.0D), Block.box(1.0D, -14.0D, 3.0D, 3.0D, -4.0D, 16.0D), Block.box(12.0D, -2.0D, 12.0D, 16.0D, 0.0D, 14.0D), Block.box(12.0D, -2.0D, 14.0D, 14.0D, 0.0D, 16.0D), Block.box(1.0D, -4.0D, 1.0D, 5.0D, -2.0D, 16.0D), Block.box(5.0D, -4.0D, 1.0D, 9.0D, -2.0D, 7.0D), Block.box(3.0D, -7.0D, 3.0D, 9.0D, -4.0D, 7.0D), Block.box(3.0D, -7.0D, 7.0D, 5.0D, -4.0D, 15.0D), Block.box(5.0D, -4.0D, 15.0D, 9.0D, -2.0D, 16.0D), Block.box(3.0D, -7.0D, 15.0D, 9.0D, -4.0D, 16.0D), Block.box(5.0D, -7.0D, 7.0D, 9.0D, -6.0D, 15.0D), Block.box(16.0D, 0.0D, 18.0D, 20.0D, 15.0D, 20.0D), Block.box(18.0D, 0.0D, 16.0D, 20.0D, 15.0D, 18.0D), Block.box(16.0D, 15.0D, 19.0D, 21.0D, 16.0D, 21.0D), Block.box(19.0D, 15.0D, 16.0D, 21.0D, 16.0D, 19.0D), Block.box(20.0D, 0.0D, 16.0D, 30.0D, 6.0D, 30.0D), Block.box(16.0D, 0.0D, 20.0D, 20.0D, 6.0D, 30.0D), Block.box(16.0D, 6.0D, 20.0D, 20.0D, 14.0D, 29.0D), Block.box(20.0D, 6.0D, 16.0D, 29.0D, 14.0D, 29.0D), Block.box(21.0D, 14.0D, 21.0D, 27.0D, 16.0D, 27.0D), Block.box(12.0D, 0.0D, 20.0D, 16.0D, 6.0D, 30.0D), Block.box(12.0D, 6.0D, 20.0D, 16.0D, 14.0D, 29.0D), Block.box(4.0D, 10.0D, 17.0D, 12.0D, 11.0D, 18.0D), Block.box(12.0D, 0.0D, 18.0D, 16.0D, 15.0D, 20.0D), Block.box(12.0D, 0.0D, 16.0D, 14.0D, 15.0D, 18.0D), Block.box(11.0D, 15.0D, 19.0D, 16.0D, 16.0D, 21.0D), Block.box(11.0D, 15.0D, 16.0D, 13.0D, 16.0D, 19.0D), Block.box(2.0D, 0.0D, 18.0D, 12.0D, 6.0D, 30.0D), Block.box(3.0D, 6.0D, 19.0D, 12.0D, 14.0D, 29.0D), Block.box(5.0D, 14.0D, 21.0D, 11.0D, 16.0D, 27.0D), Block.box(3.0D, 10.0D, 16.0D, 4.0D, 11.0D, 19.0D), Block.box(16.0D, 0.0D, 11.0D, 19.0D, 5.0D, 12.0D), Block.box(19.0D, 0.0D, 3.0D, 29.0D, 3.0D, 9.0D), Block.box(16.0D, 0.0D, 12.0D, 20.0D, 15.0D, 14.0D), Block.box(18.0D, 0.0D, 14.0D, 20.0D, 15.0D, 16.0D), Block.box(20.0D, 10.0D, 3.0D, 29.0D, 14.0D, 16.0D), Block.box(19.0D, 10.0D, 3.0D, 20.0D, 14.0D, 12.0D), Block.box(16.0D, 15.0D, 11.0D, 21.0D, 16.0D, 13.0D), Block.box(19.0D, 15.0D, 13.0D, 21.0D, 16.0D, 16.0D), Block.box(21.0D, 14.0D, 5.0D, 27.0D, 16.0D, 11.0D), Block.box(16.0D, 10.0D, 11.0D, 19.0D, 11.0D, 12.0D), Block.box(13.0D, 0.0D, 11.0D, 16.0D, 5.0D, 12.0D), Block.box(12.0D, 0.0D, 14.0D, 14.0D, 15.0D, 16.0D), Block.box(11.0D, 15.0D, 13.0D, 13.0D, 16.0D, 16.0D), Block.box(12.0D, 0.0D, 12.0D, 16.0D, 15.0D, 14.0D), Block.box(11.0D, 15.0D, 11.0D, 16.0D, 16.0D, 13.0D), Block.box(4.0D, 10.0D, 11.0D, 12.0D, 11.0D, 12.0D), Block.box(4.0D, 10.0D, 13.0D, 12.0D, 11.0D, 14.0D), Block.box(4.0D, 10.0D, 15.0D, 12.0D, 11.0D, 16.0D), Block.box(12.0D, 10.0D, 11.0D, 16.0D, 11.0D, 12.0D), Block.box(3.0D, 10.0D, 11.0D, 4.0D, 11.0D, 16.0D), Block.box(8.0D, 11.0D, 10.0D, 11.0D, 14.0D, 15.0D), Block.box(9.0D, 5.0D, 12.0D, 10.0D, 11.0D, 13.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_FRONT_RIGHT_EAST = Stream.of(Block.box(-2.0D, -2.0D, 18.0D, 0.0D, 0.0D, 20.0D), Block.box(-14.0D, -2.0D, 16.0D, -4.0D, 0.0D, 20.0D), Block.box(-4.0D, -2.0D, 16.0D, -2.0D, 0.0D, 20.0D), Block.box(-15.0D, -16.0D, 16.0D, 0.0D, -14.0D, 31.0D), Block.box(-15.0D, -4.0D, 16.0D, 0.0D, -2.0D, 31.0D), Block.box(-15.0D, -14.0D, 16.0D, 0.0D, -4.0D, 31.0D), Block.box(-14.0D, -2.0D, 20.0D, 0.0D, 0.0D, 30.0D), Block.box(-14.0D, -2.0D, 12.0D, -4.0D, 0.0D, 16.0D), Block.box(-2.0D, -2.0D, 12.0D, 0.0D, 0.0D, 14.0D), Block.box(-4.0D, -2.0D, 12.0D, -2.0D, 0.0D, 16.0D), Block.box(-14.0D, -2.0D, 2.0D, -2.0D, 0.0D, 12.0D), Block.box(-15.0D, -16.0D, 1.0D, 0.0D, -14.0D, 16.0D), Block.box(-15.0D, -4.0D, 1.0D, 0.0D, -2.0D, 16.0D), Block.box(-15.0D, -14.0D, 1.0D, 0.0D, -4.0D, 16.0D), Block.box(0.0D, -7.0D, 16.0D, 13.0D, -4.0D, 29.0D), Block.box(0.0D, -16.0D, 16.0D, 15.0D, -14.0D, 31.0D), Block.box(13.0D, -14.0D, 22.0D, 15.0D, -9.0D, 31.0D), Block.box(13.0D, -9.0D, 16.0D, 15.0D, -4.0D, 31.0D), Block.box(0.0D, -4.0D, 16.0D, 15.0D, -2.0D, 31.0D), Block.box(0.0D, -14.0D, 29.0D, 13.0D, -4.0D, 31.0D), Block.box(4.0D, -1.0D, 16.0D, 5.0D, 0.0D, 19.0D), Block.box(8.0D, -2.0D, 20.0D, 12.0D, -1.0D, 28.0D), Block.box(9.0D, -1.0D, 21.0D, 11.0D, 0.0D, 27.0D), Block.box(2.0D, -2.0D, 16.0D, 4.0D, 0.0D, 20.0D), Block.box(0.0D, -2.0D, 18.0D, 2.0D, 0.0D, 20.0D), Block.box(4.0D, -1.0D, 13.0D, 5.0D, 0.0D, 16.0D), Block.box(0.0D, -16.0D, 1.0D, 15.0D, -14.0D, 16.0D), Block.box(13.0D, -14.0D, 1.0D, 15.0D, -9.0D, 10.0D), Block.box(13.0D, -9.0D, 1.0D, 15.0D, -4.0D, 16.0D), Block.box(0.0D, -4.0D, 9.0D, 15.0D, -2.0D, 16.0D), Block.box(0.0D, -7.0D, 9.0D, 13.0D, -4.0D, 16.0D), Block.box(0.0D, -14.0D, 1.0D, 13.0D, -4.0D, 3.0D), Block.box(2.0D, -2.0D, 12.0D, 4.0D, 0.0D, 16.0D), Block.box(0.0D, -2.0D, 12.0D, 2.0D, 0.0D, 14.0D), Block.box(0.0D, -4.0D, 1.0D, 15.0D, -2.0D, 5.0D), Block.box(9.0D, -4.0D, 5.0D, 15.0D, -2.0D, 9.0D), Block.box(9.0D, -7.0D, 3.0D, 13.0D, -4.0D, 9.0D), Block.box(1.0D, -7.0D, 3.0D, 9.0D, -4.0D, 5.0D), Block.box(0.0D, -4.0D, 5.0D, 1.0D, -2.0D, 9.0D), Block.box(0.0D, -7.0D, 3.0D, 1.0D, -4.0D, 9.0D), Block.box(1.0D, -7.0D, 5.0D, 9.0D, -6.0D, 9.0D), Block.box(-4.0D, 0.0D, 16.0D, -2.0D, 15.0D, 20.0D), Block.box(-2.0D, 0.0D, 18.0D, 0.0D, 15.0D, 20.0D), Block.box(-5.0D, 15.0D, 16.0D, -3.0D, 16.0D, 21.0D), Block.box(-3.0D, 15.0D, 19.0D, 0.0D, 16.0D, 21.0D), Block.box(-14.0D, 0.0D, 20.0D, 0.0D, 6.0D, 30.0D), Block.box(-14.0D, 0.0D, 16.0D, -4.0D, 6.0D, 20.0D), Block.box(-13.0D, 6.0D, 16.0D, -4.0D, 14.0D, 20.0D), Block.box(-13.0D, 6.0D, 20.0D, 0.0D, 14.0D, 29.0D), Block.box(-11.0D, 14.0D, 21.0D, -5.0D, 16.0D, 27.0D), Block.box(-14.0D, 0.0D, 12.0D, -4.0D, 6.0D, 16.0D), Block.box(-13.0D, 6.0D, 12.0D, -4.0D, 14.0D, 16.0D), Block.box(-2.0D, 10.0D, 4.0D, -1.0D, 11.0D, 12.0D), Block.box(-4.0D, 0.0D, 12.0D, -2.0D, 15.0D, 16.0D), Block.box(-2.0D, 0.0D, 12.0D, 0.0D, 15.0D, 14.0D), Block.box(-5.0D, 15.0D, 11.0D, -3.0D, 16.0D, 16.0D), Block.box(-3.0D, 15.0D, 11.0D, 0.0D, 16.0D, 13.0D), Block.box(-14.0D, 0.0D, 2.0D, -2.0D, 6.0D, 12.0D), Block.box(-13.0D, 6.0D, 3.0D, -3.0D, 14.0D, 12.0D), Block.box(-11.0D, 14.0D, 5.0D, -5.0D, 16.0D, 11.0D), Block.box(-3.0D, 10.0D, 3.0D, 0.0D, 11.0D, 4.0D), Block.box(4.0D, 0.0D, 16.0D, 5.0D, 5.0D, 19.0D), Block.box(7.0D, 0.0D, 19.0D, 13.0D, 3.0D, 29.0D), Block.box(2.0D, 0.0D, 16.0D, 4.0D, 15.0D, 20.0D), Block.box(0.0D, 0.0D, 18.0D, 2.0D, 15.0D, 20.0D), Block.box(0.0D, 10.0D, 20.0D, 13.0D, 14.0D, 29.0D), Block.box(4.0D, 10.0D, 19.0D, 13.0D, 14.0D, 20.0D), Block.box(3.0D, 15.0D, 16.0D, 5.0D, 16.0D, 21.0D), Block.box(0.0D, 15.0D, 19.0D, 3.0D, 16.0D, 21.0D), Block.box(5.0D, 14.0D, 21.0D, 11.0D, 16.0D, 27.0D), Block.box(4.0D, 10.0D, 16.0D, 5.0D, 11.0D, 19.0D), Block.box(4.0D, 0.0D, 13.0D, 5.0D, 5.0D, 16.0D), Block.box(0.0D, 0.0D, 12.0D, 2.0D, 15.0D, 14.0D), Block.box(0.0D, 15.0D, 11.0D, 3.0D, 16.0D, 13.0D), Block.box(2.0D, 0.0D, 12.0D, 4.0D, 15.0D, 16.0D), Block.box(3.0D, 15.0D, 11.0D, 5.0D, 16.0D, 16.0D), Block.box(4.0D, 10.0D, 4.0D, 5.0D, 11.0D, 12.0D), Block.box(2.0D, 10.0D, 4.0D, 3.0D, 11.0D, 12.0D), Block.box(0.0D, 10.0D, 4.0D, 1.0D, 11.0D, 12.0D), Block.box(4.0D, 10.0D, 12.0D, 5.0D, 11.0D, 16.0D), Block.box(0.0D, 10.0D, 3.0D, 5.0D, 11.0D, 4.0D), Block.box(1.0D, 11.0D, 8.0D, 6.0D, 14.0D, 11.0D), Block.box(3.0D, 5.0D, 9.0D, 4.0D, 11.0D, 10.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_FRONT_RIGHT_SOUTH = Stream.of(Block.box(-4.0D, -2.0D, -2.0D, -2.0D, 0.0D, 0.0D), Block.box(-4.0D, -2.0D, -14.0D, 0.0D, 0.0D, -4.0D), Block.box(-4.0D, -2.0D, -4.0D, 0.0D, 0.0D, -2.0D), Block.box(-15.0D, -16.0D, -15.0D, 0.0D, -14.0D, 0.0D), Block.box(-15.0D, -4.0D, -15.0D, 0.0D, -2.0D, 0.0D), Block.box(-15.0D, -14.0D, -15.0D, 0.0D, -4.0D, 0.0D), Block.box(-14.0D, -2.0D, -14.0D, -4.0D, 0.0D, 0.0D), Block.box(0.0D, -2.0D, -14.0D, 4.0D, 0.0D, -4.0D), Block.box(2.0D, -2.0D, -2.0D, 4.0D, 0.0D, 0.0D), Block.box(0.0D, -2.0D, -4.0D, 4.0D, 0.0D, -2.0D), Block.box(4.0D, -2.0D, -14.0D, 14.0D, 0.0D, -2.0D), Block.box(0.0D, -16.0D, -15.0D, 15.0D, -14.0D, 0.0D), Block.box(0.0D, -4.0D, -15.0D, 15.0D, -2.0D, 0.0D), Block.box(0.0D, -14.0D, -15.0D, 15.0D, -4.0D, 0.0D), Block.box(-13.0D, -7.0D, 0.0D, 0.0D, -4.0D, 13.0D), Block.box(-15.0D, -16.0D, 0.0D, 0.0D, -14.0D, 15.0D), Block.box(-15.0D, -14.0D, 13.0D, -6.0D, -9.0D, 15.0D), Block.box(-15.0D, -9.0D, 13.0D, 0.0D, -4.0D, 15.0D), Block.box(-15.0D, -4.0D, 0.0D, 0.0D, -2.0D, 15.0D), Block.box(-15.0D, -14.0D, 0.0D, -13.0D, -4.0D, 13.0D), Block.box(-3.0D, -1.0D, 4.0D, 0.0D, 0.0D, 5.0D), Block.box(-12.0D, -2.0D, 8.0D, -4.0D, -1.0D, 12.0D), Block.box(-11.0D, -1.0D, 9.0D, -5.0D, 0.0D, 11.0D), Block.box(-4.0D, -2.0D, 2.0D, 0.0D, 0.0D, 4.0D), Block.box(-4.0D, -2.0D, 0.0D, -2.0D, 0.0D, 2.0D), Block.box(0.0D, -1.0D, 4.0D, 3.0D, 0.0D, 5.0D), Block.box(0.0D, -16.0D, 0.0D, 15.0D, -14.0D, 15.0D), Block.box(6.0D, -14.0D, 13.0D, 15.0D, -9.0D, 15.0D), Block.box(0.0D, -9.0D, 13.0D, 15.0D, -4.0D, 15.0D), Block.box(0.0D, -4.0D, 0.0D, 7.0D, -2.0D, 15.0D), Block.box(0.0D, -7.0D, 0.0D, 7.0D, -4.0D, 13.0D), Block.box(13.0D, -14.0D, 0.0D, 15.0D, -4.0D, 13.0D), Block.box(0.0D, -2.0D, 2.0D, 4.0D, 0.0D, 4.0D), Block.box(2.0D, -2.0D, 0.0D, 4.0D, 0.0D, 2.0D), Block.box(11.0D, -4.0D, 0.0D, 15.0D, -2.0D, 15.0D), Block.box(7.0D, -4.0D, 9.0D, 11.0D, -2.0D, 15.0D), Block.box(7.0D, -7.0D, 9.0D, 13.0D, -4.0D, 13.0D), Block.box(11.0D, -7.0D, 1.0D, 13.0D, -4.0D, 9.0D), Block.box(7.0D, -4.0D, 0.0D, 11.0D, -2.0D, 1.0D), Block.box(7.0D, -7.0D, 0.0D, 13.0D, -4.0D, 1.0D), Block.box(7.0D, -7.0D, 1.0D, 11.0D, -6.0D, 9.0D), Block.box(-4.0D, 0.0D, -4.0D, 0.0D, 15.0D, -2.0D), Block.box(-4.0D, 0.0D, -2.0D, -2.0D, 15.0D, 0.0D), Block.box(-5.0D, 15.0D, -5.0D, 0.0D, 16.0D, -3.0D), Block.box(-5.0D, 15.0D, -3.0D, -3.0D, 16.0D, 0.0D), Block.box(-14.0D, 0.0D, -14.0D, -4.0D, 6.0D, 0.0D), Block.box(-4.0D, 0.0D, -14.0D, 0.0D, 6.0D, -4.0D), Block.box(-4.0D, 6.0D, -13.0D, 0.0D, 14.0D, -4.0D), Block.box(-13.0D, 6.0D, -13.0D, -4.0D, 14.0D, 0.0D), Block.box(-11.0D, 14.0D, -11.0D, -5.0D, 16.0D, -5.0D), Block.box(0.0D, 0.0D, -14.0D, 4.0D, 6.0D, -4.0D), Block.box(0.0D, 6.0D, -13.0D, 4.0D, 14.0D, -4.0D), Block.box(4.0D, 10.0D, -2.0D, 12.0D, 11.0D, -1.0D), Block.box(0.0D, 0.0D, -4.0D, 4.0D, 15.0D, -2.0D), Block.box(2.0D, 0.0D, -2.0D, 4.0D, 15.0D, 0.0D), Block.box(0.0D, 15.0D, -5.0D, 5.0D, 16.0D, -3.0D), Block.box(3.0D, 15.0D, -3.0D, 5.0D, 16.0D, 0.0D), Block.box(4.0D, 0.0D, -14.0D, 14.0D, 6.0D, -2.0D), Block.box(4.0D, 6.0D, -13.0D, 13.0D, 14.0D, -3.0D), Block.box(5.0D, 14.0D, -11.0D, 11.0D, 16.0D, -5.0D), Block.box(12.0D, 10.0D, -3.0D, 13.0D, 11.0D, 0.0D), Block.box(-3.0D, 0.0D, 4.0D, 0.0D, 5.0D, 5.0D), Block.box(-13.0D, 0.0D, 7.0D, -3.0D, 3.0D, 13.0D), Block.box(-4.0D, 0.0D, 2.0D, 0.0D, 15.0D, 4.0D), Block.box(-4.0D, 0.0D, 0.0D, -2.0D, 15.0D, 2.0D), Block.box(-13.0D, 10.0D, 0.0D, -4.0D, 14.0D, 13.0D), Block.box(-4.0D, 10.0D, 4.0D, -3.0D, 14.0D, 13.0D), Block.box(-5.0D, 15.0D, 3.0D, 0.0D, 16.0D, 5.0D), Block.box(-5.0D, 15.0D, 0.0D, -3.0D, 16.0D, 3.0D), Block.box(-11.0D, 14.0D, 5.0D, -5.0D, 16.0D, 11.0D), Block.box(-3.0D, 10.0D, 4.0D, 0.0D, 11.0D, 5.0D), Block.box(0.0D, 0.0D, 4.0D, 3.0D, 5.0D, 5.0D), Block.box(2.0D, 0.0D, 0.0D, 4.0D, 15.0D, 2.0D), Block.box(3.0D, 15.0D, 0.0D, 5.0D, 16.0D, 3.0D), Block.box(0.0D, 0.0D, 2.0D, 4.0D, 15.0D, 4.0D), Block.box(0.0D, 15.0D, 3.0D, 5.0D, 16.0D, 5.0D), Block.box(4.0D, 10.0D, 4.0D, 12.0D, 11.0D, 5.0D), Block.box(4.0D, 10.0D, 2.0D, 12.0D, 11.0D, 3.0D), Block.box(4.0D, 10.0D, 0.0D, 12.0D, 11.0D, 1.0D), Block.box(0.0D, 10.0D, 4.0D, 4.0D, 11.0D, 5.0D), Block.box(12.0D, 10.0D, 0.0D, 13.0D, 11.0D, 5.0D), Block.box(5.0D, 11.0D, 1.0D, 8.0D, 14.0D, 6.0D), Block.box(6.0D, 5.0D, 3.0D, 7.0D, 11.0D, 4.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_FRONT_RIGHT_WEST = Stream.of(Block.box(16.0D, -2.0D, -4.0D, 18.0D, 0.0D, -2.0D), Block.box(20.0D, -2.0D, -4.0D, 30.0D, 0.0D, 0.0D), Block.box(18.0D, -2.0D, -4.0D, 20.0D, 0.0D, 0.0D), Block.box(16.0D, -16.0D, -15.0D, 31.0D, -14.0D, 0.0D), Block.box(16.0D, -4.0D, -15.0D, 31.0D, -2.0D, 0.0D), Block.box(16.0D, -14.0D, -15.0D, 31.0D, -4.0D, 0.0D), Block.box(16.0D, -2.0D, -14.0D, 30.0D, 0.0D, -4.0D), Block.box(20.0D, -2.0D, 0.0D, 30.0D, 0.0D, 4.0D), Block.box(16.0D, -2.0D, 2.0D, 18.0D, 0.0D, 4.0D), Block.box(18.0D, -2.0D, 0.0D, 20.0D, 0.0D, 4.0D), Block.box(18.0D, -2.0D, 4.0D, 30.0D, 0.0D, 14.0D), Block.box(16.0D, -16.0D, 0.0D, 31.0D, -14.0D, 15.0D), Block.box(16.0D, -4.0D, 0.0D, 31.0D, -2.0D, 15.0D), Block.box(16.0D, -14.0D, 0.0D, 31.0D, -4.0D, 15.0D), Block.box(3.0D, -7.0D, -13.0D, 16.0D, -4.0D, 0.0D), Block.box(1.0D, -16.0D, -15.0D, 16.0D, -14.0D, 0.0D), Block.box(1.0D, -14.0D, -15.0D, 3.0D, -9.0D, -6.0D), Block.box(1.0D, -9.0D, -15.0D, 3.0D, -4.0D, 0.0D), Block.box(1.0D, -4.0D, -15.0D, 16.0D, -2.0D, 0.0D), Block.box(3.0D, -14.0D, -15.0D, 16.0D, -4.0D, -13.0D), Block.box(11.0D, -1.0D, -3.0D, 12.0D, 0.0D, 0.0D), Block.box(4.0D, -2.0D, -12.0D, 8.0D, -1.0D, -4.0D), Block.box(5.0D, -1.0D, -11.0D, 7.0D, 0.0D, -5.0D), Block.box(12.0D, -2.0D, -4.0D, 14.0D, 0.0D, 0.0D), Block.box(14.0D, -2.0D, -4.0D, 16.0D, 0.0D, -2.0D), Block.box(11.0D, -1.0D, 0.0D, 12.0D, 0.0D, 3.0D), Block.box(1.0D, -16.0D, 0.0D, 16.0D, -14.0D, 15.0D), Block.box(1.0D, -14.0D, 6.0D, 3.0D, -9.0D, 15.0D), Block.box(1.0D, -9.0D, 0.0D, 3.0D, -4.0D, 15.0D), Block.box(1.0D, -4.0D, 0.0D, 16.0D, -2.0D, 7.0D), Block.box(3.0D, -7.0D, 0.0D, 16.0D, -4.0D, 7.0D), Block.box(3.0D, -14.0D, 13.0D, 16.0D, -4.0D, 15.0D), Block.box(12.0D, -2.0D, 0.0D, 14.0D, 0.0D, 4.0D), Block.box(14.0D, -2.0D, 2.0D, 16.0D, 0.0D, 4.0D), Block.box(1.0D, -4.0D, 11.0D, 16.0D, -2.0D, 15.0D), Block.box(1.0D, -4.0D, 7.0D, 7.0D, -2.0D, 11.0D), Block.box(3.0D, -7.0D, 7.0D, 7.0D, -4.0D, 13.0D), Block.box(7.0D, -7.0D, 11.0D, 15.0D, -4.0D, 13.0D), Block.box(15.0D, -4.0D, 7.0D, 16.0D, -2.0D, 11.0D), Block.box(15.0D, -7.0D, 7.0D, 16.0D, -4.0D, 13.0D), Block.box(7.0D, -7.0D, 7.0D, 15.0D, -6.0D, 11.0D), Block.box(18.0D, 0.0D, -4.0D, 20.0D, 15.0D, 0.0D), Block.box(16.0D, 0.0D, -4.0D, 18.0D, 15.0D, -2.0D), Block.box(19.0D, 15.0D, -5.0D, 21.0D, 16.0D, 0.0D), Block.box(16.0D, 15.0D, -5.0D, 19.0D, 16.0D, -3.0D), Block.box(16.0D, 0.0D, -14.0D, 30.0D, 6.0D, -4.0D), Block.box(20.0D, 0.0D, -4.0D, 30.0D, 6.0D, 0.0D), Block.box(20.0D, 6.0D, -4.0D, 29.0D, 14.0D, 0.0D), Block.box(16.0D, 6.0D, -13.0D, 29.0D, 14.0D, -4.0D), Block.box(21.0D, 14.0D, -11.0D, 27.0D, 16.0D, -5.0D), Block.box(20.0D, 0.0D, 0.0D, 30.0D, 6.0D, 4.0D), Block.box(20.0D, 6.0D, 0.0D, 29.0D, 14.0D, 4.0D), Block.box(17.0D, 10.0D, 4.0D, 18.0D, 11.0D, 12.0D), Block.box(18.0D, 0.0D, 0.0D, 20.0D, 15.0D, 4.0D), Block.box(16.0D, 0.0D, 2.0D, 18.0D, 15.0D, 4.0D), Block.box(19.0D, 15.0D, 0.0D, 21.0D, 16.0D, 5.0D), Block.box(16.0D, 15.0D, 3.0D, 19.0D, 16.0D, 5.0D), Block.box(18.0D, 0.0D, 4.0D, 30.0D, 6.0D, 14.0D), Block.box(19.0D, 6.0D, 4.0D, 29.0D, 14.0D, 13.0D), Block.box(21.0D, 14.0D, 5.0D, 27.0D, 16.0D, 11.0D), Block.box(16.0D, 10.0D, 12.0D, 19.0D, 11.0D, 13.0D), Block.box(11.0D, 0.0D, -3.0D, 12.0D, 5.0D, 0.0D), Block.box(3.0D, 0.0D, -13.0D, 9.0D, 3.0D, -3.0D), Block.box(12.0D, 0.0D, -4.0D, 14.0D, 15.0D, 0.0D), Block.box(14.0D, 0.0D, -4.0D, 16.0D, 15.0D, -2.0D), Block.box(3.0D, 10.0D, -13.0D, 16.0D, 14.0D, -4.0D), Block.box(3.0D, 10.0D, -4.0D, 12.0D, 14.0D, -3.0D), Block.box(11.0D, 15.0D, -5.0D, 13.0D, 16.0D, 0.0D), Block.box(13.0D, 15.0D, -5.0D, 16.0D, 16.0D, -3.0D), Block.box(5.0D, 14.0D, -11.0D, 11.0D, 16.0D, -5.0D), Block.box(11.0D, 10.0D, -3.0D, 12.0D, 11.0D, 0.0D), Block.box(11.0D, 0.0D, 0.0D, 12.0D, 5.0D, 3.0D), Block.box(14.0D, 0.0D, 2.0D, 16.0D, 15.0D, 4.0D), Block.box(13.0D, 15.0D, 3.0D, 16.0D, 16.0D, 5.0D), Block.box(12.0D, 0.0D, 0.0D, 14.0D, 15.0D, 4.0D), Block.box(11.0D, 15.0D, 0.0D, 13.0D, 16.0D, 5.0D), Block.box(11.0D, 10.0D, 4.0D, 12.0D, 11.0D, 12.0D), Block.box(13.0D, 10.0D, 4.0D, 14.0D, 11.0D, 12.0D), Block.box(15.0D, 10.0D, 4.0D, 16.0D, 11.0D, 12.0D), Block.box(11.0D, 10.0D, 0.0D, 12.0D, 11.0D, 4.0D), Block.box(11.0D, 10.0D, 12.0D, 16.0D, 11.0D, 13.0D), Block.box(10.0D, 11.0D, 5.0D, 15.0D, 14.0D, 8.0D), Block.box(12.0D, 5.0D, 6.0D, 13.0D, 11.0D, 7.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
	}

	public static class GrinderShapes {
		public static final VoxelShape LEFT_NORTH = Stream.of(Block.box(0.0D, 0.0D, 0.0D, 16.0D, 1.0D, 16.0D), Block.box(0.0D, 1.0D, 0.0D, 15.0D, 3.0D, 16.0D), Block.box(15.0D, 1.0D, 1.0D, 16.0D, 3.0D, 15.0D), Block.box(15.0D, 1.0D, 15.0D, 16.0D, 3.0D, 16.0D), Block.box(15.0D, 1.0D, 0.0D, 16.0D, 3.0D, 1.0D), Block.box(0.0D, 3.0D, 0.0D, 16.0D, 4.0D, 16.0D), Block.box(3.0D, 4.0D, 4.0D, 13.0D, 5.0D, 12.0D), Block.box(13.0D, 4.0D, 3.0D, 15.0D, 12.0D, 13.0D), Block.box(1.0D, 4.0D, 3.0D, 3.0D, 10.0D, 13.0D), Block.box(1.0D, 10.0D, 3.0D, 3.0D, 12.0D, 6.0D), Block.box(1.0D, 10.0D, 10.0D, 3.0D, 12.0D, 13.0D), Block.box(3.0D, 4.0D, 13.0D, 13.0D, 12.0D, 15.0D), Block.box(3.0D, 4.0D, 3.0D, 4.0D, 12.0D, 4.0D), Block.box(2.0D, 4.0D, 2.0D, 3.0D, 12.0D, 3.0D), Block.box(13.0D, 4.0D, 2.0D, 14.0D, 12.0D, 3.0D), Block.box(12.0D, 4.0D, 3.0D, 13.0D, 12.0D, 4.0D), Block.box(13.0D, 4.0D, 13.0D, 14.0D, 12.0D, 14.0D), Block.box(12.0D, 4.0D, 12.0D, 13.0D, 12.0D, 13.0D), Block.box(3.0D, 4.0D, 12.0D, 4.0D, 12.0D, 13.0D), Block.box(2.0D, 4.0D, 13.0D, 3.0D, 12.0D, 14.0D), Block.box(4.0D, 4.0D, 3.0D, 12.0D, 5.0D, 4.0D), Block.box(4.0D, 4.0D, 12.0D, 12.0D, 5.0D, 13.0D), Block.box(3.0D, 4.0D, 1.0D, 13.0D, 12.0D, 3.0D), Block.box(-16.0D, 0.0D, 0.0D, 0.0D, 1.0D, 16.0D), Block.box(-15.0D, 1.0D, 0.0D, 0.0D, 3.0D, 16.0D), Block.box(-16.0D, 1.0D, 1.0D, -15.0D, 3.0D, 15.0D), Block.box(-16.0D, 1.0D, 0.0D, -15.0D, 3.0D, 1.0D), Block.box(-16.0D, 1.0D, 15.0D, -15.0D, 3.0D, 16.0D), Block.box(-16.0D, 3.0D, 0.0D, -11.0D, 4.0D, 16.0D), Block.box(-15.0D, 4.0D, 1.0D, -1.0D, 5.0D, 11.0D), Block.box(-14.0D, 4.0D, 11.0D, -2.0D, 11.0D, 15.0D), Block.box(-2.0D, 4.0D, 11.0D, -1.0D, 5.0D, 13.0D), Block.box(-15.0D, 4.0D, 11.0D, -14.0D, 5.0D, 13.0D), Block.box(-5.0D, 3.0D, 0.0D, 0.0D, 4.0D, 16.0D), Block.box(-11.0D, 3.0D, 0.0D, -5.0D, 4.0D, 15.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape LEFT_EAST = Stream.of(Block.box(0.0D, 0.0D, 0.0D, 16.0D, 1.0D, 16.0D), Block.box(0.0D, 1.0D, 0.0D, 16.0D, 3.0D, 15.0D), Block.box(1.0D, 1.0D, 15.0D, 15.0D, 3.0D, 16.0D), Block.box(0.0D, 1.0D, 15.0D, 1.0D, 3.0D, 16.0D), Block.box(15.0D, 1.0D, 15.0D, 16.0D, 3.0D, 16.0D), Block.box(0.0D, 3.0D, 0.0D, 16.0D, 4.0D, 16.0D), Block.box(4.0D, 4.0D, 3.0D, 12.0D, 5.0D, 13.0D), Block.box(3.0D, 4.0D, 13.0D, 13.0D, 12.0D, 15.0D), Block.box(3.0D, 4.0D, 1.0D, 13.0D, 10.0D, 3.0D), Block.box(10.0D, 10.0D, 1.0D, 13.0D, 12.0D, 3.0D), Block.box(3.0D, 10.0D, 1.0D, 6.0D, 12.0D, 3.0D), Block.box(1.0D, 4.0D, 3.0D, 3.0D, 12.0D, 13.0D), Block.box(12.0D, 4.0D, 3.0D, 13.0D, 12.0D, 4.0D), Block.box(13.0D, 4.0D, 2.0D, 14.0D, 12.0D, 3.0D), Block.box(13.0D, 4.0D, 13.0D, 14.0D, 12.0D, 14.0D), Block.box(12.0D, 4.0D, 12.0D, 13.0D, 12.0D, 13.0D), Block.box(2.0D, 4.0D, 13.0D, 3.0D, 12.0D, 14.0D), Block.box(3.0D, 4.0D, 12.0D, 4.0D, 12.0D, 13.0D), Block.box(3.0D, 4.0D, 3.0D, 4.0D, 12.0D, 4.0D), Block.box(2.0D, 4.0D, 2.0D, 3.0D, 12.0D, 3.0D), Block.box(12.0D, 4.0D, 4.0D, 13.0D, 5.0D, 12.0D), Block.box(3.0D, 4.0D, 4.0D, 4.0D, 5.0D, 12.0D), Block.box(13.0D, 4.0D, 3.0D, 15.0D, 12.0D, 13.0D), Block.box(0.0D, 0.0D, -16.0D, 16.0D, 1.0D, 0.0D), Block.box(0.0D, 1.0D, -15.0D, 16.0D, 3.0D, 0.0D), Block.box(1.0D, 1.0D, -16.0D, 15.0D, 3.0D, -15.0D), Block.box(15.0D, 1.0D, -16.0D, 16.0D, 3.0D, -15.0D), Block.box(0.0D, 1.0D, -16.0D, 1.0D, 3.0D, -15.0D), Block.box(0.0D, 3.0D, -16.0D, 16.0D, 4.0D, -11.0D), Block.box(5.0D, 4.0D, -15.0D, 15.0D, 5.0D, -1.0D), Block.box(1.0D, 4.0D, -14.0D, 5.0D, 11.0D, -2.0D), Block.box(3.0D, 4.0D, -2.0D, 5.0D, 5.0D, -1.0D), Block.box(3.0D, 4.0D, -15.0D, 5.0D, 5.0D, -14.0D), Block.box(0.0D, 3.0D, -5.0D, 16.0D, 4.0D, 0.0D), Block.box(1.0D, 3.0D, -11.0D, 16.0D, 4.0D, -5.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape LEFT_SOUTH = Stream.of(Block.box(0.0D, 0.0D, 0.0D, 16.0D, 1.0D, 16.0D), Block.box(1.0D, 1.0D, 0.0D, 16.0D, 3.0D, 16.0D), Block.box(0.0D, 1.0D, 1.0D, 1.0D, 3.0D, 15.0D), Block.box(0.0D, 1.0D, 0.0D, 1.0D, 3.0D, 1.0D), Block.box(0.0D, 1.0D, 15.0D, 1.0D, 3.0D, 16.0D), Block.box(0.0D, 3.0D, 0.0D, 16.0D, 4.0D, 16.0D), Block.box(3.0D, 4.0D, 4.0D, 13.0D, 5.0D, 12.0D), Block.box(1.0D, 4.0D, 3.0D, 3.0D, 12.0D, 13.0D), Block.box(13.0D, 4.0D, 3.0D, 15.0D, 10.0D, 13.0D), Block.box(13.0D, 10.0D, 10.0D, 15.0D, 12.0D, 13.0D), Block.box(13.0D, 10.0D, 3.0D, 15.0D, 12.0D, 6.0D), Block.box(3.0D, 4.0D, 1.0D, 13.0D, 12.0D, 3.0D), Block.box(12.0D, 4.0D, 12.0D, 13.0D, 12.0D, 13.0D), Block.box(13.0D, 4.0D, 13.0D, 14.0D, 12.0D, 14.0D), Block.box(2.0D, 4.0D, 13.0D, 3.0D, 12.0D, 14.0D), Block.box(3.0D, 4.0D, 12.0D, 4.0D, 12.0D, 13.0D), Block.box(2.0D, 4.0D, 2.0D, 3.0D, 12.0D, 3.0D), Block.box(3.0D, 4.0D, 3.0D, 4.0D, 12.0D, 4.0D), Block.box(12.0D, 4.0D, 3.0D, 13.0D, 12.0D, 4.0D), Block.box(13.0D, 4.0D, 2.0D, 14.0D, 12.0D, 3.0D), Block.box(4.0D, 4.0D, 12.0D, 12.0D, 5.0D, 13.0D), Block.box(4.0D, 4.0D, 3.0D, 12.0D, 5.0D, 4.0D), Block.box(3.0D, 4.0D, 13.0D, 13.0D, 12.0D, 15.0D), Block.box(16.0D, 0.0D, 0.0D, 32.0D, 1.0D, 16.0D), Block.box(16.0D, 1.0D, 0.0D, 31.0D, 3.0D, 16.0D), Block.box(31.0D, 1.0D, 1.0D, 32.0D, 3.0D, 15.0D), Block.box(31.0D, 1.0D, 15.0D, 32.0D, 3.0D, 16.0D), Block.box(31.0D, 1.0D, 0.0D, 32.0D, 3.0D, 1.0D), Block.box(27.0D, 3.0D, 0.0D, 32.0D, 4.0D, 16.0D), Block.box(17.0D, 4.0D, 5.0D, 31.0D, 5.0D, 15.0D), Block.box(18.0D, 4.0D, 1.0D, 30.0D, 11.0D, 5.0D), Block.box(17.0D, 4.0D, 3.0D, 18.0D, 5.0D, 5.0D), Block.box(30.0D, 4.0D, 3.0D, 31.0D, 5.0D, 5.0D), Block.box(16.0D, 3.0D, 0.0D, 21.0D, 4.0D, 16.0D), Block.box(21.0D, 3.0D, 1.0D, 27.0D, 4.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape LEFT_WEST = Stream.of(Block.box(0.0D, 0.0D, 0.0D, 16.0D, 1.0D, 16.0D), Block.box(0.0D, 1.0D, 1.0D, 16.0D, 3.0D, 16.0D), Block.box(1.0D, 1.0D, 0.0D, 15.0D, 3.0D, 1.0D), Block.box(15.0D, 1.0D, 0.0D, 16.0D, 3.0D, 1.0D), Block.box(0.0D, 1.0D, 0.0D, 1.0D, 3.0D, 1.0D), Block.box(0.0D, 3.0D, 0.0D, 16.0D, 4.0D, 16.0D), Block.box(4.0D, 4.0D, 3.0D, 12.0D, 5.0D, 13.0D), Block.box(3.0D, 4.0D, 1.0D, 13.0D, 12.0D, 3.0D), Block.box(3.0D, 4.0D, 13.0D, 13.0D, 10.0D, 15.0D), Block.box(3.0D, 10.0D, 13.0D, 6.0D, 12.0D, 15.0D), Block.box(10.0D, 10.0D, 13.0D, 13.0D, 12.0D, 15.0D), Block.box(13.0D, 4.0D, 3.0D, 15.0D, 12.0D, 13.0D), Block.box(3.0D, 4.0D, 12.0D, 4.0D, 12.0D, 13.0D), Block.box(2.0D, 4.0D, 13.0D, 3.0D, 12.0D, 14.0D), Block.box(2.0D, 4.0D, 2.0D, 3.0D, 12.0D, 3.0D), Block.box(3.0D, 4.0D, 3.0D, 4.0D, 12.0D, 4.0D), Block.box(13.0D, 4.0D, 2.0D, 14.0D, 12.0D, 3.0D), Block.box(12.0D, 4.0D, 3.0D, 13.0D, 12.0D, 4.0D), Block.box(12.0D, 4.0D, 12.0D, 13.0D, 12.0D, 13.0D), Block.box(13.0D, 4.0D, 13.0D, 14.0D, 12.0D, 14.0D), Block.box(3.0D, 4.0D, 4.0D, 4.0D, 5.0D, 12.0D), Block.box(12.0D, 4.0D, 4.0D, 13.0D, 5.0D, 12.0D), Block.box(1.0D, 4.0D, 3.0D, 3.0D, 12.0D, 13.0D), Block.box(0.0D, 0.0D, 16.0D, 16.0D, 1.0D, 32.0D), Block.box(0.0D, 1.0D, 16.0D, 16.0D, 3.0D, 31.0D), Block.box(1.0D, 1.0D, 31.0D, 15.0D, 3.0D, 32.0D), Block.box(0.0D, 1.0D, 31.0D, 1.0D, 3.0D, 32.0D), Block.box(15.0D, 1.0D, 31.0D, 16.0D, 3.0D, 32.0D), Block.box(0.0D, 3.0D, 27.0D, 16.0D, 4.0D, 32.0D), Block.box(1.0D, 4.0D, 17.0D, 11.0D, 5.0D, 31.0D), Block.box(11.0D, 4.0D, 18.0D, 15.0D, 11.0D, 30.0D), Block.box(11.0D, 4.0D, 17.0D, 13.0D, 5.0D, 18.0D), Block.box(11.0D, 4.0D, 30.0D, 13.0D, 5.0D, 31.0D), Block.box(0.0D, 3.0D, 16.0D, 16.0D, 4.0D, 21.0D), Block.box(0.0D, 3.0D, 21.0D, 15.0D, 4.0D, 27.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape RIGHT_NORTH = Stream.of(Block.box(16.0D, 0.0D, 0.0D, 32.0D, 1.0D, 16.0D), Block.box(16.0D, 1.0D, 0.0D, 31.0D, 3.0D, 16.0D), Block.box(31.0D, 1.0D, 1.0D, 32.0D, 3.0D, 15.0D), Block.box(31.0D, 1.0D, 15.0D, 32.0D, 3.0D, 16.0D), Block.box(31.0D, 1.0D, 0.0D, 32.0D, 3.0D, 1.0D), Block.box(16.0D, 3.0D, 0.0D, 32.0D, 4.0D, 16.0D), Block.box(19.0D, 4.0D, 4.0D, 29.0D, 5.0D, 12.0D), Block.box(29.0D, 4.0D, 3.0D, 31.0D, 12.0D, 13.0D), Block.box(17.0D, 4.0D, 3.0D, 19.0D, 10.0D, 13.0D), Block.box(17.0D, 10.0D, 3.0D, 19.0D, 12.0D, 6.0D), Block.box(17.0D, 10.0D, 10.0D, 19.0D, 12.0D, 13.0D), Block.box(19.0D, 4.0D, 13.0D, 29.0D, 12.0D, 15.0D), Block.box(19.0D, 4.0D, 3.0D, 20.0D, 12.0D, 4.0D), Block.box(18.0D, 4.0D, 2.0D, 19.0D, 12.0D, 3.0D), Block.box(29.0D, 4.0D, 2.0D, 30.0D, 12.0D, 3.0D), Block.box(28.0D, 4.0D, 3.0D, 29.0D, 12.0D, 4.0D), Block.box(29.0D, 4.0D, 13.0D, 30.0D, 12.0D, 14.0D), Block.box(28.0D, 4.0D, 12.0D, 29.0D, 12.0D, 13.0D), Block.box(19.0D, 4.0D, 12.0D, 20.0D, 12.0D, 13.0D), Block.box(18.0D, 4.0D, 13.0D, 19.0D, 12.0D, 14.0D), Block.box(20.0D, 4.0D, 3.0D, 28.0D, 5.0D, 4.0D), Block.box(20.0D, 4.0D, 12.0D, 28.0D, 5.0D, 13.0D), Block.box(19.0D, 4.0D, 1.0D, 29.0D, 12.0D, 3.0D), Block.box(0.0D, 0.0D, 0.0D, 16.0D, 1.0D, 16.0D), Block.box(1.0D, 1.0D, 0.0D, 16.0D, 3.0D, 16.0D), Block.box(0.0D, 1.0D, 1.0D, 1.0D, 3.0D, 15.0D), Block.box(0.0D, 1.0D, 0.0D, 1.0D, 3.0D, 1.0D), Block.box(0.0D, 1.0D, 15.0D, 1.0D, 3.0D, 16.0D), Block.box(0.0D, 3.0D, 0.0D, 5.0D, 4.0D, 16.0D), Block.box(1.0D, 4.0D, 1.0D, 15.0D, 5.0D, 11.0D), Block.box(2.0D, 4.0D, 11.0D, 14.0D, 11.0D, 15.0D), Block.box(14.0D, 4.0D, 11.0D, 15.0D, 5.0D, 13.0D), Block.box(1.0D, 4.0D, 11.0D, 2.0D, 5.0D, 13.0D), Block.box(11.0D, 3.0D, 0.0D, 16.0D, 4.0D, 16.0D), Block.box(5.0D, 3.0D, 0.0D, 11.0D, 4.0D, 15.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape RIGHT_EAST = Stream.of(Block.box(0.0D, 0.0D, 16.0D, 16.0D, 1.0D, 32.0D), Block.box(0.0D, 1.0D, 16.0D, 16.0D, 3.0D, 31.0D), Block.box(1.0D, 1.0D, 31.0D, 15.0D, 3.0D, 32.0D), Block.box(0.0D, 1.0D, 31.0D, 1.0D, 3.0D, 32.0D), Block.box(15.0D, 1.0D, 31.0D, 16.0D, 3.0D, 32.0D), Block.box(0.0D, 3.0D, 16.0D, 16.0D, 4.0D, 32.0D), Block.box(4.0D, 4.0D, 19.0D, 12.0D, 5.0D, 29.0D), Block.box(3.0D, 4.0D, 29.0D, 13.0D, 12.0D, 31.0D), Block.box(3.0D, 4.0D, 17.0D, 13.0D, 10.0D, 19.0D), Block.box(10.0D, 10.0D, 17.0D, 13.0D, 12.0D, 19.0D), Block.box(3.0D, 10.0D, 17.0D, 6.0D, 12.0D, 19.0D), Block.box(1.0D, 4.0D, 19.0D, 3.0D, 12.0D, 29.0D), Block.box(12.0D, 4.0D, 19.0D, 13.0D, 12.0D, 20.0D), Block.box(13.0D, 4.0D, 18.0D, 14.0D, 12.0D, 19.0D), Block.box(13.0D, 4.0D, 29.0D, 14.0D, 12.0D, 30.0D), Block.box(12.0D, 4.0D, 28.0D, 13.0D, 12.0D, 29.0D), Block.box(2.0D, 4.0D, 29.0D, 3.0D, 12.0D, 30.0D), Block.box(3.0D, 4.0D, 28.0D, 4.0D, 12.0D, 29.0D), Block.box(3.0D, 4.0D, 19.0D, 4.0D, 12.0D, 20.0D), Block.box(2.0D, 4.0D, 18.0D, 3.0D, 12.0D, 19.0D), Block.box(12.0D, 4.0D, 20.0D, 13.0D, 5.0D, 28.0D), Block.box(3.0D, 4.0D, 20.0D, 4.0D, 5.0D, 28.0D), Block.box(13.0D, 4.0D, 19.0D, 15.0D, 12.0D, 29.0D), Block.box(0.0D, 0.0D, 0.0D, 16.0D, 1.0D, 16.0D), Block.box(0.0D, 1.0D, 1.0D, 16.0D, 3.0D, 16.0D), Block.box(1.0D, 1.0D, 0.0D, 15.0D, 3.0D, 1.0D), Block.box(15.0D, 1.0D, 0.0D, 16.0D, 3.0D, 1.0D), Block.box(0.0D, 1.0D, 0.0D, 1.0D, 3.0D, 1.0D), Block.box(0.0D, 3.0D, 0.0D, 16.0D, 4.0D, 5.0D), Block.box(5.0D, 4.0D, 1.0D, 15.0D, 5.0D, 15.0D), Block.box(1.0D, 4.0D, 2.0D, 5.0D, 11.0D, 14.0D), Block.box(3.0D, 4.0D, 14.0D, 5.0D, 5.0D, 15.0D), Block.box(3.0D, 4.0D, 1.0D, 5.0D, 5.0D, 2.0D), Block.box(0.0D, 3.0D, 11.0D, 16.0D, 4.0D, 16.0D), Block.box(1.0D, 3.0D, 5.0D, 16.0D, 4.0D, 11.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape RIGHT_SOUTH = Stream.of(Block.box(-16.0D, 0.0D, 0.0D, 0.0D, 1.0D, 16.0D), Block.box(-15.0D, 1.0D, 0.0D, 0.0D, 3.0D, 16.0D), Block.box(-16.0D, 1.0D, 1.0D, -15.0D, 3.0D, 15.0D), Block.box(-16.0D, 1.0D, 0.0D, -15.0D, 3.0D, 1.0D), Block.box(-16.0D, 1.0D, 15.0D, -15.0D, 3.0D, 16.0D), Block.box(-16.0D, 3.0D, 0.0D, 0.0D, 4.0D, 16.0D), Block.box(-13.0D, 4.0D, 4.0D, -3.0D, 5.0D, 12.0D), Block.box(-15.0D, 4.0D, 3.0D, -13.0D, 12.0D, 13.0D), Block.box(-3.0D, 4.0D, 3.0D, -1.0D, 10.0D, 13.0D), Block.box(-3.0D, 10.0D, 10.0D, -1.0D, 12.0D, 13.0D), Block.box(-3.0D, 10.0D, 3.0D, -1.0D, 12.0D, 6.0D), Block.box(-13.0D, 4.0D, 1.0D, -3.0D, 12.0D, 3.0D), Block.box(-4.0D, 4.0D, 12.0D, -3.0D, 12.0D, 13.0D), Block.box(-3.0D, 4.0D, 13.0D, -2.0D, 12.0D, 14.0D), Block.box(-14.0D, 4.0D, 13.0D, -13.0D, 12.0D, 14.0D), Block.box(-13.0D, 4.0D, 12.0D, -12.0D, 12.0D, 13.0D), Block.box(-14.0D, 4.0D, 2.0D, -13.0D, 12.0D, 3.0D), Block.box(-13.0D, 4.0D, 3.0D, -12.0D, 12.0D, 4.0D), Block.box(-4.0D, 4.0D, 3.0D, -3.0D, 12.0D, 4.0D), Block.box(-3.0D, 4.0D, 2.0D, -2.0D, 12.0D, 3.0D), Block.box(-12.0D, 4.0D, 12.0D, -4.0D, 5.0D, 13.0D), Block.box(-12.0D, 4.0D, 3.0D, -4.0D, 5.0D, 4.0D), Block.box(-13.0D, 4.0D, 13.0D, -3.0D, 12.0D, 15.0D), Block.box(0.0D, 0.0D, 0.0D, 16.0D, 1.0D, 16.0D), Block.box(0.0D, 1.0D, 0.0D, 15.0D, 3.0D, 16.0D), Block.box(15.0D, 1.0D, 1.0D, 16.0D, 3.0D, 15.0D), Block.box(15.0D, 1.0D, 15.0D, 16.0D, 3.0D, 16.0D), Block.box(15.0D, 1.0D, 0.0D, 16.0D, 3.0D, 1.0D), Block.box(11.0D, 3.0D, 0.0D, 16.0D, 4.0D, 16.0D), Block.box(1.0D, 4.0D, 5.0D, 15.0D, 5.0D, 15.0D), Block.box(2.0D, 4.0D, 1.0D, 14.0D, 11.0D, 5.0D), Block.box(1.0D, 4.0D, 3.0D, 2.0D, 5.0D, 5.0D), Block.box(14.0D, 4.0D, 3.0D, 15.0D, 5.0D, 5.0D), Block.box(0.0D, 3.0D, 0.0D, 5.0D, 4.0D, 16.0D), Block.box(5.0D, 3.0D, 1.0D, 11.0D, 4.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape RIGHT_WEST = Stream.of(Block.box(0.0D, 0.0D, -16.0D, 16.0D, 1.0D, 0.0D), Block.box(0.0D, 1.0D, -15.0D, 16.0D, 3.0D, 0.0D), Block.box(1.0D, 1.0D, -16.0D, 15.0D, 3.0D, -15.0D), Block.box(15.0D, 1.0D, -16.0D, 16.0D, 3.0D, -15.0D), Block.box(0.0D, 1.0D, -16.0D, 1.0D, 3.0D, -15.0D), Block.box(0.0D, 3.0D, -16.0D, 16.0D, 4.0D, 0.0D), Block.box(4.0D, 4.0D, -13.0D, 12.0D, 5.0D, -3.0D), Block.box(3.0D, 4.0D, -15.0D, 13.0D, 12.0D, -13.0D), Block.box(3.0D, 4.0D, -3.0D, 13.0D, 10.0D, -1.0D), Block.box(3.0D, 10.0D, -3.0D, 6.0D, 12.0D, -1.0D), Block.box(10.0D, 10.0D, -3.0D, 13.0D, 12.0D, -1.0D), Block.box(13.0D, 4.0D, -13.0D, 15.0D, 12.0D, -3.0D), Block.box(3.0D, 4.0D, -4.0D, 4.0D, 12.0D, -3.0D), Block.box(2.0D, 4.0D, -3.0D, 3.0D, 12.0D, -2.0D), Block.box(2.0D, 4.0D, -14.0D, 3.0D, 12.0D, -13.0D), Block.box(3.0D, 4.0D, -13.0D, 4.0D, 12.0D, -12.0D), Block.box(13.0D, 4.0D, -14.0D, 14.0D, 12.0D, -13.0D), Block.box(12.0D, 4.0D, -13.0D, 13.0D, 12.0D, -12.0D), Block.box(12.0D, 4.0D, -4.0D, 13.0D, 12.0D, -3.0D), Block.box(13.0D, 4.0D, -3.0D, 14.0D, 12.0D, -2.0D), Block.box(3.0D, 4.0D, -12.0D, 4.0D, 5.0D, -4.0D), Block.box(12.0D, 4.0D, -12.0D, 13.0D, 5.0D, -4.0D), Block.box(1.0D, 4.0D, -13.0D, 3.0D, 12.0D, -3.0D), Block.box(0.0D, 0.0D, 0.0D, 16.0D, 1.0D, 16.0D), Block.box(0.0D, 1.0D, 0.0D, 16.0D, 3.0D, 15.0D), Block.box(1.0D, 1.0D, 15.0D, 15.0D, 3.0D, 16.0D), Block.box(0.0D, 1.0D, 15.0D, 1.0D, 3.0D, 16.0D), Block.box(15.0D, 1.0D, 15.0D, 16.0D, 3.0D, 16.0D), Block.box(0.0D, 3.0D, 11.0D, 16.0D, 4.0D, 16.0D), Block.box(1.0D, 4.0D, 1.0D, 11.0D, 5.0D, 15.0D), Block.box(11.0D, 4.0D, 2.0D, 15.0D, 11.0D, 14.0D), Block.box(11.0D, 4.0D, 1.0D, 13.0D, 5.0D, 2.0D), Block.box(11.0D, 4.0D, 14.0D, 13.0D, 5.0D, 15.0D), Block.box(0.0D, 3.0D, 0.0D, 16.0D, 4.0D, 5.0D), Block.box(0.0D, 3.0D, 5.0D, 15.0D, 4.0D, 11.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
	}

	public static class IcariaPortalShapes {
		public static final VoxelShape X = Block.box(0.0D, 0.0D, 6.0D, 16.0D, 16.0D, 10.0D);
		public static final VoxelShape Z = Block.box(6.0D, 0.0D, 0.0D, 10.0D, 16.0D, 16.0D);
	}

	public static class IcariaVineShapes {
		public static final VoxelShape NORTH = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 16.0D, 1.0D);
		public static final VoxelShape EAST = Block.box(15.0D, 0.0D, 0.0D, 16.0D, 16.0D, 16.0D);
		public static final VoxelShape SOUTH = Block.box(0.0D, 0.0D, 15.0D, 16.0D, 16.0D, 16.0D);
		public static final VoxelShape WEST = Block.box(0.0D, 0.0D, 0.0D, 1.0D, 16.0D, 16.0D);
	}

	public static class KettleShapes {
		public static final VoxelShape UPPER_NORTH = Stream.of(Block.box(0.0D, -16.0D, 14.0D, 2.0D, 0.0D, 16.0D), Block.box(14.0D, -16.0D, 7.5D, 16.0D, 0.0D, 9.5D), Block.box(14.0D, -16.0D, 14.0D, 16.0D, 0.0D, 16.0D), Block.box(0.0D, -16.0D, 7.5D, 2.0D, 0.0D, 9.5D), Block.box(1.0D, -9.0D, 2.5D, 3.0D, -7.0D, 15.5D), Block.box(13.0D, -9.0D, 2.5D, 15.0D, -7.0D, 15.5D), Block.box(13.0D, -7.0D, 6.5D, 14.0D, -6.0D, 7.5D), Block.box(14.0D, -7.0D, 3.5D, 15.0D, -6.0D, 7.5D), Block.box(13.0D, -7.0D, 3.5D, 14.0D, -6.0D, 4.5D), Block.box(2.0D, -7.0D, 6.5D, 3.0D, -6.0D, 7.5D), Block.box(1.0D, -7.0D, 3.5D, 2.0D, -6.0D, 7.5D), Block.box(2.0D, -7.0D, 3.5D, 3.0D, -6.0D, 4.5D), Block.box(4.0D, -4.0D, 0.5D, 12.0D, -3.0D, 1.5D), Block.box(12.0D, -4.0D, 1.5D, 13.0D, -3.0D, 9.5D), Block.box(4.0D, -4.0D, 9.5D, 12.0D, -3.0D, 10.5D), Block.box(3.0D, -4.0D, 1.5D, 4.0D, -3.0D, 9.5D), Block.box(4.0D, -11.0D, 0.5D, 12.0D, -4.0D, 1.5D), Block.box(12.0D, -11.0D, 1.5D, 13.0D, -4.0D, 9.5D), Block.box(4.0D, -11.0D, 9.5D, 12.0D, -4.0D, 10.5D), Block.box(3.0D, -11.0D, 1.5D, 4.0D, -4.0D, 9.5D), Block.box(6.0D, -10.0D, 0.0D, 10.0D, -6.0D, 1.0D), Block.box(6.0D, -10.0D, 10.0D, 10.0D, -6.0D, 11.0D), Block.box(4.0D, -12.0D, 1.5D, 12.0D, -11.0D, 9.5D), Block.box(11.25D, 13.25D, 10.75D, 12.75D, 14.0D, 12.25D), Block.box(11.5D, 14.75D, 11.0D, 12.5D, 16.0D, 12.0D), Block.box(8.125D, 13.125D, 12.625D, 8.875D, 14.0D, 13.375D), Block.box(8.0D, 15.0D, 12.5D, 9.0D, 15.5D, 13.5D), Block.box(3.25D, 13.25D, 9.75D, 4.75D, 14.0D, 11.25D), Block.box(3.5D, 14.75D, 10.0D, 4.5D, 16.0D, 11.0D), Block.box(10.25D, 6.25D, 10.75D, 13.75D, 7.0D, 12.25D), Block.box(10.5D, 7.75D, 11.0D, 11.5D, 9.0D, 12.0D), Block.box(7.25D, 6.25D, 11.75D, 8.75D, 9.0D, 13.25D), Block.box(7.5D, 9.75D, 12.0D, 8.5D, 11.0D, 13.0D), Block.box(2.25D, 6.25D, 10.0D, 5.75D, 8.0D, 13.5D), Block.box(3.0D, 8.75D, 10.75D, 5.0D, 10.0D, 12.75D), Block.box(11.25D, -0.75D, 9.75D, 12.75D, 1.0D, 11.25D), Block.box(11.5D, 2.75D, 10.0D, 12.5D, 4.0D, 11.0D), Block.box(7.25D, -0.75D, 10.75D, 9.75D, 0.0D, 13.25D), Block.box(8.0D, 1.75D, 11.5D, 9.0D, 3.0D, 12.5D), Block.box(5.125D, -0.875D, 9.625D, 5.875D, 1.0D, 10.375D), Block.box(5.0D, 2.0D, 9.5D, 6.0D, 2.5D, 10.5D), Block.box(3.125D, -0.875D, 11.625D, 3.875D, 2.0D, 12.375D), Block.box(3.0D, 3.0D, 11.5D, 4.0D, 3.5D, 12.5D), Block.box(1.0D, 12.0D, 8.5D, 15.0D, 13.0D, 14.5D), Block.box(1.0D, 5.0D, 8.5D, 15.0D, 6.0D, 14.5D), Block.box(1.0D, -2.0D, 8.5D, 15.0D, -1.0D, 14.5D), Block.box(2.0D, -2.0D, 14.5D, 14.0D, 13.0D, 15.5D), Block.box(14.0D, 0.0D, 7.5D, 16.0D, 14.0D, 9.5D), Block.box(14.0D, 0.0D, 14.0D, 16.0D, 14.0D, 16.0D), Block.box(0.0D, 0.0D, 14.0D, 2.0D, 14.0D, 16.0D), Block.box(0.0D, 0.0D, 7.5D, 2.0D, 14.0D, 9.5D), Block.box(11.0D, 13.0D, 10.5D, 13.0D, 15.0D, 12.5D), Block.box(8.0D, 13.0D, 12.5D, 9.0D, 15.0D, 13.5D), Block.box(3.0D, 13.0D, 9.5D, 5.0D, 15.0D, 11.5D), Block.box(10.0D, 6.0D, 10.5D, 14.0D, 8.0D, 12.5D), Block.box(7.0D, 6.0D, 11.5D, 9.0D, 10.0D, 13.5D), Block.box(2.0D, 6.0D, 9.75D, 6.0D, 9.0D, 13.75D), Block.box(11.0D, -1.0D, 9.5D, 13.0D, 3.0D, 11.5D), Block.box(7.0D, -1.0D, 10.5D, 10.0D, 2.0D, 13.5D), Block.box(5.0D, -1.0D, 9.5D, 6.0D, 2.0D, 10.5D), Block.box(3.0D, -1.0D, 11.5D, 4.0D, 3.0D, 12.5D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape UPPER_EAST = Stream.of(Block.box(0.0D, -16.0D, 0.0D, 2.0D, 0.0D, 2.0D), Block.box(6.5D, -16.0D, 14.0D, 8.5D, 0.0D, 16.0D), Block.box(0.0D, -16.0D, 14.0D, 2.0D, 0.0D, 16.0D), Block.box(6.5D, -16.0D, 0.0D, 8.5D, 0.0D, 2.0D), Block.box(0.5D, -9.0D, 1.0D, 13.5D, -7.0D, 3.0D), Block.box(0.5D, -9.0D, 13.0D, 13.5D, -7.0D, 15.0D), Block.box(8.5D, -7.0D, 13.0D, 9.5D, -6.0D, 14.0D), Block.box(8.5D, -7.0D, 14.0D, 12.5D, -6.0D, 15.0D), Block.box(11.5D, -7.0D, 13.0D, 12.5D, -6.0D, 14.0D), Block.box(8.5D, -7.0D, 2.0D, 9.5D, -6.0D, 3.0D), Block.box(8.5D, -7.0D, 1.0D, 12.5D, -6.0D, 2.0D), Block.box(11.5D, -7.0D, 2.0D, 12.5D, -6.0D, 3.0D), Block.box(14.5D, -4.0D, 4.0D, 15.5D, -3.0D, 12.0D), Block.box(6.5D, -4.0D, 12.0D, 14.5D, -3.0D, 13.0D), Block.box(5.5D, -4.0D, 4.0D, 6.5D, -3.0D, 12.0D), Block.box(6.5D, -4.0D, 3.0D, 14.5D, -3.0D, 4.0D), Block.box(14.5D, -11.0D, 4.0D, 15.5D, -4.0D, 12.0D), Block.box(6.5D, -11.0D, 12.0D, 14.5D, -4.0D, 13.0D), Block.box(5.5D, -11.0D, 4.0D, 6.5D, -4.0D, 12.0D), Block.box(6.5D, -11.0D, 3.0D, 14.5D, -4.0D, 4.0D), Block.box(15.0D, -10.0D, 6.0D, 16.0D, -6.0D, 10.0D), Block.box(5.0D, -10.0D, 6.0D, 6.0D, -6.0D, 10.0D), Block.box(6.5D, -12.0D, 4.0D, 14.5D, -11.0D, 12.0D), Block.box(3.75D, 13.25D, 11.25D, 5.25D, 14.0D, 12.75D), Block.box(4.0D, 14.75D, 11.5D, 5.0D, 16.0D, 12.5D), Block.box(2.625D, 13.125D, 8.125D, 3.375D, 14.0D, 8.875D), Block.box(2.5D, 15.0D, 8.0D, 3.5D, 15.5D, 9.0D), Block.box(4.75D, 13.25D, 3.25D, 6.25D, 14.0D, 4.75D), Block.box(5.0D, 14.75D, 3.5D, 6.0D, 16.0D, 4.5D), Block.box(3.75D, 6.25D, 10.25D, 5.25D, 7.0D, 13.75D), Block.box(4.0D, 7.75D, 10.5D, 5.0D, 9.0D, 11.5D), Block.box(2.75D, 6.25D, 7.25D, 4.25D, 9.0D, 8.75D), Block.box(3.0D, 9.75D, 7.5D, 4.0D, 11.0D, 8.5D), Block.box(2.5D, 6.25D, 2.25D, 6.0D, 8.0D, 5.75D), Block.box(3.25D, 8.75D, 3.0D, 5.25D, 10.0D, 5.0D), Block.box(4.75D, -0.75D, 11.25D, 6.25D, 1.0D, 12.75D), Block.box(5.0D, 2.75D, 11.5D, 6.0D, 4.0D, 12.5D), Block.box(2.75D, -0.75D, 7.25D, 5.25D, 0.0D, 9.75D), Block.box(3.5D, 1.75D, 8.0D, 4.5D, 3.0D, 9.0D), Block.box(5.625D, -0.875D, 5.125D, 6.375D, 1.0D, 5.875D), Block.box(5.5D, 2.0D, 5.0D, 6.5D, 2.5D, 6.0D), Block.box(3.625D, -0.875D, 3.125D, 4.375D, 2.0D, 3.875D), Block.box(3.5D, 3.0D, 3.0D, 4.5D, 3.5D, 4.0D), Block.box(1.5D, 12.0D, 1.0D, 7.5D, 13.0D, 15.0D), Block.box(1.5D, 5.0D, 1.0D, 7.5D, 6.0D, 15.0D), Block.box(1.5D, -2.0D, 1.0D, 7.5D, -1.0D, 15.0D), Block.box(0.5D, -2.0D, 2.0D, 1.5D, 13.0D, 14.0D), Block.box(6.5D, 0.0D, 14.0D, 8.5D, 14.0D, 16.0D), Block.box(0.0D, 0.0D, 14.0D, 2.0D, 14.0D, 16.0D), Block.box(0.0D, 0.0D, 0.0D, 2.0D, 14.0D, 2.0D), Block.box(6.5D, 0.0D, 0.0D, 8.5D, 14.0D, 2.0D), Block.box(3.5D, 13.0D, 11.0D, 5.5D, 15.0D, 13.0D), Block.box(2.5D, 13.0D, 8.0D, 3.5D, 15.0D, 9.0D), Block.box(4.5D, 13.0D, 3.0D, 6.5D, 15.0D, 5.0D), Block.box(3.5D, 6.0D, 10.0D, 5.5D, 8.0D, 14.0D), Block.box(2.5D, 6.0D, 7.0D, 4.5D, 10.0D, 9.0D), Block.box(2.25D, 6.0D, 2.0D, 6.25D, 9.0D, 6.0D), Block.box(4.5D, -1.0D, 11.0D, 6.5D, 3.0D, 13.0D), Block.box(2.5D, -1.0D, 7.0D, 5.5D, 2.0D, 10.0D), Block.box(5.5D, -1.0D, 5.0D, 6.5D, 2.0D, 6.0D), Block.box(3.5D, -1.0D, 3.0D, 4.5D, 3.0D, 4.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape UPPER_SOUTH = Stream.of(Block.box(14.0D, -16.0D, 0.0D, 16.0D, 0.0D, 2.0D), Block.box(0.0D, -16.0D, 6.5D, 2.0D, 0.0D, 8.5D), Block.box(0.0D, -16.0D, 0.0D, 2.0D, 0.0D, 2.0D), Block.box(14.0D, -16.0D, 6.5D, 16.0D, 0.0D, 8.5D), Block.box(13.0D, -9.0D, 0.5D, 15.0D, -7.0D, 13.5D), Block.box(1.0D, -9.0D, 0.5D, 3.0D, -7.0D, 13.5D), Block.box(2.0D, -7.0D, 8.5D, 3.0D, -6.0D, 9.5D), Block.box(1.0D, -7.0D, 8.5D, 2.0D, -6.0D, 12.5D), Block.box(2.0D, -7.0D, 11.5D, 3.0D, -6.0D, 12.5D), Block.box(13.0D, -7.0D, 8.5D, 14.0D, -6.0D, 9.5D), Block.box(14.0D, -7.0D, 8.5D, 15.0D, -6.0D, 12.5D), Block.box(13.0D, -7.0D, 11.5D, 14.0D, -6.0D, 12.5D), Block.box(4.0D, -4.0D, 14.5D, 12.0D, -3.0D, 15.5D), Block.box(3.0D, -4.0D, 6.5D, 4.0D, -3.0D, 14.5D), Block.box(4.0D, -4.0D, 5.5D, 12.0D, -3.0D, 6.5D), Block.box(12.0D, -4.0D, 6.5D, 13.0D, -3.0D, 14.5D), Block.box(4.0D, -11.0D, 14.5D, 12.0D, -4.0D, 15.5D), Block.box(3.0D, -11.0D, 6.5D, 4.0D, -4.0D, 14.5D), Block.box(4.0D, -11.0D, 5.5D, 12.0D, -4.0D, 6.5D), Block.box(12.0D, -11.0D, 6.5D, 13.0D, -4.0D, 14.5D), Block.box(6.0D, -10.0D, 15.0D, 10.0D, -6.0D, 16.0D), Block.box(6.0D, -10.0D, 5.0D, 10.0D, -6.0D, 6.0D), Block.box(4.0D, -12.0D, 6.5D, 12.0D, -11.0D, 14.5D), Block.box(3.25D, 13.25D, 3.75D, 4.75D, 14.0D, 5.25D), Block.box(3.5D, 14.75D, 4.0D, 4.5D, 16.0D, 5.0D), Block.box(7.125D, 13.125D, 2.625D, 7.875D, 14.0D, 3.375D), Block.box(7.0D, 15.0D, 2.5D, 8.0D, 15.5D, 3.5D), Block.box(11.25D, 13.25D, 4.75D, 12.75D, 14.0D, 6.25D), Block.box(11.5D, 14.75D, 5.0D, 12.5D, 16.0D, 6.0D), Block.box(2.25D, 6.25D, 3.75D, 5.75D, 7.0D, 5.25D), Block.box(4.5D, 7.75D, 4.0D, 5.5D, 9.0D, 5.0D), Block.box(7.25D, 6.25D, 2.75D, 8.75D, 9.0D, 4.25D), Block.box(7.5D, 9.75D, 3.0D, 8.5D, 11.0D, 4.0D), Block.box(10.25D, 6.25D, 2.5D, 13.75D, 8.0D, 6.0D), Block.box(11.0D, 8.75D, 3.25D, 13.0D, 10.0D, 5.25D), Block.box(3.25D, -0.75D, 4.75D, 4.75D, 1.0D, 6.25D), Block.box(3.5D, 2.75D, 5.0D, 4.5D, 4.0D, 6.0D), Block.box(6.25D, -0.75D, 2.75D, 8.75D, 0.0D, 5.25D), Block.box(7.0D, 1.75D, 3.5D, 8.0D, 3.0D, 4.5D), Block.box(10.125D, -0.875D, 5.625D, 10.875D, 1.0D, 6.375D), Block.box(10.0D, 2.0D, 5.5D, 11.0D, 2.5D, 6.5D), Block.box(12.125D, -0.875D, 3.625D, 12.875D, 2.0D, 4.375D), Block.box(12.0D, 3.0D, 3.5D, 13.0D, 3.5D, 4.5D), Block.box(1.0D, 12.0D, 1.5D, 15.0D, 13.0D, 7.5D), Block.box(1.0D, 5.0D, 1.5D, 15.0D, 6.0D, 7.5D), Block.box(1.0D, -2.0D, 1.5D, 15.0D, -1.0D, 7.5D), Block.box(2.0D, -2.0D, 0.5D, 14.0D, 13.0D, 1.5D), Block.box(0.0D, 0.0D, 6.5D, 2.0D, 14.0D, 8.5D), Block.box(0.0D, 0.0D, 0.0D, 2.0D, 14.0D, 2.0D), Block.box(14.0D, 0.0D, 0.0D, 16.0D, 14.0D, 2.0D), Block.box(14.0D, 0.0D, 6.5D, 16.0D, 14.0D, 8.5D), Block.box(3.0D, 13.0D, 3.5D, 5.0D, 15.0D, 5.5D), Block.box(7.0D, 13.0D, 2.5D, 8.0D, 15.0D, 3.5D), Block.box(11.0D, 13.0D, 4.5D, 13.0D, 15.0D, 6.5D), Block.box(2.0D, 6.0D, 3.5D, 6.0D, 8.0D, 5.5D), Block.box(7.0D, 6.0D, 2.5D, 9.0D, 10.0D, 4.5D), Block.box(10.0D, 6.0D, 2.25D, 14.0D, 9.0D, 6.25D), Block.box(3.0D, -1.0D, 4.5D, 5.0D, 3.0D, 6.5D), Block.box(6.0D, -1.0D, 2.5D, 9.0D, 2.0D, 5.5D), Block.box(10.0D, -1.0D, 5.5D, 11.0D, 2.0D, 6.5D), Block.box(12.0D, -1.0D, 3.5D, 13.0D, 3.0D, 4.5D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape UPPER_WEST = Stream.of(Block.box(14.0D, -16.0D, 14.0D, 16.0D, 0.0D, 16.0D), Block.box(7.5D, -16.0D, 0.0D, 9.5D, 0.0D, 2.0D), Block.box(14.0D, -16.0D, 0.0D, 16.0D, 0.0D, 2.0D), Block.box(7.5D, -16.0D, 14.0D, 9.5D, 0.0D, 16.0D), Block.box(2.5D, -9.0D, 13.0D, 15.5D, -7.0D, 15.0D), Block.box(2.5D, -9.0D, 1.0D, 15.5D, -7.0D, 3.0D), Block.box(6.5D, -7.0D, 2.0D, 7.5D, -6.0D, 3.0D), Block.box(3.5D, -7.0D, 1.0D, 7.5D, -6.0D, 2.0D), Block.box(3.5D, -7.0D, 2.0D, 4.5D, -6.0D, 3.0D), Block.box(6.5D, -7.0D, 13.0D, 7.5D, -6.0D, 14.0D), Block.box(3.5D, -7.0D, 14.0D, 7.5D, -6.0D, 15.0D), Block.box(3.5D, -7.0D, 13.0D, 4.5D, -6.0D, 14.0D), Block.box(0.5D, -4.0D, 4.0D, 1.5D, -3.0D, 12.0D), Block.box(1.5D, -4.0D, 3.0D, 9.5D, -3.0D, 4.0D), Block.box(9.5D, -4.0D, 4.0D, 10.5D, -3.0D, 12.0D), Block.box(1.5D, -4.0D, 12.0D, 9.5D, -3.0D, 13.0D), Block.box(0.5D, -11.0D, 4.0D, 1.5D, -4.0D, 12.0D), Block.box(1.5D, -11.0D, 3.0D, 9.5D, -4.0D, 4.0D), Block.box(9.5D, -11.0D, 4.0D, 10.5D, -4.0D, 12.0D), Block.box(1.5D, -11.0D, 12.0D, 9.5D, -4.0D, 13.0D), Block.box(0.0D, -10.0D, 6.0D, 1.0D, -6.0D, 10.0D), Block.box(10.0D, -10.0D, 6.0D, 11.0D, -6.0D, 10.0D), Block.box(1.5D, -12.0D, 4.0D, 9.5D, -11.0D, 12.0D), Block.box(10.75D, 13.25D, 3.25D, 12.25D, 14.0D, 4.75D), Block.box(11.0D, 14.75D, 3.5D, 12.0D, 16.0D, 4.5D), Block.box(12.625D, 13.125D, 7.125D, 13.375D, 14.0D, 7.875D), Block.box(12.5D, 15.0D, 7.0D, 13.5D, 15.5D, 8.0D), Block.box(9.75D, 13.25D, 11.25D, 11.25D, 14.0D, 12.75D), Block.box(10.0D, 14.75D, 11.5D, 11.0D, 16.0D, 12.5D), Block.box(10.75D, 6.25D, 2.25D, 12.25D, 7.0D, 5.75D), Block.box(11.0D, 7.75D, 4.5D, 12.0D, 9.0D, 5.5D), Block.box(11.75D, 6.25D, 7.25D, 13.25D, 9.0D, 8.75D), Block.box(12.0D, 9.75D, 7.5D, 13.0D, 11.0D, 8.5D), Block.box(10.0D, 6.25D, 10.25D, 13.5D, 8.0D, 13.75D), Block.box(10.75D, 8.75D, 11.0D, 12.75D, 10.0D, 13.0D), Block.box(9.75D, -0.75D, 3.25D, 11.25D, 1.0D, 4.75D), Block.box(10.0D, 2.75D, 3.5D, 11.0D, 4.0D, 4.5D), Block.box(10.75D, -0.75D, 6.25D, 13.25D, 0.0D, 8.75D), Block.box(11.5D, 1.75D, 7.0D, 12.5D, 3.0D, 8.0D), Block.box(9.625D, -0.875D, 10.125D, 10.375D, 1.0D, 10.875D), Block.box(9.5D, 2.0D, 10.0D, 10.5D, 2.5D, 11.0D), Block.box(11.625D, -0.875D, 12.125D, 12.375D, 2.0D, 12.875D), Block.box(11.5D, 3.0D, 12.0D, 12.5D, 3.5D, 13.0D), Block.box(8.5D, 12.0D, 1.0D, 14.5D, 13.0D, 15.0D), Block.box(8.5D, 5.0D, 1.0D, 14.5D, 6.0D, 15.0D), Block.box(8.5D, -2.0D, 1.0D, 14.5D, -1.0D, 15.0D), Block.box(14.5D, -2.0D, 2.0D, 15.5D, 13.0D, 14.0D), Block.box(7.5D, 0.0D, 0.0D, 9.5D, 14.0D, 2.0D), Block.box(14.0D, 0.0D, 0.0D, 16.0D, 14.0D, 2.0D), Block.box(14.0D, 0.0D, 14.0D, 16.0D, 14.0D, 16.0D), Block.box(7.5D, 0.0D, 14.0D, 9.5D, 14.0D, 16.0D), Block.box(10.5D, 13.0D, 3.0D, 12.5D, 15.0D, 5.0D), Block.box(12.5D, 13.0D, 7.0D, 13.5D, 15.0D, 8.0D), Block.box(9.5D, 13.0D, 11.0D, 11.5D, 15.0D, 13.0D), Block.box(10.5D, 6.0D, 2.0D, 12.5D, 8.0D, 6.0D), Block.box(11.5D, 6.0D, 7.0D, 13.5D, 10.0D, 9.0D), Block.box(9.75D, 6.0D, 10.0D, 13.75D, 9.0D, 14.0D), Block.box(9.5D, -1.0D, 3.0D, 11.5D, 3.0D, 5.0D), Block.box(10.5D, -1.0D, 6.0D, 13.5D, 2.0D, 9.0D), Block.box(9.5D, -1.0D, 10.0D, 10.5D, 2.0D, 11.0D), Block.box(11.5D, -1.0D, 12.0D, 12.5D, 3.0D, 13.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape LOWER_NORTH = Stream.of(Block.box(0.0D, 0.0D, 14.0D, 2.0D, 16.0D, 16.0D), Block.box(14.0D, 0.0D, 7.5D, 16.0D, 16.0D, 9.5D), Block.box(14.0D, 0.0D, 14.0D, 16.0D, 16.0D, 16.0D), Block.box(0.0D, 0.0D, 7.5D, 2.0D, 16.0D, 9.5D), Block.box(1.0D, 7.0D, 2.5D, 3.0D, 9.0D, 15.5D), Block.box(13.0D, 7.0D, 2.5D, 15.0D, 9.0D, 15.5D), Block.box(13.0D, 9.0D, 6.5D, 14.0D, 10.0D, 7.5D), Block.box(14.0D, 9.0D, 3.5D, 15.0D, 10.0D, 7.5D), Block.box(13.0D, 9.0D, 3.5D, 14.0D, 10.0D, 4.5D), Block.box(2.0D, 9.0D, 6.5D, 3.0D, 10.0D, 7.5D), Block.box(1.0D, 9.0D, 3.5D, 2.0D, 10.0D, 7.5D), Block.box(2.0D, 9.0D, 3.5D, 3.0D, 10.0D, 4.5D), Block.box(4.0D, 12.0D, 0.5D, 12.0D, 13.0D, 1.5D), Block.box(12.0D, 12.0D, 1.5D, 13.0D, 13.0D, 9.5D), Block.box(4.0D, 12.0D, 9.5D, 12.0D, 13.0D, 10.5D), Block.box(3.0D, 12.0D, 1.5D, 4.0D, 13.0D, 9.5D), Block.box(4.0D, 5.0D, 0.5D, 12.0D, 12.0D, 1.5D), Block.box(12.0D, 5.0D, 1.5D, 13.0D, 12.0D, 9.5D), Block.box(4.0D, 5.0D, 9.5D, 12.0D, 12.0D, 10.5D), Block.box(3.0D, 5.0D, 1.5D, 4.0D, 12.0D, 9.5D), Block.box(6.0D, 6.0D, 0.0D, 10.0D, 10.0D, 1.0D), Block.box(6.0D, 6.0D, 10.0D, 10.0D, 10.0D, 11.0D), Block.box(4.0D, 4.0D, 1.5D, 12.0D, 5.0D, 9.5D), Block.box(11.25D, 29.25D, 10.75D, 12.75D, 30.0D, 12.25D), Block.box(11.5D, 30.75D, 11.0D, 12.5D, 32.0D, 12.0D), Block.box(8.125D, 29.125D, 12.625D, 8.875D, 30.0D, 13.375D), Block.box(8.0D, 31.0D, 12.5D, 9.0D, 31.5D, 13.5D), Block.box(3.25D, 29.25D, 9.75D, 4.75D, 30.0D, 11.25D), Block.box(3.5D, 30.75D, 10.0D, 4.5D, 32.0D, 11.0D), Block.box(10.25D, 22.25D, 10.75D, 13.75D, 23.0D, 12.25D), Block.box(10.5D, 23.75D, 11.0D, 11.5D, 25.0D, 12.0D), Block.box(7.25D, 22.25D, 11.75D, 8.75D, 25.0D, 13.25D), Block.box(7.5D, 25.75D, 12.0D, 8.5D, 27.0D, 13.0D), Block.box(2.25D, 22.25D, 10.0D, 5.75D, 24.0D, 13.5D), Block.box(3.0D, 24.75D, 10.75D, 5.0D, 26.0D, 12.75D), Block.box(11.25D, 15.25D, 9.75D, 12.75D, 17.0D, 11.25D), Block.box(11.5D, 18.75D, 10.0D, 12.5D, 20.0D, 11.0D), Block.box(7.25D, 15.25D, 10.75D, 9.75D, 16.0D, 13.25D), Block.box(8.0D, 17.75D, 11.5D, 9.0D, 19.0D, 12.5D), Block.box(5.125D, 15.125D, 9.625D, 5.875D, 17.0D, 10.375D), Block.box(5.0D, 18.0D, 9.5D, 6.0D, 18.5D, 10.5D), Block.box(3.125D, 15.125D, 11.625D, 3.875D, 18.0D, 12.375D), Block.box(3.0D, 19.0D, 11.5D, 4.0D, 19.5D, 12.5D), Block.box(1.0D, 28.0D, 8.5D, 15.0D, 29.0D, 14.5D), Block.box(1.0D, 21.0D, 8.5D, 15.0D, 22.0D, 14.5D), Block.box(1.0D, 14.0D, 8.5D, 15.0D, 15.0D, 14.5D), Block.box(2.0D, 14.0D, 14.5D, 14.0D, 29.0D, 15.5D), Block.box(14.0D, 16.0D, 7.5D, 16.0D, 30.0D, 9.5D), Block.box(14.0D, 16.0D, 14.0D, 16.0D, 30.0D, 16.0D), Block.box(0.0D, 16.0D, 14.0D, 2.0D, 30.0D, 16.0D), Block.box(0.0D, 16.0D, 7.5D, 2.0D, 30.0D, 9.5D), Block.box(11.0D, 29.0D, 10.5D, 13.0D, 31.0D, 12.5D), Block.box(8.0D, 29.0D, 12.5D, 9.0D, 31.0D, 13.5D), Block.box(3.0D, 29.0D, 9.5D, 5.0D, 31.0D, 11.5D), Block.box(10.0D, 22.0D, 10.5D, 14.0D, 24.0D, 12.5D), Block.box(7.0D, 22.0D, 11.5D, 9.0D, 26.0D, 13.5D), Block.box(2.0D, 22.0D, 9.75D, 6.0D, 25.0D, 13.75D), Block.box(11.0D, 15.0D, 9.5D, 13.0D, 19.0D, 11.5D), Block.box(7.0D, 15.0D, 10.5D, 10.0D, 18.0D, 13.5D), Block.box(5.0D, 15.0D, 9.5D, 6.0D, 18.0D, 10.5D), Block.box(3.0D, 15.0D, 11.5D, 4.0D, 19.0D, 12.5D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape LOWER_EAST = Stream.of(Block.box(0.0D, 0.0D, 0.0D, 2.0D, 16.0D, 2.0D), Block.box(6.5D, 0.0D, 14.0D, 8.5D, 16.0D, 16.0D), Block.box(0.0D, 0.0D, 14.0D, 2.0D, 16.0D, 16.0D), Block.box(6.5D, 0.0D, 0.0D, 8.5D, 16.0D, 2.0D), Block.box(0.5D, 7.0D, 1.0D, 13.5D, 9.0D, 3.0D), Block.box(0.5D, 7.0D, 13.0D, 13.5D, 9.0D, 15.0D), Block.box(8.5D, 9.0D, 13.0D, 9.5D, 10.0D, 14.0D), Block.box(8.5D, 9.0D, 14.0D, 12.5D, 10.0D, 15.0D), Block.box(11.5D, 9.0D, 13.0D, 12.5D, 10.0D, 14.0D), Block.box(8.5D, 9.0D, 2.0D, 9.5D, 10.0D, 3.0D), Block.box(8.5D, 9.0D, 1.0D, 12.5D, 10.0D, 2.0D), Block.box(11.5D, 9.0D, 2.0D, 12.5D, 10.0D, 3.0D), Block.box(14.5D, 12.0D, 4.0D, 15.5D, 13.0D, 12.0D), Block.box(6.5D, 12.0D, 12.0D, 14.5D, 13.0D, 13.0D), Block.box(5.5D, 12.0D, 4.0D, 6.5D, 13.0D, 12.0D), Block.box(6.5D, 12.0D, 3.0D, 14.5D, 13.0D, 4.0D), Block.box(14.5D, 5.0D, 4.0D, 15.5D, 12.0D, 12.0D), Block.box(6.5D, 5.0D, 12.0D, 14.5D, 12.0D, 13.0D), Block.box(5.5D, 5.0D, 4.0D, 6.5D, 12.0D, 12.0D), Block.box(6.5D, 5.0D, 3.0D, 14.5D, 12.0D, 4.0D), Block.box(15.0D, 6.0D, 6.0D, 16.0D, 10.0D, 10.0D), Block.box(5.0D, 6.0D, 6.0D, 6.0D, 10.0D, 10.0D), Block.box(6.5D, 4.0D, 4.0D, 14.5D, 5.0D, 12.0D), Block.box(3.75D, 29.25D, 11.25D, 5.25D, 30.0D, 12.75D), Block.box(4.0D, 30.75D, 11.5D, 5.0D, 32.0D, 12.5D), Block.box(2.625D, 29.125D, 8.125D, 3.375D, 30.0D, 8.875D), Block.box(2.5D, 31.0D, 8.0D, 3.5D, 31.5D, 9.0D), Block.box(4.75D, 29.25D, 3.25D, 6.25D, 30.0D, 4.75D), Block.box(5.0D, 30.75D, 3.5D, 6.0D, 32.0D, 4.5D), Block.box(3.75D, 22.25D, 10.25D, 5.25D, 23.0D, 13.75D), Block.box(4.0D, 23.75D, 10.5D, 5.0D, 25.0D, 11.5D), Block.box(2.75D, 22.25D, 7.25D, 4.25D, 25.0D, 8.75D), Block.box(3.0D, 25.75D, 7.5D, 4.0D, 27.0D, 8.5D), Block.box(2.5D, 22.25D, 2.25D, 6.0D, 24.0D, 5.75D), Block.box(3.25D, 24.75D, 3.0D, 5.25D, 26.0D, 5.0D), Block.box(4.75D, 15.25D, 11.25D, 6.25D, 17.0D, 12.75D), Block.box(5.0D, 18.75D, 11.5D, 6.0D, 20.0D, 12.5D), Block.box(2.75D, 15.25D, 7.25D, 5.25D, 16.0D, 9.75D), Block.box(3.5D, 17.75D, 8.0D, 4.5D, 19.0D, 9.0D), Block.box(5.625D, 15.125D, 5.125D, 6.375D, 17.0D, 5.875D), Block.box(5.5D, 18.0D, 5.0D, 6.5D, 18.5D, 6.0D), Block.box(3.625D, 15.125D, 3.125D, 4.375D, 18.0D, 3.875D), Block.box(3.5D, 19.0D, 3.0D, 4.5D, 19.5D, 4.0D), Block.box(1.5D, 28.0D, 1.0D, 7.5D, 29.0D, 15.0D), Block.box(1.5D, 21.0D, 1.0D, 7.5D, 22.0D, 15.0D), Block.box(1.5D, 14.0D, 1.0D, 7.5D, 15.0D, 15.0D), Block.box(0.5D, 14.0D, 2.0D, 1.5D, 29.0D, 14.0D), Block.box(6.5D, 16.0D, 14.0D, 8.5D, 30.0D, 16.0D), Block.box(0.0D, 16.0D, 14.0D, 2.0D, 30.0D, 16.0D), Block.box(0.0D, 16.0D, 0.0D, 2.0D, 30.0D, 2.0D), Block.box(6.5D, 16.0D, 0.0D, 8.5D, 30.0D, 2.0D), Block.box(3.5D, 29.0D, 11.0D, 5.5D, 31.0D, 13.0D), Block.box(2.5D, 29.0D, 8.0D, 3.5D, 31.0D, 9.0D), Block.box(4.5D, 29.0D, 3.0D, 6.5D, 31.0D, 5.0D), Block.box(3.5D, 22.0D, 10.0D, 5.5D, 24.0D, 14.0D), Block.box(2.5D, 22.0D, 7.0D, 4.5D, 26.0D, 9.0D), Block.box(2.25D, 22.0D, 2.0D, 6.25D, 25.0D, 6.0D), Block.box(4.5D, 15.0D, 11.0D, 6.5D, 19.0D, 13.0D), Block.box(2.5D, 15.0D, 7.0D, 5.5D, 18.0D, 10.0D), Block.box(5.5D, 15.0D, 5.0D, 6.5D, 18.0D, 6.0D), Block.box(3.5D, 15.0D, 3.0D, 4.5D, 19.0D, 4.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape LOWER_SOUTH = Stream.of(Block.box(14.0D, 0.0D, 0.0D, 16.0D, 16.0D, 2.0D), Block.box(0.0D, 0.0D, 6.5D, 2.0D, 16.0D, 8.5D), Block.box(0.0D, 0.0D, 0.0D, 2.0D, 16.0D, 2.0D), Block.box(14.0D, 0.0D, 6.5D, 16.0D, 16.0D, 8.5D), Block.box(13.0D, 7.0D, 0.5D, 15.0D, 9.0D, 13.5D), Block.box(1.0D, 7.0D, 0.5D, 3.0D, 9.0D, 13.5D), Block.box(2.0D, 9.0D, 8.5D, 3.0D, 10.0D, 9.5D), Block.box(1.0D, 9.0D, 8.5D, 2.0D, 10.0D, 12.5D), Block.box(2.0D, 9.0D, 11.5D, 3.0D, 10.0D, 12.5D), Block.box(13.0D, 9.0D, 8.5D, 14.0D, 10.0D, 9.5D), Block.box(14.0D, 9.0D, 8.5D, 15.0D, 10.0D, 12.5D), Block.box(13.0D, 9.0D, 11.5D, 14.0D, 10.0D, 12.5D), Block.box(4.0D, 12.0D, 14.5D, 12.0D, 13.0D, 15.5D), Block.box(3.0D, 12.0D, 6.5D, 4.0D, 13.0D, 14.5D), Block.box(4.0D, 12.0D, 5.5D, 12.0D, 13.0D, 6.5D), Block.box(12.0D, 12.0D, 6.5D, 13.0D, 13.0D, 14.5D), Block.box(4.0D, 5.0D, 14.5D, 12.0D, 12.0D, 15.5D), Block.box(3.0D, 5.0D, 6.5D, 4.0D, 12.0D, 14.5D), Block.box(4.0D, 5.0D, 5.5D, 12.0D, 12.0D, 6.5D), Block.box(12.0D, 5.0D, 6.5D, 13.0D, 12.0D, 14.5D), Block.box(6.0D, 6.0D, 15.0D, 10.0D, 10.0D, 16.0D), Block.box(6.0D, 6.0D, 5.0D, 10.0D, 10.0D, 6.0D), Block.box(4.0D, 4.0D, 6.5D, 12.0D, 5.0D, 14.5D), Block.box(3.25D, 29.25D, 3.75D, 4.75D, 30.0D, 5.25D), Block.box(3.5D, 30.75D, 4.0D, 4.5D, 32.0D, 5.0D), Block.box(7.125D, 29.125D, 2.625D, 7.875D, 30.0D, 3.375D), Block.box(7.0D, 31.0D, 2.5D, 8.0D, 31.5D, 3.5D), Block.box(11.25D, 29.25D, 4.75D, 12.75D, 30.0D, 6.25D), Block.box(11.5D, 30.75D, 5.0D, 12.5D, 32.0D, 6.0D), Block.box(2.25D, 22.25D, 3.75D, 5.75D, 23.0D, 5.25D), Block.box(4.5D, 23.75D, 4.0D, 5.5D, 25.0D, 5.0D), Block.box(7.25D, 22.25D, 2.75D, 8.75D, 25.0D, 4.25D), Block.box(7.5D, 25.75D, 3.0D, 8.5D, 27.0D, 4.0D), Block.box(10.25D, 22.25D, 2.5D, 13.75D, 24.0D, 6.0D), Block.box(11.0D, 24.75D, 3.25D, 13.0D, 26.0D, 5.25D), Block.box(3.25D, 15.25D, 4.75D, 4.75D, 17.0D, 6.25D), Block.box(3.5D, 18.75D, 5.0D, 4.5D, 20.0D, 6.0D), Block.box(6.25D, 15.25D, 2.75D, 8.75D, 16.0D, 5.25D), Block.box(7.0D, 17.75D, 3.5D, 8.0D, 19.0D, 4.5D), Block.box(10.125D, 15.125D, 5.625D, 10.875D, 17.0D, 6.375D), Block.box(10.0D, 18.0D, 5.5D, 11.0D, 18.5D, 6.5D), Block.box(12.125D, 15.125D, 3.625D, 12.875D, 18.0D, 4.375D), Block.box(12.0D, 19.0D, 3.5D, 13.0D, 19.5D, 4.5D), Block.box(1.0D, 28.0D, 1.5D, 15.0D, 29.0D, 7.5D), Block.box(1.0D, 21.0D, 1.5D, 15.0D, 22.0D, 7.5D), Block.box(1.0D, 14.0D, 1.5D, 15.0D, 15.0D, 7.5D), Block.box(2.0D, 14.0D, 0.5D, 14.0D, 29.0D, 1.5D), Block.box(0.0D, 16.0D, 6.5D, 2.0D, 30.0D, 8.5D), Block.box(0.0D, 16.0D, 0.0D, 2.0D, 30.0D, 2.0D), Block.box(14.0D, 16.0D, 0.0D, 16.0D, 30.0D, 2.0D), Block.box(14.0D, 16.0D, 6.5D, 16.0D, 30.0D, 8.5D), Block.box(3.0D, 29.0D, 3.5D, 5.0D, 31.0D, 5.5D), Block.box(7.0D, 29.0D, 2.5D, 8.0D, 31.0D, 3.5D), Block.box(11.0D, 29.0D, 4.5D, 13.0D, 31.0D, 6.5D), Block.box(2.0D, 22.0D, 3.5D, 6.0D, 24.0D, 5.5D), Block.box(7.0D, 22.0D, 2.5D, 9.0D, 26.0D, 4.5D), Block.box(10.0D, 22.0D, 2.25D, 14.0D, 25.0D, 6.25D), Block.box(3.0D, 15.0D, 4.5D, 5.0D, 19.0D, 6.5D), Block.box(6.0D, 15.0D, 2.5D, 9.0D, 18.0D, 5.5D), Block.box(10.0D, 15.0D, 5.5D, 11.0D, 18.0D, 6.5D), Block.box(12.0D, 15.0D, 3.5D, 13.0D, 19.0D, 4.5D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape LOWER_WEST = Stream.of(Block.box(14.0D, 0.0D, 14.0D, 16.0D, 16.0D, 16.0D), Block.box(7.5D, 0.0D, 0.0D, 9.5D, 16.0D, 2.0D), Block.box(14.0D, 0.0D, 0.0D, 16.0D, 16.0D, 2.0D), Block.box(7.5D, 0.0D, 14.0D, 9.5D, 16.0D, 16.0D), Block.box(2.5D, 7.0D, 13.0D, 15.5D, 9.0D, 15.0D), Block.box(2.5D, 7.0D, 1.0D, 15.5D, 9.0D, 3.0D), Block.box(6.5D, 9.0D, 2.0D, 7.5D, 10.0D, 3.0D), Block.box(3.5D, 9.0D, 1.0D, 7.5D, 10.0D, 2.0D), Block.box(3.5D, 9.0D, 2.0D, 4.5D, 10.0D, 3.0D), Block.box(6.5D, 9.0D, 13.0D, 7.5D, 10.0D, 14.0D), Block.box(3.5D, 9.0D, 14.0D, 7.5D, 10.0D, 15.0D), Block.box(3.5D, 9.0D, 13.0D, 4.5D, 10.0D, 14.0D), Block.box(0.5D, 12.0D, 4.0D, 1.5D, 13.0D, 12.0D), Block.box(1.5D, 12.0D, 3.0D, 9.5D, 13.0D, 4.0D), Block.box(9.5D, 12.0D, 4.0D, 10.5D, 13.0D, 12.0D), Block.box(1.5D, 12.0D, 12.0D, 9.5D, 13.0D, 13.0D), Block.box(0.5D, 5.0D, 4.0D, 1.5D, 12.0D, 12.0D), Block.box(1.5D, 5.0D, 3.0D, 9.5D, 12.0D, 4.0D), Block.box(9.5D, 5.0D, 4.0D, 10.5D, 12.0D, 12.0D), Block.box(1.5D, 5.0D, 12.0D, 9.5D, 12.0D, 13.0D), Block.box(0.0D, 6.0D, 6.0D, 1.0D, 10.0D, 10.0D), Block.box(10.0D, 6.0D, 6.0D, 11.0D, 10.0D, 10.0D), Block.box(1.5D, 4.0D, 4.0D, 9.5D, 5.0D, 12.0D), Block.box(10.75D, 29.25D, 3.25D, 12.25D, 30.0D, 4.75D), Block.box(11.0D, 30.75D, 3.5D, 12.0D, 32.0D, 4.5D), Block.box(12.625D, 29.125D, 7.125D, 13.375D, 30.0D, 7.875D), Block.box(12.5D, 31.0D, 7.0D, 13.5D, 31.5D, 8.0D), Block.box(9.75D, 29.25D, 11.25D, 11.25D, 30.0D, 12.75D), Block.box(10.0D, 30.75D, 11.5D, 11.0D, 32.0D, 12.5D), Block.box(10.75D, 22.25D, 2.25D, 12.25D, 23.0D, 5.75D), Block.box(11.0D, 23.75D, 4.5D, 12.0D, 25.0D, 5.5D), Block.box(11.75D, 22.25D, 7.25D, 13.25D, 25.0D, 8.75D), Block.box(12.0D, 25.75D, 7.5D, 13.0D, 27.0D, 8.5D), Block.box(10.0D, 22.25D, 10.25D, 13.5D, 24.0D, 13.75D), Block.box(10.75D, 24.75D, 11.0D, 12.75D, 26.0D, 13.0D), Block.box(9.75D, 15.25D, 3.25D, 11.25D, 17.0D, 4.75D), Block.box(10.0D, 18.75D, 3.5D, 11.0D, 20.0D, 4.5D), Block.box(10.75D, 15.25D, 6.25D, 13.25D, 16.0D, 8.75D), Block.box(11.5D, 17.75D, 7.0D, 12.5D, 19.0D, 8.0D), Block.box(9.625D, 15.125D, 10.125D, 10.375D, 17.0D, 10.875D), Block.box(9.5D, 18.0D, 10.0D, 10.5D, 18.5D, 11.0D), Block.box(11.625D, 15.125D, 12.125D, 12.375D, 18.0D, 12.875D), Block.box(11.5D, 19.0D, 12.0D, 12.5D, 19.5D, 13.0D), Block.box(8.5D, 28.0D, 1.0D, 14.5D, 29.0D, 15.0D), Block.box(8.5D, 21.0D, 1.0D, 14.5D, 22.0D, 15.0D), Block.box(8.5D, 14.0D, 1.0D, 14.5D, 15.0D, 15.0D), Block.box(14.5D, 14.0D, 2.0D, 15.5D, 29.0D, 14.0D), Block.box(7.5D, 16.0D, 0.0D, 9.5D, 30.0D, 2.0D), Block.box(14.0D, 16.0D, 0.0D, 16.0D, 30.0D, 2.0D), Block.box(14.0D, 16.0D, 14.0D, 16.0D, 30.0D, 16.0D), Block.box(7.5D, 16.0D, 14.0D, 9.5D, 30.0D, 16.0D), Block.box(10.5D, 29.0D, 3.0D, 12.5D, 31.0D, 5.0D), Block.box(12.5D, 29.0D, 7.0D, 13.5D, 31.0D, 8.0D), Block.box(9.5D, 29.0D, 11.0D, 11.5D, 31.0D, 13.0D), Block.box(10.5D, 22.0D, 2.0D, 12.5D, 24.0D, 6.0D), Block.box(11.5D, 22.0D, 7.0D, 13.5D, 26.0D, 9.0D), Block.box(9.75D, 22.0D, 10.0D, 13.75D, 25.0D, 14.0D), Block.box(9.5D, 15.0D, 3.0D, 11.5D, 19.0D, 5.0D), Block.box(10.5D, 15.0D, 6.0D, 13.5D, 18.0D, 9.0D), Block.box(9.5D, 15.0D, 10.0D, 10.5D, 18.0D, 11.0D), Block.box(11.5D, 15.0D, 12.0D, 12.5D, 19.0D, 13.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
	}

	public static class KilnShapes {
		public static final VoxelShape UPPER_NORTH = Stream.of(Block.box(3.0D, -2.0D, 6.0D, 6.0D, 0.0D, 10.0D), Block.box(10.0D, -2.0D, 6.0D, 13.0D, 0.0D, 10.0D), Block.box(3.0D, -2.0D, 10.0D, 13.0D, 0.0D, 13.0D), Block.box(3.0D, -2.0D, 3.0D, 13.0D, 0.0D, 6.0D), Block.box(6.0D, -6.0D, 10.0D, 10.0D, -2.0D, 14.0D), Block.box(2.0D, -6.0D, 2.0D, 6.0D, -2.0D, 14.0D), Block.box(10.0D, -6.0D, 2.0D, 14.0D, -2.0D, 14.0D), Block.box(2.0D, -8.0D, 2.0D, 14.0D, -6.0D, 14.0D), Block.box(6.0D, -13.0D, 10.0D, 10.0D, -8.0D, 15.0D), Block.box(1.0D, -13.0D, 1.0D, 6.0D, -8.0D, 15.0D), Block.box(10.0D, -13.0D, 1.0D, 15.0D, -8.0D, 15.0D), Block.box(1.0D, -16.0D, 1.0D, 15.0D, -13.0D, 15.0D), Block.box(3.0D, 0.0D, 10.0D, 13.0D, 14.0D, 13.0D), Block.box(3.0D, 0.0D, 3.0D, 13.0D, 14.0D, 6.0D), Block.box(10.0D, 0.0D, 6.0D, 13.0D, 14.0D, 10.0D), Block.box(3.0D, 0.0D, 6.0D, 6.0D, 14.0D, 10.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape UPPER_EAST = Stream.of(Block.box(6.0D, -2.0D, 3.0D, 10.0D, 0.0D, 6.0D), Block.box(6.0D, -2.0D, 10.0D, 10.0D, 0.0D, 13.0D), Block.box(3.0D, -2.0D, 3.0D, 6.0D, 0.0D, 13.0D), Block.box(10.0D, -2.0D, 3.0D, 13.0D, 0.0D, 13.0D), Block.box(2.0D, -6.0D, 6.0D, 6.0D, -2.0D, 10.0D), Block.box(2.0D, -6.0D, 2.0D, 14.0D, -2.0D, 6.0D), Block.box(2.0D, -6.0D, 10.0D, 14.0D, -2.0D, 14.0D), Block.box(2.0D, -8.0D, 2.0D, 14.0D, -6.0D, 14.0D), Block.box(1.0D, -13.0D, 6.0D, 6.0D, -8.0D, 10.0D), Block.box(1.0D, -13.0D, 1.0D, 15.0D, -8.0D, 6.0D), Block.box(1.0D, -13.0D, 10.0D, 15.0D, -8.0D, 15.0D), Block.box(1.0D, -16.0D, 1.0D, 15.0D, -13.0D, 15.0D), Block.box(3.0D, 0.0D, 3.0D, 6.0D, 14.0D, 13.0D), Block.box(10.0D, 0.0D, 3.0D, 13.0D, 14.0D, 13.0D), Block.box(6.0D, 0.0D, 10.0D, 10.0D, 14.0D, 13.0D), Block.box(6.0D, 0.0D, 3.0D, 10.0D, 14.0D, 6.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape UPPER_SOUTH = Stream.of(Block.box(10.0D, -2.0D, 6.0D, 13.0D, 0.0D, 10.0D), Block.box(3.0D, -2.0D, 6.0D, 6.0D, 0.0D, 10.0D), Block.box(3.0D, -2.0D, 3.0D, 13.0D, 0.0D, 6.0D), Block.box(3.0D, -2.0D, 10.0D, 13.0D, 0.0D, 13.0D), Block.box(6.0D, -6.0D, 2.0D, 10.0D, -2.0D, 6.0D), Block.box(10.0D, -6.0D, 2.0D, 14.0D, -2.0D, 14.0D), Block.box(2.0D, -6.0D, 2.0D, 6.0D, -2.0D, 14.0D), Block.box(2.0D, -8.0D, 2.0D, 14.0D, -6.0D, 14.0D), Block.box(6.0D, -13.0D, 1.0D, 10.0D, -8.0D, 6.0D), Block.box(10.0D, -13.0D, 1.0D, 15.0D, -8.0D, 15.0D), Block.box(1.0D, -13.0D, 1.0D, 6.0D, -8.0D, 15.0D), Block.box(1.0D, -16.0D, 1.0D, 15.0D, -13.0D, 15.0D), Block.box(3.0D, 0.0D, 3.0D, 13.0D, 14.0D, 6.0D), Block.box(3.0D, 0.0D, 10.0D, 13.0D, 14.0D, 13.0D), Block.box(3.0D, 0.0D, 6.0D, 6.0D, 14.0D, 10.0D), Block.box(10.0D, 0.0D, 6.0D, 13.0D, 14.0D, 10.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape UPPER_WEST = Stream.of(Block.box(6.0D, -2.0D, 10.0D, 10.0D, 0.0D, 13.0D), Block.box(6.0D, -2.0D, 3.0D, 10.0D, 0.0D, 6.0D), Block.box(10.0D, -2.0D, 3.0D, 13.0D, 0.0D, 13.0D), Block.box(3.0D, -2.0D, 3.0D, 6.0D, 0.0D, 13.0D), Block.box(10.0D, -6.0D, 6.0D, 14.0D, -2.0D, 10.0D), Block.box(2.0D, -6.0D, 10.0D, 14.0D, -2.0D, 14.0D), Block.box(2.0D, -6.0D, 2.0D, 14.0D, -2.0D, 6.0D), Block.box(2.0D, -8.0D, 2.0D, 14.0D, -6.0D, 14.0D), Block.box(10.0D, -13.0D, 6.0D, 15.0D, -8.0D, 10.0D), Block.box(1.0D, -13.0D, 10.0D, 15.0D, -8.0D, 15.0D), Block.box(1.0D, -13.0D, 1.0D, 15.0D, -8.0D, 6.0D), Block.box(1.0D, -16.0D, 1.0D, 15.0D, -13.0D, 15.0D), Block.box(10.0D, 0.0D, 3.0D, 13.0D, 14.0D, 13.0D), Block.box(3.0D, 0.0D, 3.0D, 6.0D, 14.0D, 13.0D), Block.box(6.0D, 0.0D, 3.0D, 10.0D, 14.0D, 6.0D), Block.box(6.0D, 0.0D, 10.0D, 10.0D, 14.0D, 13.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape LOWER_NORTH = Stream.of(Block.box(3.0D, 14.0D, 6.0D, 6.0D, 16.0D, 10.0D), Block.box(10.0D, 14.0D, 6.0D, 13.0D, 16.0D, 10.0D), Block.box(3.0D, 14.0D, 10.0D, 13.0D, 16.0D, 13.0D), Block.box(3.0D, 14.0D, 3.0D, 13.0D, 16.0D, 6.0D), Block.box(6.0D, 10.0D, 10.0D, 10.0D, 14.0D, 14.0D), Block.box(2.0D, 10.0D, 2.0D, 6.0D, 14.0D, 14.0D), Block.box(10.0D, 10.0D, 2.0D, 14.0D, 14.0D, 14.0D), Block.box(2.0D, 8.0D, 2.0D, 14.0D, 10.0D, 14.0D), Block.box(6.0D, 3.0D, 10.0D, 10.0D, 8.0D, 15.0D), Block.box(1.0D, 3.0D, 1.0D, 6.0D, 8.0D, 15.0D), Block.box(10.0D, 3.0D, 1.0D, 15.0D, 8.0D, 15.0D), Block.box(1.0D, 0.0D, 1.0D, 15.0D, 3.0D, 15.0D), Block.box(3.0D, 16.0D, 10.0D, 13.0D, 30.0D, 13.0D), Block.box(3.0D, 16.0D, 3.0D, 13.0D, 30.0D, 6.0D), Block.box(10.0D, 16.0D, 6.0D, 13.0D, 30.0D, 10.0D), Block.box(3.0D, 16.0D, 6.0D, 6.0D, 30.0D, 10.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape LOWER_EAST = Stream.of(Block.box(6.0D, 14.0D, 3.0D, 10.0D, 16.0D, 6.0D), Block.box(6.0D, 14.0D, 10.0D, 10.0D, 16.0D, 13.0D), Block.box(3.0D, 14.0D, 3.0D, 6.0D, 16.0D, 13.0D), Block.box(10.0D, 14.0D, 3.0D, 13.0D, 16.0D, 13.0D), Block.box(2.0D, 10.0D, 6.0D, 6.0D, 14.0D, 10.0D), Block.box(2.0D, 10.0D, 2.0D, 14.0D, 14.0D, 6.0D), Block.box(2.0D, 10.0D, 10.0D, 14.0D, 14.0D, 14.0D), Block.box(2.0D, 8.0D, 2.0D, 14.0D, 10.0D, 14.0D), Block.box(1.0D, 3.0D, 6.0D, 6.0D, 8.0D, 10.0D), Block.box(1.0D, 3.0D, 1.0D, 15.0D, 8.0D, 6.0D), Block.box(1.0D, 3.0D, 10.0D, 15.0D, 8.0D, 15.0D), Block.box(1.0D, 0.0D, 1.0D, 15.0D, 3.0D, 15.0D), Block.box(3.0D, 16.0D, 3.0D, 6.0D, 30.0D, 13.0D), Block.box(10.0D, 16.0D, 3.0D, 13.0D, 30.0D, 13.0D), Block.box(6.0D, 16.0D, 10.0D, 10.0D, 30.0D, 13.0D), Block.box(6.0D, 16.0D, 3.0D, 10.0D, 30.0D, 6.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape LOWER_SOUTH = Stream.of(Block.box(10.0D, 14.0D, 6.0D, 13.0D, 16.0D, 10.0D), Block.box(3.0D, 14.0D, 6.0D, 6.0D, 16.0D, 10.0D), Block.box(3.0D, 14.0D, 3.0D, 13.0D, 16.0D, 6.0D), Block.box(3.0D, 14.0D, 10.0D, 13.0D, 16.0D, 13.0D), Block.box(6.0D, 10.0D, 2.0D, 10.0D, 14.0D, 6.0D), Block.box(10.0D, 10.0D, 2.0D, 14.0D, 14.0D, 14.0D), Block.box(2.0D, 10.0D, 2.0D, 6.0D, 14.0D, 14.0D), Block.box(2.0D, 8.0D, 2.0D, 14.0D, 10.0D, 14.0D), Block.box(6.0D, 3.0D, 1.0D, 10.0D, 8.0D, 6.0D), Block.box(10.0D, 3.0D, 1.0D, 15.0D, 8.0D, 15.0D), Block.box(1.0D, 3.0D, 1.0D, 6.0D, 8.0D, 15.0D), Block.box(1.0D, 0.0D, 1.0D, 15.0D, 3.0D, 15.0D), Block.box(3.0D, 16.0D, 3.0D, 13.0D, 30.0D, 6.0D), Block.box(3.0D, 16.0D, 10.0D, 13.0D, 30.0D, 13.0D), Block.box(3.0D, 16.0D, 6.0D, 6.0D, 30.0D, 10.0D), Block.box(10.0D, 16.0D, 6.0D, 13.0D, 30.0D, 10.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape LOWER_WEST = Stream.of(Block.box(6.0D, 14.0D, 10.0D, 10.0D, 16.0D, 13.0D), Block.box(6.0D, 14.0D, 3.0D, 10.0D, 16.0D, 6.0D), Block.box(10.0D, 14.0D, 3.0D, 13.0D, 16.0D, 13.0D), Block.box(3.0D, 14.0D, 3.0D, 6.0D, 16.0D, 13.0D), Block.box(10.0D, 10.0D, 6.0D, 14.0D, 14.0D, 10.0D), Block.box(2.0D, 10.0D, 10.0D, 14.0D, 14.0D, 14.0D), Block.box(2.0D, 10.0D, 2.0D, 14.0D, 14.0D, 6.0D), Block.box(2.0D, 8.0D, 2.0D, 14.0D, 10.0D, 14.0D), Block.box(10.0D, 3.0D, 6.0D, 15.0D, 8.0D, 10.0D), Block.box(1.0D, 3.0D, 10.0D, 15.0D, 8.0D, 15.0D), Block.box(1.0D, 3.0D, 1.0D, 15.0D, 8.0D, 6.0D), Block.box(1.0D, 0.0D, 1.0D, 15.0D, 3.0D, 15.0D), Block.box(10.0D, 16.0D, 3.0D, 13.0D, 30.0D, 13.0D), Block.box(3.0D, 16.0D, 3.0D, 6.0D, 30.0D, 13.0D), Block.box(6.0D, 16.0D, 3.0D, 10.0D, 30.0D, 6.0D), Block.box(6.0D, 16.0D, 10.0D, 10.0D, 30.0D, 13.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
	}

	public static class TripleBarrelRackShapes {
		public static final VoxelShape BOTTOM_LEFT_NORTH = Stream.of(Block.box(0.0D, 0.0D, 0.0D, 16.0D, 16.0D, 16.0D), Block.box(-16.0D, 0.0D, 0.0D, 0.0D, 16.0D, 16.0D), Block.box(-8.0D, 16.0D, 0.0D, 8.0D, 29.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_LEFT_EAST = Stream.of(Block.box(0.0D, 0.0D, 0.0D, 16.0D, 16.0D, 16.0D), Block.box(0.0D, 0.0D, -16.0D, 16.0D, 16.0D, 0.0D), Block.box(0.0D, 16.0D, -8.0D, 16.0D, 29.0D, 8.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_LEFT_SOUTH = Stream.of(Block.box(0.0D, 0.0D, 0.0D, 16.0D, 16.0D, 16.0D), Block.box(16.0D, 0.0D, 0.0D, 32.0D, 16.0D, 16.0D), Block.box(8.0D, 16.0D, 0.0D, 24.0D, 29.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_LEFT_WEST = Stream.of(Block.box(0.0D, 0.0D, 0.0D, 16.0D, 16.0D, 16.0D), Block.box(0.0D, 0.0D, 16.0D, 16.0D, 16.0D, 32.0D), Block.box(0.0D, 16.0D, 8.0D, 16.0D, 29.0D, 24.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape BOTTOM_RIGHT_NORTH = Stream.of(Block.box(16.0D, 0.0D, 0.0D, 32.0D, 16.0D, 16.0D), Block.box(0.0D, 0.0D, 0.0D, 16.0D, 16.0D, 16.0D), Block.box(8.0D, 16.0D, 0.0D, 24.0D, 29.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_RIGHT_EAST = Stream.of(Block.box(0.0D, 0.0D, 16.0D, 16.0D, 16.0D, 32.0D), Block.box(0.0D, 0.0D, 0.0D, 16.0D, 16.0D, 16.0D), Block.box(0.0D, 16.0D, 8.0D, 16.0D, 29.0D, 24.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_RIGHT_SOUTH = Stream.of(Block.box(-16.0D, 0.0D, 0.0D, 0.0D, 16.0D, 16.0D), Block.box(0.0D, 0.0D, 0.0D, 16.0D, 16.0D, 16.0D), Block.box(-8.0D, 16.0D, 0.0D, 8.0D, 29.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape BOTTOM_RIGHT_WEST = Stream.of(Block.box(0.0D, 0.0D, -16.0D, 16.0D, 16.0D, 0.0D), Block.box(0.0D, 0.0D, 0.0D, 16.0D, 16.0D, 16.0D), Block.box(0.0D, 16.0D, -8.0D, 16.0D, 29.0D, 8.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape TOP_LEFT_NORTH = Stream.of(Block.box(0.0D, -16.0D, 0.0D, 16.0D, 0.0D, 16.0D), Block.box(-16.0D, -16.0D, 0.0D, 0.0D, 0.0D, 16.0D), Block.box(-8.0D, 0.0D, 0.0D, 8.0D, 13.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_LEFT_EAST = Stream.of(Block.box(0.0D, -16.0D, 0.0D, 16.0D, 0.0D, 16.0D), Block.box(0.0D, -16.0D, -16.0D, 16.0D, 0.0D, 0.0D), Block.box(0.0D, 0.0D, -8.0D, 16.0D, 13.0D, 8.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_LEFT_SOUTH = Stream.of(Block.box(0.0D, -16.0D, 0.0D, 16.0D, 0.0D, 16.0D), Block.box(16.0D, -16.0D, 0.0D, 32.0D, 0.0D, 16.0D), Block.box(8.0D, 0.0D, 0.0D, 24.0D, 13.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_LEFT_WEST = Stream.of(Block.box(0.0D, -16.0D, 0.0D, 16.0D, 0.0D, 16.0D), Block.box(0.0D, -16.0D, 16.0D, 16.0D, 0.0D, 32.0D), Block.box(0.0D, 0.0D, 8.0D, 16.0D, 13.0D, 24.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

		public static final VoxelShape TOP_RIGHT_NORTH = Stream.of(Block.box(16.0D, -16.0D, 0.0D, 32.0D, 0.0D, 16.0D), Block.box(0.0D, -16.0D, 0.0D, 16.0D, 0.0D, 16.0D), Block.box(8.0D, 0.0D, 0.0D, 24.0D, 13.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_RIGHT_EAST = Stream.of(Block.box(0.0D, -16.0D, 16.0D, 16.0D, 0.0D, 32.0D), Block.box(0.0D, -16.0D, 0.0D, 16.0D, 0.0D, 16.0D), Block.box(0.0D, 0.0D, 8.0D, 16.0D, 13.0D, 24.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_RIGHT_SOUTH = Stream.of(Block.box(-16.0D, -16.0D, 0.0D, 0.0D, 0.0D, 16.0D), Block.box(0.0D, -16.0D, 0.0D, 16.0D, 0.0D, 16.0D), Block.box(-8.0D, 0.0D, 0.0D, 8.0D, 13.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape TOP_RIGHT_WEST = Stream.of(Block.box(0.0D, -16.0D, -16.0D, 16.0D, 0.0D, 0.0D), Block.box(0.0D, -16.0D, 0.0D, 16.0D, 0.0D, 16.0D), Block.box(0.0D, 0.0D, -8.0D, 16.0D, 13.0D, 8.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
	}

	public static class TroughShapes {
		public static final VoxelShape NORTH = Stream.of(Block.box(1.0D, 4.0D, 8.0D, 15.0D, 5.0D, 9.0D), Block.box(15.0D, 4.0D, 8.0D, 16.0D, 5.0D, 16.0D), Block.box(1.0D, 4.0D, 15.0D, 15.0D, 5.0D, 16.0D), Block.box(0.0D, 4.0D, 8.0D, 1.0D, 5.0D, 16.0D), Block.box(1.0D, 1.0D, 8.0D, 15.0D, 4.0D, 9.0D), Block.box(15.0D, 1.0D, 8.0D, 16.0D, 4.0D, 16.0D), Block.box(1.0D, 1.0D, 15.0D, 15.0D, 4.0D, 16.0D), Block.box(0.0D, 1.0D, 8.0D, 1.0D, 4.0D, 16.0D), Block.box(0.0D, 0.0D, 8.0D, 16.0D, 1.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape EAST = Stream.of(Block.box(7.0D, 4.0D, 1.0D, 8.0D, 5.0D, 15.0D), Block.box(0.0D, 4.0D, 15.0D, 8.0D, 5.0D, 16.0D), Block.box(0.0D, 4.0D, 1.0D, 1.0D, 5.0D, 15.0D), Block.box(0.0D, 4.0D, 0.0D, 8.0D, 5.0D, 1.0D), Block.box(7.0D, 1.0D, 1.0D, 8.0D, 4.0D, 15.0D), Block.box(0.0D, 1.0D, 15.0D, 8.0D, 4.0D, 16.0D), Block.box(0.0D, 1.0D, 1.0D, 1.0D, 4.0D, 15.0D), Block.box(0.0D, 1.0D, 0.0D, 8.0D, 4.0D, 1.0D), Block.box(0.0D, 0.0D, 0.0D, 8.0D, 1.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape SOUTH = Stream.of(Block.box(1.0D, 4.0D, 7.0D, 15.0D, 5.0D, 8.0D), Block.box(0.0D, 4.0D, 0.0D, 1.0D, 5.0D, 8.0D), Block.box(1.0D, 4.0D, 0.0D, 15.0D, 5.0D, 1.0D), Block.box(15.0D, 4.0D, 0.0D, 16.0D, 5.0D, 8.0D), Block.box(1.0D, 1.0D, 7.0D, 15.0D, 4.0D, 8.0D), Block.box(0.0D, 1.0D, 0.0D, 1.0D, 4.0D, 8.0D), Block.box(1.0D, 1.0D, 0.0D, 15.0D, 4.0D, 1.0D), Block.box(15.0D, 1.0D, 0.0D, 16.0D, 4.0D, 8.0D), Block.box(0.0D, 0.0D, 0.0D, 16.0D, 1.0D, 8.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
		public static final VoxelShape WEST = Stream.of(Block.box(8.0D, 4.0D, 1.0D, 9.0D, 5.0D, 15.0D), Block.box(8.0D, 4.0D, 0.0D, 16.0D, 5.0D, 1.0D), Block.box(15.0D, 4.0D, 1.0D, 16.0D, 5.0D, 15.0D), Block.box(8.0D, 4.0D, 15.0D, 16.0D, 5.0D, 16.0D), Block.box(8.0D, 1.0D, 1.0D, 9.0D, 4.0D, 15.0D), Block.box(8.0D, 1.0D, 0.0D, 16.0D, 4.0D, 1.0D), Block.box(15.0D, 1.0D, 1.0D, 16.0D, 4.0D, 15.0D), Block.box(8.0D, 1.0D, 15.0D, 16.0D, 4.0D, 16.0D), Block.box(8.0D, 0.0D, 0.0D, 16.0D, 1.0D, 16.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();
	}

	public static class WallSignShapes {
		public static final VoxelShape CEILING_NORTH = Block.box(0.0D, 14.0D, 4.5D, 16.0D, 16.0D, 12.5D);
		public static final VoxelShape CEILING_EAST = Block.box(3.5D, 14.0D, 0.0D, 11.5D, 16.0D, 16.0D);
		public static final VoxelShape CEILING_SOUTH = Block.box(0.0D, 14.0D, 3.5D, 16.0D, 16.0D, 11.5D);
		public static final VoxelShape CEILING_WEST = Block.box(4.5D, 14.0D, 0.0D, 12.5D, 16.0D, 16.0D);

		public static final VoxelShape FLOOR_NORTH = Block.box(0.0D, 0.0D, 3.5D, 16.0D, 2.0D, 11.5D);
		public static final VoxelShape FLOOR_EAST = Block.box(4.5D, 0.0D, 0.0D, 12.5D, 2.0D, 16.0D);
		public static final VoxelShape FLOOR_SOUTH = Block.box(0.0D, 0.0D, 4.5D, 16.0D, 2.0D, 12.5D);
		public static final VoxelShape FLOOR_WEST = Block.box(3.5D, 0.0D, 0.0D, 11.5D, 2.0D, 16.0D);

		public static final VoxelShape WALL_NORTH = Block.box(0.0D, 4.5D, 14.0D, 16.0D, 12.5D, 16.0D);
		public static final VoxelShape WALL_EAST = Block.box(0.0D, 4.5D, 0.0D, 2.0D, 12.5D, 16.0D);
		public static final VoxelShape WALL_SOUTH = Block.box(0.0D, 4.5D, 0.0D, 16.0D, 12.5D, 2.0D);
		public static final VoxelShape WALL_WEST = Block.box(14.0D, 4.5D, 0.0D, 16.0D, 12.5D, 16.0D);
	}

	public static final VoxelShape HORIZONTAL_PANE = Block.box(0.0D, 7.0D, 0.0D, 16.0D, 9.0D, 16.0D);

	public static final VoxelShape STORAGE_VASE = Stream.of(Block.box(4.0D, 0.0D, 4.0D, 12.0D, 2.0D, 12.0D), Block.box(5.0D, 2.0D, 5.0D, 11.0D, 3.0D, 11.0D), Block.box(6.0D, 3.0D, 6.0D, 10.0D, 4.0D, 10.0D), Block.box(5.0D, 4.0D, 5.0D, 11.0D, 5.0D, 11.0D), Block.box(3.0D, 5.0D, 3.0D, 13.0D, 7.0D, 13.0D), Block.box(2.0D, 6.0D, 2.0D, 14.0D, 7.0D, 14.0D), Block.box(1.0D, 7.0D, 1.0D, 15.0D, 11.0D, 15.0D), Block.box(5.0D, 11.0D, 5.0D, 11.0D, 12.0D, 11.0D), Block.box(6.0D, 12.0D, 6.0D, 10.0D, 14.0D, 7.0D), Block.box(6.0D, 12.0D, 9.0D, 10.0D, 14.0D, 10.0D), Block.box(6.0D, 12.0D, 7.0D, 7.0D, 14.0D, 9.0D), Block.box(9.0D, 12.0D, 7.0D, 10.0D, 14.0D, 9.0D), Block.box(5.0D, 14.0D, 5.0D, 7.0D, 16.0D, 11.0D), Block.box(9.0D, 14.0D, 5.0D, 11.0D, 16.0D, 11.0D), Block.box(7.0D, 14.0D, 5.0D, 9.0D, 16.0D, 7.0D), Block.box(7.0D, 14.0D, 9.0D, 9.0D, 16.0D, 11.0D)).reduce((a, b) -> Shapes.join(a, b, BooleanOp.OR)).get();

	public static final VoxelShape NORTH = Block.box(4.0D, 4.0D, 8.0D, 12.0D, 12.0D, 16.0D);
	public static final VoxelShape EAST = Block.box(0.0D, 4.0D, 4.0D, 8.0D, 12.0D, 12.0D);
	public static final VoxelShape SOUTH = Block.box(4.0D, 4.0D, 0.0D, 12.0D, 12.0D, 8.0D);
	public static final VoxelShape WEST = Block.box(8.0D, 4.0D, 4.0D, 16.0D, 12.0D, 12.0D);
	public static final VoxelShape UP = Block.box(4.0D, 0.0D, 4.0D, 12.0D, 8.0D, 12.0D);
	public static final VoxelShape DOWN = Block.box(4.0D, 8.0D, 4.0D, 12.0D, 16.0D, 12.0D);

	public static final VoxelShape Y1 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 1.0D, 16.0D);
	public static final VoxelShape Y2 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 2.0D, 16.0D);
	public static final VoxelShape Y3 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 3.0D, 16.0D);
	public static final VoxelShape Y4 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 4.0D, 16.0D);
	public static final VoxelShape Y5 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 5.0D, 16.0D);
	public static final VoxelShape Y6 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 6.0D, 16.0D);
	public static final VoxelShape Y7 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 7.0D, 16.0D);
	public static final VoxelShape Y8 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 8.0D, 16.0D);
	public static final VoxelShape Y9 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 9.0D, 16.0D);
	public static final VoxelShape Y10 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 10.0D, 16.0D);
	public static final VoxelShape Y11 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 11.0D, 16.0D);
	public static final VoxelShape Y12 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 12.0D, 16.0D);
	public static final VoxelShape Y13 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 13.0D, 16.0D);
	public static final VoxelShape Y14 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 14.0D, 16.0D);
	public static final VoxelShape Y15 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 15.0D, 16.0D);
	public static final VoxelShape Y16 = Block.box(0.0D, 0.0D, 0.0D, 16.0D, 16.0D, 16.0D);

	public static final VoxelShape[] Y = new VoxelShape[] {
		IcariaShapes.Y2, IcariaShapes.Y4, IcariaShapes.Y6, IcariaShapes.Y8, IcariaShapes.Y10, IcariaShapes.Y12, IcariaShapes.Y14, IcariaShapes.Y16
	};

	public static final VoxelShape[] CAKE = new VoxelShape[] {
		Block.box(1.0D, 0.0D, 1.0D, 15.0D, 8.0D, 15.0D), Shapes.or(Block.box(1.0D, 0.0D, 8.0D, 15.0D, 8.0D, 15.0D), Block.box(8.0D, 0.0D, 1.0D, 15.0D, 8.0D, 8.0D)), Block.box(1.0D, 0.0D, 8.0D, 15.0D, 8.0D, 15.0D), Block.box(1.0D, 0.0D, 8.0D, 8.0D, 8.0D, 15.0D)
	};
}
